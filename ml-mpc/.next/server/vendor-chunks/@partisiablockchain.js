"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@partisiablockchain";
exports.ids = ["vendor-chunks/@partisiablockchain"];
exports.modules = {

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/AbstractReader.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/AbstractReader.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractReader = void 0;\nconst Abi_1 = __webpack_require__(/*! ./types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst StructTypeSpec_1 = __webpack_require__(/*! ./types/StructTypeSpec */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/StructTypeSpec.js\");\nconst ScValueAddress_1 = __webpack_require__(/*! ./value/ScValueAddress */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAddress.js\");\nconst ScValueBool_1 = __webpack_require__(/*! ./value/ScValueBool */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBool.js\");\nconst ScValueEnum_1 = __webpack_require__(/*! ./value/ScValueEnum */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueEnum.js\");\nconst ScValueNumber_1 = __webpack_require__(/*! ./value/ScValueNumber */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueNumber.js\");\nconst ScValueOption_1 = __webpack_require__(/*! ./value/ScValueOption */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueOption.js\");\nconst ScValueString_1 = __webpack_require__(/*! ./value/ScValueString */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueString.js\");\nconst ScValueStruct_1 = __webpack_require__(/*! ./value/ScValueStruct */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueStruct.js\");\nconst ScValueVector_1 = __webpack_require__(/*! ./value/ScValueVector */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueVector.js\");\nconst ScValueHash_1 = __webpack_require__(/*! ./value/ScValueHash */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueHash.js\");\nconst ScValuePublicKey_1 = __webpack_require__(/*! ./value/ScValuePublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValuePublicKey.js\");\nconst ScValueSignature_1 = __webpack_require__(/*! ./value/ScValueSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSignature.js\");\nconst ScValueBlsPublicKey_1 = __webpack_require__(/*! ./value/ScValueBlsPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsPublicKey.js\");\nconst ScValueBlsSignature_1 = __webpack_require__(/*! ./value/ScValueBlsSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsSignature.js\");\nconst ScValueArray_1 = __webpack_require__(/*! ./value/ScValueArray */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueArray.js\");\nclass AbstractReader {\n    constructor(input, namedTypes) {\n        this.input = input;\n        this.namedTypes = namedTypes;\n    }\n    readGeneric(spec) {\n        const typeIndex = spec.typeIndex;\n        if (typeIndex === Abi_1.TypeIndex.Map) {\n            return this.readMap(spec);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Set) {\n            return this.readSet(spec);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Named) {\n            return this.readNamedType(spec);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Vec) {\n            return this.readVec(spec);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Option) {\n            return this.readOptional(spec);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.SizedArray) {\n            return this.readSizedArray(spec);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.AvlTreeMap) {\n            return this.readAvlTreeMap(spec);\n        }\n        else {\n            return this.readSimpleType(typeIndex);\n        }\n    }\n    readSimpleType(typeIndex) {\n        if (typeIndex === Abi_1.TypeIndex.String) {\n            const value = this.input.readString();\n            return new ScValueString_1.ScValueString(value);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.bool) {\n            const value = this.input.readBoolean();\n            return new ScValueBool_1.ScValueBool(value);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Address) {\n            const value = this.input.readBytes(ScValueAddress_1.ScValueAddress.ADDRESS_LENGTH);\n            return new ScValueAddress_1.ScValueAddress(value);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Hash) {\n            const value = this.input.readBytes(ScValueHash_1.ScValueHash.HASH_LENGTH);\n            return new ScValueHash_1.ScValueHash(value);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.PublicKey) {\n            const value = this.input.readBytes(ScValuePublicKey_1.ScValuePublicKey.PUBLIC_KEY_LENGTH);\n            return new ScValuePublicKey_1.ScValuePublicKey(value);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Signature) {\n            const value = this.input.readBytes(ScValueSignature_1.ScValueSignature.SIGNATURE_LENGTH);\n            return new ScValueSignature_1.ScValueSignature(value);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.BlsPublicKey) {\n            const value = this.input.readBytes(ScValueBlsPublicKey_1.ScValueBlsPublicKey.BLS_PUBLIC_KEY_LENGTH);\n            return new ScValueBlsPublicKey_1.ScValueBlsPublicKey(value);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.BlsSignature) {\n            const value = this.input.readBytes(ScValueBlsSignature_1.ScValueBlsSignature.BLS_SIGNATURE_LENGTH);\n            return new ScValueBlsSignature_1.ScValueBlsSignature(value);\n        }\n        else {\n            return new ScValueNumber_1.ScValueNumber(typeIndex, this.readNumber(typeIndex));\n        }\n    }\n    readNumber(typeIndex) {\n        if (typeIndex === Abi_1.TypeIndex.u8) {\n            return this.input.readU8();\n        }\n        else if (typeIndex === Abi_1.TypeIndex.i8) {\n            return this.input.readI8();\n        }\n        else if (typeIndex === Abi_1.TypeIndex.u16) {\n            return this.input.readU16();\n        }\n        else if (typeIndex === Abi_1.TypeIndex.i16) {\n            return this.input.readI16();\n        }\n        else if (typeIndex === Abi_1.TypeIndex.u32) {\n            return this.input.readU32();\n        }\n        else if (typeIndex === Abi_1.TypeIndex.i32) {\n            return this.input.readI32();\n        }\n        else if (typeIndex === Abi_1.TypeIndex.u64) {\n            return this.input.readU64();\n        }\n        else if (typeIndex === Abi_1.TypeIndex.i64) {\n            return this.input.readI64();\n        }\n        else if (typeIndex === Abi_1.TypeIndex.u128) {\n            return this.input.readUnsignedBigInteger(16);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.u256) {\n            return this.input.readUnsignedBigInteger(32);\n        }\n        else {\n            return this.input.readSignedBigInteger(16);\n        }\n    }\n    readOptional(option) {\n        const hasElement = this.input.readBoolean();\n        if (hasElement) {\n            return new ScValueOption_1.ScValueOption(this.readGeneric(option.valueType));\n        }\n        else {\n            return new ScValueOption_1.ScValueOption(null);\n        }\n    }\n    readVec(spec) {\n        const length = this.input.readU32();\n        const elements = this.readElements(spec.valueType, length);\n        return new ScValueVector_1.ScValueVector(elements);\n    }\n    readSizedArray(spec) {\n        const elements = this.readElements(spec.valueType, spec.length);\n        return new ScValueArray_1.ScValueArray(elements);\n    }\n    readElements(valueType, length) {\n        const vec = [];\n        for (let i = 0; i < length; i++) {\n            vec.push(this.readGeneric(valueType));\n        }\n        return vec;\n    }\n    readNamedType(spec) {\n        const typeSpec = this.namedTypes[spec.index];\n        if (typeSpec instanceof StructTypeSpec_1.StructTypeSpec) {\n            return this.readStruct(typeSpec);\n        }\n        else {\n            return this.readEnum(typeSpec);\n        }\n    }\n    readStruct(typeSpec) {\n        const fieldsMap = new Map();\n        for (const field of typeSpec.fields) {\n            const value = this.readGeneric(field.type);\n            fieldsMap.set(field.name, value);\n        }\n        return new ScValueStruct_1.ScValueStruct(typeSpec.name, fieldsMap);\n    }\n    readEnum(typeSpec) {\n        const discriminant = this.input.readU8();\n        for (const variant of typeSpec.variants) {\n            if (variant.discriminant === discriminant) {\n                const typeSpec = this.namedTypes[variant.def.index];\n                return new ScValueEnum_1.ScValueEnum(typeSpec.name, this.readStruct(typeSpec));\n            }\n        }\n        throw new Error(`Undefined EnumVariant ${discriminant} used in ${typeSpec.name}`);\n    }\n}\nexports.AbstractReader = AbstractReader;\n//# sourceMappingURL=AbstractReader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/AbstractReader.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/BigEndianReader.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/BigEndianReader.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BigEndianReader = void 0;\nconst AbiByteInput_1 = __webpack_require__(/*! ./abistreams/AbiByteInput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteInput.js\");\nconst AbstractReader_1 = __webpack_require__(/*! ./AbstractReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/AbstractReader.js\");\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nclass BigEndianReader extends AbstractReader_1.AbstractReader {\n    constructor(input, contract) {\n        super(new AbiByteInput_1.AbiByteInput(new bitmanipulation_ts_1.BigEndianByteInput(input)), contract.namedTypes);\n    }\n    read(type) {\n        return this.readGeneric(type);\n    }\n    readMap() {\n        throw new Error(\"Type Map is not supported in rpc\");\n    }\n    readSet() {\n        throw new Error(\"Type Set is not supported in rpc\");\n    }\n    readAvlTreeMap() {\n        throw new Error(\"Type AvlTreeMap is not supported in rpc\");\n    }\n}\nexports.BigEndianReader = BigEndianReader;\n//# sourceMappingURL=BigEndianReader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vQmlnRW5kaWFuUmVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2Qix1QkFBdUIsbUJBQU8sQ0FBQyx3SUFBMkI7QUFDMUQseUJBQXlCLG1CQUFPLENBQUMsc0hBQWtCO0FBQ25ELDZCQUE2QixtQkFBTyxDQUFDLGlJQUFtQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vQmlnRW5kaWFuUmVhZGVyLmpzPzE1ODQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJpZ0VuZGlhblJlYWRlciA9IHZvaWQgMDtcbmNvbnN0IEFiaUJ5dGVJbnB1dF8xID0gcmVxdWlyZShcIi4vYWJpc3RyZWFtcy9BYmlCeXRlSW5wdXRcIik7XG5jb25zdCBBYnN0cmFjdFJlYWRlcl8xID0gcmVxdWlyZShcIi4vQWJzdHJhY3RSZWFkZXJcIik7XG5jb25zdCBiaXRtYW5pcHVsYXRpb25fdHNfMSA9IHJlcXVpcmUoXCJAc2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHNcIik7XG5jbGFzcyBCaWdFbmRpYW5SZWFkZXIgZXh0ZW5kcyBBYnN0cmFjdFJlYWRlcl8xLkFic3RyYWN0UmVhZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCwgY29udHJhY3QpIHtcbiAgICAgICAgc3VwZXIobmV3IEFiaUJ5dGVJbnB1dF8xLkFiaUJ5dGVJbnB1dChuZXcgYml0bWFuaXB1bGF0aW9uX3RzXzEuQmlnRW5kaWFuQnl0ZUlucHV0KGlucHV0KSksIGNvbnRyYWN0Lm5hbWVkVHlwZXMpO1xuICAgIH1cbiAgICByZWFkKHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVhZEdlbmVyaWModHlwZSk7XG4gICAgfVxuICAgIHJlYWRNYXAoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlR5cGUgTWFwIGlzIG5vdCBzdXBwb3J0ZWQgaW4gcnBjXCIpO1xuICAgIH1cbiAgICByZWFkU2V0KCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUeXBlIFNldCBpcyBub3Qgc3VwcG9ydGVkIGluIHJwY1wiKTtcbiAgICB9XG4gICAgcmVhZEF2bFRyZWVNYXAoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlR5cGUgQXZsVHJlZU1hcCBpcyBub3Qgc3VwcG9ydGVkIGluIHJwY1wiKTtcbiAgICB9XG59XG5leHBvcnRzLkJpZ0VuZGlhblJlYWRlciA9IEJpZ0VuZGlhblJlYWRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJpZ0VuZGlhblJlYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/BigEndianReader.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/HashMap.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/HashMap.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HashMap = void 0;\nconst JsonValueConverter_1 = __webpack_require__(/*! ./value/JsonValueConverter */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/JsonValueConverter.js\");\nclass HashMap {\n    constructor(entries) {\n        if (typeof entries === \"undefined\") {\n            this.elements = new Map();\n            this.size = 0;\n        }\n        else {\n            const newEntries = entries.map(([k, v]) => [\n                JsonValueConverter_1.JsonValueConverter.toJsonString(k),\n                [k, v],\n            ]);\n            this.elements = new Map(newEntries);\n            this.size = this.elements.size;\n        }\n    }\n    [(Symbol.toStringTag, Symbol.iterator)]() {\n        return this.elements.values();\n    }\n    clear() {\n        this.elements = new Map();\n        this.size = 0;\n    }\n    delete(key) {\n        const b = this.elements.delete(JsonValueConverter_1.JsonValueConverter.toJsonString(key));\n        this.size = this.elements.size;\n        return b;\n    }\n    entries() {\n        return this.elements.values();\n    }\n    forEach(callbackfn) {\n        this.elements.forEach(([k, v]) => callbackfn(v, k, this));\n    }\n    get(key) {\n        const x = this.elements.get(JsonValueConverter_1.JsonValueConverter.toJsonString(key));\n        return x !== undefined ? x[1] : undefined;\n    }\n    has(key) {\n        return this.elements.has(JsonValueConverter_1.JsonValueConverter.toJsonString(key));\n    }\n    keys() {\n        throw new Error(\"Not implemented\");\n    }\n    set(key, value) {\n        this.elements.set(JsonValueConverter_1.JsonValueConverter.toJsonString(key), [key, value]);\n        this.size = this.elements.size;\n        return this;\n    }\n    values() {\n        throw new Error(\"Not implemented\");\n    }\n}\nexports.HashMap = HashMap;\n//# sourceMappingURL=HashMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vSGFzaE1hcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsNkJBQTZCLG1CQUFPLENBQUMsMElBQTRCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vSGFzaE1hcC5qcz85YzMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IYXNoTWFwID0gdm9pZCAwO1xuY29uc3QgSnNvblZhbHVlQ29udmVydGVyXzEgPSByZXF1aXJlKFwiLi92YWx1ZS9Kc29uVmFsdWVDb252ZXJ0ZXJcIik7XG5jbGFzcyBIYXNoTWFwIHtcbiAgICBjb25zdHJ1Y3RvcihlbnRyaWVzKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZW50cmllcyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdGhpcy5lbGVtZW50cyA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgIHRoaXMuc2l6ZSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBuZXdFbnRyaWVzID0gZW50cmllcy5tYXAoKFtrLCB2XSkgPT4gW1xuICAgICAgICAgICAgICAgIEpzb25WYWx1ZUNvbnZlcnRlcl8xLkpzb25WYWx1ZUNvbnZlcnRlci50b0pzb25TdHJpbmcoayksXG4gICAgICAgICAgICAgICAgW2ssIHZdLFxuICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzID0gbmV3IE1hcChuZXdFbnRyaWVzKTtcbiAgICAgICAgICAgIHRoaXMuc2l6ZSA9IHRoaXMuZWxlbWVudHMuc2l6ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBbKFN5bWJvbC50b1N0cmluZ1RhZywgU3ltYm9sLml0ZXJhdG9yKV0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnRzLnZhbHVlcygpO1xuICAgIH1cbiAgICBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5zaXplID0gMDtcbiAgICB9XG4gICAgZGVsZXRlKGtleSkge1xuICAgICAgICBjb25zdCBiID0gdGhpcy5lbGVtZW50cy5kZWxldGUoSnNvblZhbHVlQ29udmVydGVyXzEuSnNvblZhbHVlQ29udmVydGVyLnRvSnNvblN0cmluZyhrZXkpKTtcbiAgICAgICAgdGhpcy5zaXplID0gdGhpcy5lbGVtZW50cy5zaXplO1xuICAgICAgICByZXR1cm4gYjtcbiAgICB9XG4gICAgZW50cmllcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudHMudmFsdWVzKCk7XG4gICAgfVxuICAgIGZvckVhY2goY2FsbGJhY2tmbikge1xuICAgICAgICB0aGlzLmVsZW1lbnRzLmZvckVhY2goKFtrLCB2XSkgPT4gY2FsbGJhY2tmbih2LCBrLCB0aGlzKSk7XG4gICAgfVxuICAgIGdldChrZXkpIHtcbiAgICAgICAgY29uc3QgeCA9IHRoaXMuZWxlbWVudHMuZ2V0KEpzb25WYWx1ZUNvbnZlcnRlcl8xLkpzb25WYWx1ZUNvbnZlcnRlci50b0pzb25TdHJpbmcoa2V5KSk7XG4gICAgICAgIHJldHVybiB4ICE9PSB1bmRlZmluZWQgPyB4WzFdIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICBoYXMoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVsZW1lbnRzLmhhcyhKc29uVmFsdWVDb252ZXJ0ZXJfMS5Kc29uVmFsdWVDb252ZXJ0ZXIudG9Kc29uU3RyaW5nKGtleSkpO1xuICAgIH1cbiAgICBrZXlzKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfVxuICAgIHNldChrZXksIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudHMuc2V0KEpzb25WYWx1ZUNvbnZlcnRlcl8xLkpzb25WYWx1ZUNvbnZlcnRlci50b0pzb25TdHJpbmcoa2V5KSwgW2tleSwgdmFsdWVdKTtcbiAgICAgICAgdGhpcy5zaXplID0gdGhpcy5lbGVtZW50cy5zaXplO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgdmFsdWVzKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG4gICAgfVxufVxuZXhwb3J0cy5IYXNoTWFwID0gSGFzaE1hcDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUhhc2hNYXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/HashMap.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/RealBinderInvocationDeserialization.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/RealBinderInvocationDeserialization.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.REAL_BINDER_ABI = void 0;\nexports.REAL_BINDER_ABI = Buffer.from(\"50424341424909050005020000000006010000000f5368617265436f6d6d69746d656e740000000400000006686173685f311300000006686173685f321300000006686173685f331300000006686173685f34130200000009426174636854797065000000020000020100030100000009496e7075744d61736b000000000100000006547269706c6500000000010000000d436f6e7472616374537461746500000000010000000b536563726574566172496400000001000000067261775f696403000000130200000016636f6d6d69745f726573756c745f7661726961626c650000000000020000000f6f6e5f636861696e5f6f75747075740100000002000000096f75747075745f696403000000067368617265730e010200000013756e61626c655f746f5f63616c63756c61746502000000010000000d63616c63756c6174655f666f720402000000116f70656e5f6d61736b65645f696e70757403000000020000000b7661726961626c655f6964030000000c6d61736b65645f696e7075740e01020000001e7a65726f5f6b6e6f776c656467655f696e7075745f6f66665f636861696e040000000300000010696e7075745f6269745f6c656e6774680e030000001073686172655f636f6d6d69746d656e740000000000037270630e01020000001d7a65726f5f6b6e6f776c656467655f696e7075745f6f6e5f636861696e050000000400000010696e7075745f6269745f6c656e6774680e080000001073686172655f7075626c69635f6b65791400000010656e637279707465645f7368617265730e01000000037270630e01020000000c72656a6563745f696e70757406000000010000000b7661726961626c655f69640302000000136f70656e5f757365725f7661726961626c6573070000000300000005636f756e74030000000c7661726961626c655f69647303000000166164646974696f6e616c5f696e666f726d6174696f6e0e01020000001a6f70656e5f757365725f7661726961626c65735f7368617265730800000002000000096f75747075745f696403000000067368617265730e01020000000f6f70656e5f696e766f636174696f6e0900000001000000037270630e0102000000196164645f6174746573746174696f6e5f7369676e61747572650a0000000200000002696403000000097369676e61747572651502000000186765745f636f6d7075746174696f6e5f646561646c696e650b0000000002000000136f6e5f636f6d707574655f636f6d706c6574650c00000001000000036964730e0802000000176f6e5f6174746573746174696f6e5f636f6d706c6574650e000000010000000269640802000000136f6e5f7661726961626c65735f6f70656e65640d00000001000000036964730e0802000000146f6e5f7661726961626c655f696e7075747465640f000000010000000b7661726961626c655f696408020000000b6164645f6261746368657312000000020000000a62617463685f7479706500010000000862617463685f696408020000001e657874656e645f7a6b5f636f6d7075746174696f6e5f646561646c696e651300000004000000146d735f7065725f6761735f6e756d657261746f7204000000166d735f7065725f6761735f64656e6f6d696e61746f72040000000d6d696e5f657874656e73696f6e040000000d6d61785f657874656e73696f6e04010000000a696e697469616c697a65ffffffff0f000000000004\", \"hex\");\n//# sourceMappingURL=RealBinderInvocationDeserialization.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vUmVhbEJpbmRlckludm9jYXRpb25EZXNlcmlhbGl6YXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL1JlYWxCaW5kZXJJbnZvY2F0aW9uRGVzZXJpYWxpemF0aW9uLmpzPzljODkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJFQUxfQklOREVSX0FCSSA9IHZvaWQgMDtcbmV4cG9ydHMuUkVBTF9CSU5ERVJfQUJJID0gQnVmZmVyLmZyb20oXCI1MDQyNDM0MTQyNDkwOTA1MDAwNTAyMDAwMDAwMDAwNjAxMDAwMDAwMGY1MzY4NjE3MjY1NDM2ZjZkNmQ2OTc0NmQ2NTZlNzQwMDAwMDAwNDAwMDAwMDA2Njg2MTczNjg1ZjMxMTMwMDAwMDAwNjY4NjE3MzY4NWYzMjEzMDAwMDAwMDY2ODYxNzM2ODVmMzMxMzAwMDAwMDA2Njg2MTczNjg1ZjM0MTMwMjAwMDAwMDA5NDI2MTc0NjM2ODU0Nzk3MDY1MDAwMDAwMDIwMDAwMDIwMTAwMDMwMTAwMDAwMDA5NDk2ZTcwNzU3NDRkNjE3MzZiMDAwMDAwMDAwMTAwMDAwMDA2NTQ3MjY5NzA2YzY1MDAwMDAwMDAwMTAwMDAwMDBkNDM2ZjZlNzQ3MjYxNjM3NDUzNzQ2MTc0NjUwMDAwMDAwMDAxMDAwMDAwMGI1MzY1NjM3MjY1NzQ1NjYxNzI0OTY0MDAwMDAwMDEwMDAwMDAwNjcyNjE3NzVmNjk2NDAzMDAwMDAwMTMwMjAwMDAwMDE2NjM2ZjZkNmQ2OTc0NWY3MjY1NzM3NTZjNzQ1Zjc2NjE3MjY5NjE2MjZjNjUwMDAwMDAwMDAwMDIwMDAwMDAwZjZmNmU1ZjYzNjg2MTY5NmU1ZjZmNzU3NDcwNzU3NDAxMDAwMDAwMDIwMDAwMDAwOTZmNzU3NDcwNzU3NDVmNjk2NDAzMDAwMDAwMDY3MzY4NjE3MjY1NzMwZTAxMDIwMDAwMDAxMzc1NmU2MTYyNmM2NTVmNzQ2ZjVmNjM2MTZjNjM3NTZjNjE3NDY1MDIwMDAwMDAwMTAwMDAwMDBkNjM2MTZjNjM3NTZjNjE3NDY1NWY2NjZmNzIwNDAyMDAwMDAwMTE2ZjcwNjU2ZTVmNmQ2MTczNmI2NTY0NWY2OTZlNzA3NTc0MDMwMDAwMDAwMjAwMDAwMDBiNzY2MTcyNjk2MTYyNmM2NTVmNjk2NDAzMDAwMDAwMGM2ZDYxNzM2YjY1NjQ1ZjY5NmU3MDc1NzQwZTAxMDIwMDAwMDAxZTdhNjU3MjZmNWY2YjZlNmY3NzZjNjU2NDY3NjU1ZjY5NmU3MDc1NzQ1ZjZmNjY2NjVmNjM2ODYxNjk2ZTA0MDAwMDAwMDMwMDAwMDAxMDY5NmU3MDc1NzQ1ZjYyNjk3NDVmNmM2NTZlNjc3NDY4MGUwMzAwMDAwMDEwNzM2ODYxNzI2NTVmNjM2ZjZkNmQ2OTc0NmQ2NTZlNzQwMDAwMDAwMDAwMDM3MjcwNjMwZTAxMDIwMDAwMDAxZDdhNjU3MjZmNWY2YjZlNmY3NzZjNjU2NDY3NjU1ZjY5NmU3MDc1NzQ1ZjZmNmU1ZjYzNjg2MTY5NmUwNTAwMDAwMDA0MDAwMDAwMTA2OTZlNzA3NTc0NWY2MjY5NzQ1ZjZjNjU2ZTY3NzQ2ODBlMDgwMDAwMDAxMDczNjg2MTcyNjU1ZjcwNzU2MjZjNjk2MzVmNmI2NTc5MTQwMDAwMDAxMDY1NmU2MzcyNzk3MDc0NjU2NDVmNzM2ODYxNzI2NTczMGUwMTAwMDAwMDAzNzI3MDYzMGUwMTAyMDAwMDAwMGM3MjY1NmE2NTYzNzQ1ZjY5NmU3MDc1NzQwNjAwMDAwMDAxMDAwMDAwMGI3NjYxNzI2OTYxNjI2YzY1NWY2OTY0MDMwMjAwMDAwMDEzNmY3MDY1NmU1Zjc1NzM2NTcyNWY3NjYxNzI2OTYxNjI2YzY1NzMwNzAwMDAwMDAzMDAwMDAwMDU2MzZmNzU2ZTc0MDMwMDAwMDAwYzc2NjE3MjY5NjE2MjZjNjU1ZjY5NjQ3MzAzMDAwMDAwMTY2MTY0NjQ2OTc0Njk2ZjZlNjE2YzVmNjk2ZTY2NmY3MjZkNjE3NDY5NmY2ZTBlMDEwMjAwMDAwMDFhNmY3MDY1NmU1Zjc1NzM2NTcyNWY3NjYxNzI2OTYxNjI2YzY1NzM1ZjczNjg2MTcyNjU3MzA4MDAwMDAwMDIwMDAwMDAwOTZmNzU3NDcwNzU3NDVmNjk2NDAzMDAwMDAwMDY3MzY4NjE3MjY1NzMwZTAxMDIwMDAwMDAwZjZmNzA2NTZlNWY2OTZlNzY2ZjYzNjE3NDY5NmY2ZTA5MDAwMDAwMDEwMDAwMDAwMzcyNzA2MzBlMDEwMjAwMDAwMDE5NjE2NDY0NWY2MTc0NzQ2NTczNzQ2MTc0Njk2ZjZlNWY3MzY5Njc2ZTYxNzQ3NTcyNjUwYTAwMDAwMDAyMDAwMDAwMDI2OTY0MDMwMDAwMDAwOTczNjk2NzZlNjE3NDc1NzI2NTE1MDIwMDAwMDAxODY3NjU3NDVmNjM2ZjZkNzA3NTc0NjE3NDY5NmY2ZTVmNjQ2NTYxNjQ2YzY5NmU2NTBiMDAwMDAwMDAwMjAwMDAwMDEzNmY2ZTVmNjM2ZjZkNzA3NTc0NjU1ZjYzNmY2ZDcwNmM2NTc0NjUwYzAwMDAwMDAxMDAwMDAwMDM2OTY0NzMwZTA4MDIwMDAwMDAxNzZmNmU1ZjYxNzQ3NDY1NzM3NDYxNzQ2OTZmNmU1ZjYzNmY2ZDcwNmM2NTc0NjUwZTAwMDAwMDAxMDAwMDAwMDI2OTY0MDgwMjAwMDAwMDEzNmY2ZTVmNzY2MTcyNjk2MTYyNmM2NTczNWY2ZjcwNjU2ZTY1NjQwZDAwMDAwMDAxMDAwMDAwMDM2OTY0NzMwZTA4MDIwMDAwMDAxNDZmNmU1Zjc2NjE3MjY5NjE2MjZjNjU1ZjY5NmU3MDc1NzQ3NDY1NjQwZjAwMDAwMDAxMDAwMDAwMGI3NjYxNzI2OTYxNjI2YzY1NWY2OTY0MDgwMjAwMDAwMDBiNjE2NDY0NWY2MjYxNzQ2MzY4NjU3MzEyMDAwMDAwMDIwMDAwMDAwYTYyNjE3NDYzNjg1Zjc0Nzk3MDY1MDAwMTAwMDAwMDA4NjI2MTc0NjM2ODVmNjk2NDA4MDIwMDAwMDAxZTY1Nzg3NDY1NmU2NDVmN2E2YjVmNjM2ZjZkNzA3NTc0NjE3NDY5NmY2ZTVmNjQ2NTYxNjQ2YzY5NmU2NTEzMDAwMDAwMDQwMDAwMDAxNDZkNzM1ZjcwNjU3MjVmNjc2MTczNWY2ZTc1NmQ2NTcyNjE3NDZmNzIwNDAwMDAwMDE2NmQ3MzVmNzA2NTcyNWY2NzYxNzM1ZjY0NjU2ZTZmNmQ2OTZlNjE3NDZmNzIwNDAwMDAwMDBkNmQ2OTZlNWY2NTc4NzQ2NTZlNzM2OTZmNmUwNDAwMDAwMDBkNmQ2MTc4NWY2NTc4NzQ2NTZlNzM2OTZmNmUwNDAxMDAwMDAwMGE2OTZlNjk3NDY5NjE2YzY5N2E2NWZmZmZmZmZmMGYwMDAwMDAwMDAwMDRcIiwgXCJoZXhcIik7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWFsQmluZGVySW52b2NhdGlvbkRlc2VyaWFsaXphdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/RealBinderInvocationDeserialization.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/TransactionAndEventDeserialization.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/TransactionAndEventDeserialization.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TRANSACTION_AND_EVENT_ABI = void 0;\nexports.TRANSACTION_AND_EVENT_ABI = Buffer.from(\"UEJDQUJJCgIABQUAAAAAPAEAAAARU2lnbmVkVHJhbnNhY3Rpb24AAAACAAAACXNpZ25hdHVyZRUAAAAKaW5uZXJfcGFydAABAQAAAAlJbm5lclBhcnQAAAACAAAABGNvcmUAAgAAAAt0cmFuc2FjdGlvbgADAQAAABNDb3JlVHJhbnNhY3Rpb25QYXJ0AAAAAwAAAAVub25jZQkAAAANdmFsaWRfdG9fdGltZQkAAAAEY29zdAkBAAAAH0ludGVyYWN0V2l0aENvbnRyYWN0VHJhbnNhY3Rpb24AAAACAAAAC2NvbnRyYWN0X2lkDQAAAAdwYXlsb2FkDgEBAAAAD0V4ZWN1dGFibGVFdmVudAAAAAIAAAAMb3JpZ2luX3NoYXJkEgsAAAARZXZlbnRfdHJhbnNhY3Rpb24ABQEAAAAQRXZlbnRUcmFuc2FjdGlvbgAAAAcAAAAEaGFzaBMAAAALaW5uZXJfZXZlbnQABgAAAAtzaGFyZF9yb3V0ZQAwAAAADGNvbW1pdHRlZV9pZAkAAAASZ292ZXJuYW5jZV92ZXJzaW9uCQAAAAZoZWlnaHQBAAAAD3JldHVybl9lbnZlbG9wZRIAMQIAAAAKSW5uZXJFdmVudAAAAAQAAAcBAAgCAAkDAAoBAAAAC1RyYW5zYWN0aW9uAAAAAQAAABFpbm5lcl90cmFuc2FjdGlvbgALAQAAAAhDYWxsYmFjawAAAAEAAAAUY2FsbGJhY2tfdG9fY29udHJhY3QADAEAAAAGU3lzdGVtAAAAAQAAABJpbm5lcl9zeXN0ZW1fZXZlbnQADQEAAAAEU3luYwAAAAEAAAAKc3luY19ldmVudAAtAQAAABBJbm5lclRyYW5zYWN0aW9uAAAAAwAAAARmcm9tDQAAAARjb3N0CQAAAAt0cmFuc2FjdGlvbgAyAQAAABJDYWxsYmFja1RvQ29udHJhY3QAAAAFAAAAB2FkZHJlc3MNAAAAE2NhbGxiYWNrX2lkZW50aWZpZXITAAAABGZyb20NAAAABGNvc3QJAAAADGNhbGxiYWNrX3JwYw4BAgAAABBJbm5lclN5c3RlbUV2ZW50AAAADAAADgEADwIAEAMAEQQAEgUAEwYAFAcAFQgAFgkAFwoAGAsAGQEAAAANQ3JlYXRlQWNjb3VudAAAAAEAAAAUY3JlYXRlX2FjY291bnRfZXZlbnQAGgEAAAAOQ2hlY2tFeGlzdGVuY2UAAAABAAAAFWNoZWNrX2V4aXN0ZW5jZV9ldmVudAAbAQAAAApTZXRGZWF0dXJlAAAAAQAAABFzZXRfZmVhdHVyZV9ldmVudAAcAQAAABZVcGRhdGVMb2NhbFBsdWdpblN0YXRlAAAAAQAAAB91cGRhdGVfbG9jYWxfcGx1Z2luX3N0YXRlX2V2ZW50AB0BAAAAF1VwZGF0ZUdsb2JhbFBsdWdpblN0YXRlAAAAAQAAACB1cGRhdGVfZ2xvYmFsX3BsdWdpbl9zdGF0ZV9ldmVudAAkAQAAAAxVcGRhdGVQbHVnaW4AAAABAAAAE3VwZGF0ZV9wbHVnaW5fZXZlbnQAJgEAAAAIQ2FsbGJhY2sAAAABAAAADmNhbGxiYWNrX2V2ZW50ACcBAAAAC0NyZWF0ZVNoYXJkAAAAAQAAABJjcmVhdGVfc2hhcmRfZXZlbnQAKAEAAAALUmVtb3ZlU2hhcmQAAAABAAAAEnJlbW92ZV9zaGFyZF9ldmVudAApAQAAABxVcGRhdGVDb250ZXh0RnJlZVBsdWdpblN0YXRlAAAAAQAAACB1cGRhdGVfY29udGV4dF9mcmVlX3BsdWdpbl9zdGF0ZQAqAQAAABVVcGdyYWRlU3lzdGVtQ29udHJhY3QAAAABAAAAHXVwZ3JhZGVfc3lzdGVtX2NvbnRyYWN0X2V2ZW50ACsBAAAADlJlbW92ZUNvbnRyYWN0AAAAAQAAAA9yZW1vdmVfY29udHJhY3QALAEAAAASQ3JlYXRlQWNjb3VudEV2ZW50AAAAAQAAAAl0b19jcmVhdGUNAQAAABNDaGVja0V4aXN0ZW5jZUV2ZW50AAAAAQAAABtjb250cmFjdF9vcl9hY2NvdW50X2FkZHJlc3MNAQAAAA9TZXRGZWF0dXJlRXZlbnQAAAACAAAAA2tleQsAAAAFdmFsdWUSCwEAAAAbVXBkYXRlTG9jYWxQbHVnaW5TdGF0ZUV2ZW50AAAAAgAAABFjaGFpbl9wbHVnaW5fdHlwZQAfAAAABnVwZGF0ZQAeAQAAABZMb2NhbFBsdWdpblN0YXRlVXBkYXRlAAAAAgAAAAdjb250ZXh0DQAAAANycGMOAQIAAAAPQ2hhaW5QbHVnaW5UeXBlAAAABAAAIAEAIQIAIgMAIwEAAAAHQWNjb3VudAAAAAABAAAACUNvbnNlbnN1cwAAAAABAAAAB1JvdXRpbmcAAAAAAQAAABFTaGFyZWRPYmplY3RTdG9yZQAAAAABAAAAHFVwZGF0ZUdsb2JhbFBsdWdpblN0YXRlRXZlbnQAAAACAAAAEWNoYWluX3BsdWdpbl90eXBlAB8AAAAGdXBkYXRlACUBAAAAF0dsb2JhbFBsdWdpblN0YXRlVXBkYXRlAAAAAQAAAANycGMOAQEAAAARVXBkYXRlUGx1Z2luRXZlbnQAAAADAAAAEWNoYWluX3BsdWdpbl90eXBlAB8AAAADamFyEg4BAAAACmludm9jYXRpb24OAQEAAAANQ2FsbGJhY2tFdmVudAAAAAQAAAAPcmV0dXJuX2VudmVsb3BlADEAAAAVY29tcGxldGVkX3RyYW5zYWN0aW9uEwAAAAdzdWNjZXNzDAAAAAxyZXR1cm5fdmFsdWUOAQEAAAAQQ3JlYXRlU2hhcmRFdmVudAAAAAEAAAAIc2hhcmRfaWQLAQAAABBSZW1vdmVTaGFyZEV2ZW50AAAAAQAAAAhzaGFyZF9pZAsBAAAAHFVwZGF0ZUNvbnRleHRGcmVlUGx1Z2luU3RhdGUAAAACAAAAEWNoYWluX3BsdWdpbl90eXBlAB8AAAADcnBjDgEBAAAAGlVwZ3JhZGVTeXN0ZW1Db250cmFjdEV2ZW50AAAABQAAAAxjb250cmFjdF9qYXIOAQAAAApiaW5kZXJfamFyDgEAAAADYWJpDgEAAAADcnBjDgEAAAAQY29udHJhY3RfYWRkcmVzcw0BAAAADlJlbW92ZUNvbnRyYWN0AAAAAQAAAAhjb250cmFjdA0BAAAACVN5bmNFdmVudAAAAAMAAAAIYWNjb3VudHMOAC4AAAAJY29udHJhY3RzDgAvAAAADXN0YXRlX3N0b3JhZ2UOAQEAAAAPQWNjb3VudFRyYW5zZmVyAAAAAgAAAAdhZGRyZXNzDQAAAAVub25jZQkBAAAAEENvbnRyYWN0VHJhbnNmZXIAAAADAAAAB2FkZHJlc3MNAAAAE2NvbnRyYWN0X3N0YXRlX2hhc2gTAAAAEXBsdWdpbl9zdGF0ZV9oYXNoEwEAAAAKU2hhcmRSb3V0ZQAAAAIAAAAMdGFyZ2V0X3NoYXJkEgsAAAAFbm9uY2UJAQAAAA5SZXR1cm5FbnZlbG9wZQAAAAEAAAAIY29udHJhY3QNAgAAAAtUcmFuc2FjdGlvbgAAAAMAADMBADQCADUBAAAADkRlcGxveUNvbnRyYWN0AAAAAQAAABtjcmVhdGVfY29udHJhY3RfdHJhbnNhY3Rpb24ANgEAAAAQSW50ZXJhY3RDb250cmFjdAAAAAEAAAAiaW50ZXJhY3Rfd2l0aF9jb250cmFjdF90cmFuc2FjdGlvbgADAQAAAA9VcGdyYWRlQ29udHJhY3QAAAABAAAAHHVwZ3JhZGVfY29udHJhY3RfdHJhbnNhY3Rpb24ANwEAAAAZQ3JlYXRlQ29udHJhY3RUcmFuc2FjdGlvbgAAAAUAAAAHYWRkcmVzcw0AAAAKYmluZGVyX2phcg4BAAAADGNvbnRyYWN0X2phcg4BAAAAA2FiaQ4BAAAAA3JwYw4BAQAAABpVcGdyYWRlQ29udHJhY3RUcmFuc2FjdGlvbgAAAAUAAAAHYWRkcmVzcw0AAAAObmV3X2JpbmRlcl9qYXIOAQAAABBuZXdfY29udHJhY3RfamFyDgEAAAAHbmV3X2FiaQ4BAAAAA3JwYw4BAQAAAA1Db250cmFjdFN0YXRlAAAAAAEAAAALU2VjcmV0VmFySWQAAAABAAAABnJhd19pZAMBAAAAE0V2ZW50U3Vic2NyaXB0aW9uSWQAAAABAAAABnJhd19pZAgBAAAAD0V4dGVybmFsRXZlbnRJZAAAAAEAAAAGcmF3X2lkCAAAAAEBAAAACmluaXRpYWxpemX/////DwAAAAAAOA==\", \"base64\");\n//# sourceMappingURL=TransactionAndEventDeserialization.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vVHJhbnNhY3Rpb25BbmRFdmVudERlc2VyaWFsaXphdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUM7QUFDakMsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vVHJhbnNhY3Rpb25BbmRFdmVudERlc2VyaWFsaXphdGlvbi5qcz8zYmVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UUkFOU0FDVElPTl9BTkRfRVZFTlRfQUJJID0gdm9pZCAwO1xuZXhwb3J0cy5UUkFOU0FDVElPTl9BTkRfRVZFTlRfQUJJID0gQnVmZmVyLmZyb20oXCJVRUpEUVVKSkNnSUFCUVVBQUFBQVBBRUFBQUFSVTJsbmJtVmtWSEpoYm5OaFkzUnBiMjRBQUFBQ0FBQUFDWE5wWjI1aGRIVnlaUlVBQUFBS2FXNXVaWEpmY0dGeWRBQUJBUUFBQUFsSmJtNWxjbEJoY25RQUFBQUNBQUFBQkdOdmNtVUFBZ0FBQUF0MGNtRnVjMkZqZEdsdmJnQURBUUFBQUJORGIzSmxWSEpoYm5OaFkzUnBiMjVRWVhKMEFBQUFBd0FBQUFWdWIyNWpaUWtBQUFBTmRtRnNhV1JmZEc5ZmRHbHRaUWtBQUFBRVkyOXpkQWtCQUFBQUgwbHVkR1Z5WVdOMFYybDBhRU52Ym5SeVlXTjBWSEpoYm5OaFkzUnBiMjRBQUFBQ0FBQUFDMk52Ym5SeVlXTjBYMmxrRFFBQUFBZHdZWGxzYjJGa0RnRUJBQUFBRDBWNFpXTjFkR0ZpYkdWRmRtVnVkQUFBQUFJQUFBQU1iM0pwWjJsdVgzTm9ZWEprRWdzQUFBQVJaWFpsYm5SZmRISmhibk5oWTNScGIyNEFCUUVBQUFBUVJYWmxiblJVY21GdWMyRmpkR2x2YmdBQUFBY0FBQUFFYUdGemFCTUFBQUFMYVc1dVpYSmZaWFpsYm5RQUJnQUFBQXR6YUdGeVpGOXliM1YwWlFBd0FBQUFER052YlcxcGRIUmxaVjlwWkFrQUFBQVNaMjkyWlhKdVlXNWpaVjkyWlhKemFXOXVDUUFBQUFab1pXbG5hSFFCQUFBQUQzSmxkSFZ5Ymw5bGJuWmxiRzl3WlJJQU1RSUFBQUFLU1c1dVpYSkZkbVZ1ZEFBQUFBUUFBQWNCQUFnQ0FBa0RBQW9CQUFBQUMxUnlZVzV6WVdOMGFXOXVBQUFBQVFBQUFCRnBibTVsY2w5MGNtRnVjMkZqZEdsdmJnQUxBUUFBQUFoRFlXeHNZbUZqYXdBQUFBRUFBQUFVWTJGc2JHSmhZMnRmZEc5ZlkyOXVkSEpoWTNRQURBRUFBQUFHVTNsemRHVnRBQUFBQVFBQUFCSnBibTVsY2w5emVYTjBaVzFmWlhabGJuUUFEUUVBQUFBRVUzbHVZd0FBQUFFQUFBQUtjM2x1WTE5bGRtVnVkQUF0QVFBQUFCQkpibTVsY2xSeVlXNXpZV04wYVc5dUFBQUFBd0FBQUFSbWNtOXREUUFBQUFSamIzTjBDUUFBQUF0MGNtRnVjMkZqZEdsdmJnQXlBUUFBQUJKRFlXeHNZbUZqYTFSdlEyOXVkSEpoWTNRQUFBQUZBQUFBQjJGa1pISmxjM01OQUFBQUUyTmhiR3hpWVdOclgybGtaVzUwYVdacFpYSVRBQUFBQkdaeWIyME5BQUFBQkdOdmMzUUpBQUFBREdOaGJHeGlZV05yWDNKd1l3NEJBZ0FBQUJCSmJtNWxjbE41YzNSbGJVVjJaVzUwQUFBQURBQUFEZ0VBRHdJQUVBTUFFUVFBRWdVQUV3WUFGQWNBRlFnQUZna0FGd29BR0FzQUdRRUFBQUFOUTNKbFlYUmxRV05qYjNWdWRBQUFBQUVBQUFBVVkzSmxZWFJsWDJGalkyOTFiblJmWlhabGJuUUFHZ0VBQUFBT1EyaGxZMnRGZUdsemRHVnVZMlVBQUFBQkFBQUFGV05vWldOclgyVjRhWE4wWlc1alpWOWxkbVZ1ZEFBYkFRQUFBQXBUWlhSR1pXRjBkWEpsQUFBQUFRQUFBQkZ6WlhSZlptVmhkSFZ5WlY5bGRtVnVkQUFjQVFBQUFCWlZjR1JoZEdWTWIyTmhiRkJzZFdkcGJsTjBZWFJsQUFBQUFRQUFBQjkxY0dSaGRHVmZiRzlqWVd4ZmNHeDFaMmx1WDNOMFlYUmxYMlYyWlc1MEFCMEJBQUFBRjFWd1pHRjBaVWRzYjJKaGJGQnNkV2RwYmxOMFlYUmxBQUFBQVFBQUFDQjFjR1JoZEdWZloyeHZZbUZzWDNCc2RXZHBibDl6ZEdGMFpWOWxkbVZ1ZEFBa0FRQUFBQXhWY0dSaGRHVlFiSFZuYVc0QUFBQUJBQUFBRTNWd1pHRjBaVjl3YkhWbmFXNWZaWFpsYm5RQUpnRUFBQUFJUTJGc2JHSmhZMnNBQUFBQkFBQUFEbU5oYkd4aVlXTnJYMlYyWlc1MEFDY0JBQUFBQzBOeVpXRjBaVk5vWVhKa0FBQUFBUUFBQUJKamNtVmhkR1ZmYzJoaGNtUmZaWFpsYm5RQUtBRUFBQUFMVW1WdGIzWmxVMmhoY21RQUFBQUJBQUFBRW5KbGJXOTJaVjl6YUdGeVpGOWxkbVZ1ZEFBcEFRQUFBQnhWY0dSaGRHVkRiMjUwWlhoMFJuSmxaVkJzZFdkcGJsTjBZWFJsQUFBQUFRQUFBQ0IxY0dSaGRHVmZZMjl1ZEdWNGRGOW1jbVZsWDNCc2RXZHBibDl6ZEdGMFpRQXFBUUFBQUJWVmNHZHlZV1JsVTNsemRHVnRRMjl1ZEhKaFkzUUFBQUFCQUFBQUhYVndaM0poWkdWZmMzbHpkR1Z0WDJOdmJuUnlZV04wWDJWMlpXNTBBQ3NCQUFBQURsSmxiVzkyWlVOdmJuUnlZV04wQUFBQUFRQUFBQTl5WlcxdmRtVmZZMjl1ZEhKaFkzUUFMQUVBQUFBU1EzSmxZWFJsUVdOamIzVnVkRVYyWlc1MEFBQUFBUUFBQUFsMGIxOWpjbVZoZEdVTkFRQUFBQk5EYUdWamEwVjRhWE4wWlc1alpVVjJaVzUwQUFBQUFRQUFBQnRqYjI1MGNtRmpkRjl2Y2w5aFkyTnZkVzUwWDJGa1pISmxjM01OQVFBQUFBOVRaWFJHWldGMGRYSmxSWFpsYm5RQUFBQUNBQUFBQTJ0bGVRc0FBQUFGZG1Gc2RXVVNDd0VBQUFBYlZYQmtZWFJsVEc5allXeFFiSFZuYVc1VGRHRjBaVVYyWlc1MEFBQUFBZ0FBQUJGamFHRnBibDl3YkhWbmFXNWZkSGx3WlFBZkFBQUFCblZ3WkdGMFpRQWVBUUFBQUJaTWIyTmhiRkJzZFdkcGJsTjBZWFJsVlhCa1lYUmxBQUFBQWdBQUFBZGpiMjUwWlhoMERRQUFBQU55Y0dNT0FRSUFBQUFQUTJoaGFXNVFiSFZuYVc1VWVYQmxBQUFBQkFBQUlBRUFJUUlBSWdNQUl3RUFBQUFIUVdOamIzVnVkQUFBQUFBQkFBQUFDVU52Ym5ObGJuTjFjd0FBQUFBQkFBQUFCMUp2ZFhScGJtY0FBQUFBQVFBQUFCRlRhR0Z5WldSUFltcGxZM1JUZEc5eVpRQUFBQUFCQUFBQUhGVndaR0YwWlVkc2IySmhiRkJzZFdkcGJsTjBZWFJsUlhabGJuUUFBQUFDQUFBQUVXTm9ZV2x1WDNCc2RXZHBibDkwZVhCbEFCOEFBQUFHZFhCa1lYUmxBQ1VCQUFBQUYwZHNiMkpoYkZCc2RXZHBibE4wWVhSbFZYQmtZWFJsQUFBQUFRQUFBQU55Y0dNT0FRRUFBQUFSVlhCa1lYUmxVR3gxWjJsdVJYWmxiblFBQUFBREFBQUFFV05vWVdsdVgzQnNkV2RwYmw5MGVYQmxBQjhBQUFBRGFtRnlFZzRCQUFBQUNtbHVkbTlqWVhScGIyNE9BUUVBQUFBTlEyRnNiR0poWTJ0RmRtVnVkQUFBQUFRQUFBQVBjbVYwZFhKdVgyVnVkbVZzYjNCbEFERUFBQUFWWTI5dGNHeGxkR1ZrWDNSeVlXNXpZV04wYVc5dUV3QUFBQWR6ZFdOalpYTnpEQUFBQUF4eVpYUjFjbTVmZG1Gc2RXVU9BUUVBQUFBUVEzSmxZWFJsVTJoaGNtUkZkbVZ1ZEFBQUFBRUFBQUFJYzJoaGNtUmZhV1FMQVFBQUFCQlNaVzF2ZG1WVGFHRnlaRVYyWlc1MEFBQUFBUUFBQUFoemFHRnlaRjlwWkFzQkFBQUFIRlZ3WkdGMFpVTnZiblJsZUhSR2NtVmxVR3gxWjJsdVUzUmhkR1VBQUFBQ0FBQUFFV05vWVdsdVgzQnNkV2RwYmw5MGVYQmxBQjhBQUFBRGNuQmpEZ0VCQUFBQUdsVndaM0poWkdWVGVYTjBaVzFEYjI1MGNtRmpkRVYyWlc1MEFBQUFCUUFBQUF4amIyNTBjbUZqZEY5cVlYSU9BUUFBQUFwaWFXNWtaWEpmYW1GeURnRUFBQUFEWVdKcERnRUFBQUFEY25CakRnRUFBQUFRWTI5dWRISmhZM1JmWVdSa2NtVnpjdzBCQUFBQURsSmxiVzkyWlVOdmJuUnlZV04wQUFBQUFRQUFBQWhqYjI1MGNtRmpkQTBCQUFBQUNWTjVibU5GZG1WdWRBQUFBQU1BQUFBSVlXTmpiM1Z1ZEhNT0FDNEFBQUFKWTI5dWRISmhZM1J6RGdBdkFBQUFEWE4wWVhSbFgzTjBiM0poWjJVT0FRRUFBQUFQUVdOamIzVnVkRlJ5WVc1elptVnlBQUFBQWdBQUFBZGhaR1J5WlhOekRRQUFBQVZ1YjI1alpRa0JBQUFBRUVOdmJuUnlZV04wVkhKaGJuTm1aWElBQUFBREFBQUFCMkZrWkhKbGMzTU5BQUFBRTJOdmJuUnlZV04wWDNOMFlYUmxYMmhoYzJnVEFBQUFFWEJzZFdkcGJsOXpkR0YwWlY5b1lYTm9Fd0VBQUFBS1UyaGhjbVJTYjNWMFpRQUFBQUlBQUFBTWRHRnlaMlYwWDNOb1lYSmtFZ3NBQUFBRmJtOXVZMlVKQVFBQUFBNVNaWFIxY201RmJuWmxiRzl3WlFBQUFBRUFBQUFJWTI5dWRISmhZM1FOQWdBQUFBdFVjbUZ1YzJGamRHbHZiZ0FBQUFNQUFETUJBRFFDQURVQkFBQUFEa1JsY0d4dmVVTnZiblJ5WVdOMEFBQUFBUUFBQUJ0amNtVmhkR1ZmWTI5dWRISmhZM1JmZEhKaGJuTmhZM1JwYjI0QU5nRUFBQUFRU1c1MFpYSmhZM1JEYjI1MGNtRmpkQUFBQUFFQUFBQWlhVzUwWlhKaFkzUmZkMmwwYUY5amIyNTBjbUZqZEY5MGNtRnVjMkZqZEdsdmJnQURBUUFBQUE5VmNHZHlZV1JsUTI5dWRISmhZM1FBQUFBQkFBQUFISFZ3WjNKaFpHVmZZMjl1ZEhKaFkzUmZkSEpoYm5OaFkzUnBiMjRBTndFQUFBQVpRM0psWVhSbFEyOXVkSEpoWTNSVWNtRnVjMkZqZEdsdmJnQUFBQVVBQUFBSFlXUmtjbVZ6Y3cwQUFBQUtZbWx1WkdWeVgycGhjZzRCQUFBQURHTnZiblJ5WVdOMFgycGhjZzRCQUFBQUEyRmlhUTRCQUFBQUEzSndZdzRCQVFBQUFCcFZjR2R5WVdSbFEyOXVkSEpoWTNSVWNtRnVjMkZqZEdsdmJnQUFBQVVBQUFBSFlXUmtjbVZ6Y3cwQUFBQU9ibVYzWDJKcGJtUmxjbDlxWVhJT0FRQUFBQkJ1WlhkZlkyOXVkSEpoWTNSZmFtRnlEZ0VBQUFBSGJtVjNYMkZpYVE0QkFBQUFBM0p3WXc0QkFRQUFBQTFEYjI1MGNtRmpkRk4wWVhSbEFBQUFBQUVBQUFBTFUyVmpjbVYwVm1GeVNXUUFBQUFCQUFBQUJuSmhkMTlwWkFNQkFBQUFFMFYyWlc1MFUzVmljMk55YVhCMGFXOXVTV1FBQUFBQkFBQUFCbkpoZDE5cFpBZ0JBQUFBRDBWNGRHVnlibUZzUlhabGJuUkpaQUFBQUFFQUFBQUdjbUYzWDJsa0NBQUFBQUVCQUFBQUNtbHVhWFJwWVd4cGVtWC8vLy8vRHdBQUFBQUFPQT09XCIsIFwiYmFzZTY0XCIpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhbnNhY3Rpb25BbmRFdmVudERlc2VyaWFsaXphdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/TransactionAndEventDeserialization.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitInput.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitInput.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbiBitInput = void 0;\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nconst BlsSignature_1 = __webpack_require__(/*! ../codegen-lib/BlsSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsSignature.js\");\nconst BlockchainPublicKey_1 = __webpack_require__(/*! ../codegen-lib/BlockchainPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainPublicKey.js\");\nconst Signature_1 = __webpack_require__(/*! ../codegen-lib/Signature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Signature.js\");\nconst BlsPublicKey_1 = __webpack_require__(/*! ../codegen-lib/BlsPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsPublicKey.js\");\nconst Hash_1 = __webpack_require__(/*! ../codegen-lib/Hash */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Hash.js\");\nconst BlockchainAddress_1 = __webpack_require__(/*! ../codegen-lib/BlockchainAddress */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainAddress.js\");\nclass AbiBitInput {\n    constructor(output) {\n        this.output = output;\n    }\n    static create(bits) {\n        return new AbiBitInput(new bitmanipulation_ts_1.BitInput(bits.data));\n    }\n    readBoolean() {\n        return this.output.readBoolean();\n    }\n    readBytes(noBytes) {\n        return this.output.readBytes(noBytes);\n    }\n    readI16() {\n        return this.output.readSignedNumber(16);\n    }\n    readI32() {\n        return this.output.readSignedNumber(32);\n    }\n    readI64() {\n        return this.output.readSignedBN(64);\n    }\n    readI8() {\n        return this.output.readSignedNumber(8);\n    }\n    readSignedBigInteger(noBytes) {\n        return this.output.readSignedBN(noBytes * 8);\n    }\n    readString() {\n        throw new Error(\"Unsupported read string for a bit input\");\n    }\n    readU8() {\n        return this.output.readUnsignedNumber(8);\n    }\n    readU16() {\n        return this.output.readUnsignedNumber(16);\n    }\n    readU32() {\n        return this.output.readUnsignedNumber(32);\n    }\n    readU64() {\n        return this.output.readUnsignedBN(64);\n    }\n    readUnsignedBigInteger(noBytes) {\n        return this.output.readUnsignedBN(noBytes * 8);\n    }\n    readRemaining() {\n        throw new Error(\"Cannot read remaining bytes of input when reading bits.\");\n    }\n    /**\n     * Reads 21 bytes from the stream as a Blockchain address.\n     *\n     * @return the read blockchain address\n     */\n    readAddress() {\n        return BlockchainAddress_1.BlockchainAddress.fromBuffer(this.readBytes(21));\n    }\n    /**\n     * Reads 65 bytes from the stream as a Signature.\n     *\n     * @return the read signature\n     */\n    readSignature() {\n        return Signature_1.Signature.fromBuffer(this.readBytes(65));\n    }\n    /**\n     * Reads 32 bytes from the stream as a hash.\n     *\n     * @return the read hash\n     */\n    readHash() {\n        return Hash_1.Hash.fromBuffer(this.readBytes(32));\n    }\n    /**\n     * Reads 33 bytes from the stream as a public key.\n     *\n     * @return the read public key\n     */\n    readPublicKey() {\n        return BlockchainPublicKey_1.BlockchainPublicKey.fromBuffer(this.readBytes(33));\n    }\n    /**\n     * Reads 96 bytes from the stream as a bls public key.\n     *\n     * @return the read bls public key\n     */\n    readBlsPublicKey() {\n        return BlsPublicKey_1.BlsPublicKey.fromBuffer(this.readBytes(96));\n    }\n    /**\n     * Reads 48 bytes from the stream as a bls signature.\n     *\n     * @return the read bls signature\n     */\n    readBlsSignature() {\n        return BlsSignature_1.BlsSignature.fromBuffer(this.readBytes(48));\n    }\n}\nexports.AbiBitInput = AbiBitInput;\n//# sourceMappingURL=AbiBitInput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYWJpc3RyZWFtcy9BYmlCaXRJbnB1dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsNkJBQTZCLG1CQUFPLENBQUMsaUlBQW1DO0FBQ3hFLHVCQUF1QixtQkFBTyxDQUFDLDJJQUE2QjtBQUM1RCw4QkFBOEIsbUJBQU8sQ0FBQyx5SkFBb0M7QUFDMUUsb0JBQW9CLG1CQUFPLENBQUMscUlBQTBCO0FBQ3RELHVCQUF1QixtQkFBTyxDQUFDLDJJQUE2QjtBQUM1RCxlQUFlLG1CQUFPLENBQUMsMkhBQXFCO0FBQzVDLDRCQUE0QixtQkFBTyxDQUFDLHFKQUFrQztBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYWJpc3RyZWFtcy9BYmlCaXRJbnB1dC5qcz8xY2VjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BYmlCaXRJbnB1dCA9IHZvaWQgMDtcbmNvbnN0IGJpdG1hbmlwdWxhdGlvbl90c18xID0gcmVxdWlyZShcIkBzZWNhdGEtcHVibGljL2JpdG1hbmlwdWxhdGlvbi10c1wiKTtcbmNvbnN0IEJsc1NpZ25hdHVyZV8xID0gcmVxdWlyZShcIi4uL2NvZGVnZW4tbGliL0Jsc1NpZ25hdHVyZVwiKTtcbmNvbnN0IEJsb2NrY2hhaW5QdWJsaWNLZXlfMSA9IHJlcXVpcmUoXCIuLi9jb2RlZ2VuLWxpYi9CbG9ja2NoYWluUHVibGljS2V5XCIpO1xuY29uc3QgU2lnbmF0dXJlXzEgPSByZXF1aXJlKFwiLi4vY29kZWdlbi1saWIvU2lnbmF0dXJlXCIpO1xuY29uc3QgQmxzUHVibGljS2V5XzEgPSByZXF1aXJlKFwiLi4vY29kZWdlbi1saWIvQmxzUHVibGljS2V5XCIpO1xuY29uc3QgSGFzaF8xID0gcmVxdWlyZShcIi4uL2NvZGVnZW4tbGliL0hhc2hcIik7XG5jb25zdCBCbG9ja2NoYWluQWRkcmVzc18xID0gcmVxdWlyZShcIi4uL2NvZGVnZW4tbGliL0Jsb2NrY2hhaW5BZGRyZXNzXCIpO1xuY2xhc3MgQWJpQml0SW5wdXQge1xuICAgIGNvbnN0cnVjdG9yKG91dHB1dCkge1xuICAgICAgICB0aGlzLm91dHB1dCA9IG91dHB1dDtcbiAgICB9XG4gICAgc3RhdGljIGNyZWF0ZShiaXRzKSB7XG4gICAgICAgIHJldHVybiBuZXcgQWJpQml0SW5wdXQobmV3IGJpdG1hbmlwdWxhdGlvbl90c18xLkJpdElucHV0KGJpdHMuZGF0YSkpO1xuICAgIH1cbiAgICByZWFkQm9vbGVhbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3V0cHV0LnJlYWRCb29sZWFuKCk7XG4gICAgfVxuICAgIHJlYWRCeXRlcyhub0J5dGVzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm91dHB1dC5yZWFkQnl0ZXMobm9CeXRlcyk7XG4gICAgfVxuICAgIHJlYWRJMTYoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm91dHB1dC5yZWFkU2lnbmVkTnVtYmVyKDE2KTtcbiAgICB9XG4gICAgcmVhZEkzMigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3V0cHV0LnJlYWRTaWduZWROdW1iZXIoMzIpO1xuICAgIH1cbiAgICByZWFkSTY0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vdXRwdXQucmVhZFNpZ25lZEJOKDY0KTtcbiAgICB9XG4gICAgcmVhZEk4KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vdXRwdXQucmVhZFNpZ25lZE51bWJlcig4KTtcbiAgICB9XG4gICAgcmVhZFNpZ25lZEJpZ0ludGVnZXIobm9CeXRlcykge1xuICAgICAgICByZXR1cm4gdGhpcy5vdXRwdXQucmVhZFNpZ25lZEJOKG5vQnl0ZXMgKiA4KTtcbiAgICB9XG4gICAgcmVhZFN0cmluZygpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgcmVhZCBzdHJpbmcgZm9yIGEgYml0IGlucHV0XCIpO1xuICAgIH1cbiAgICByZWFkVTgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm91dHB1dC5yZWFkVW5zaWduZWROdW1iZXIoOCk7XG4gICAgfVxuICAgIHJlYWRVMTYoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm91dHB1dC5yZWFkVW5zaWduZWROdW1iZXIoMTYpO1xuICAgIH1cbiAgICByZWFkVTMyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5vdXRwdXQucmVhZFVuc2lnbmVkTnVtYmVyKDMyKTtcbiAgICB9XG4gICAgcmVhZFU2NCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMub3V0cHV0LnJlYWRVbnNpZ25lZEJOKDY0KTtcbiAgICB9XG4gICAgcmVhZFVuc2lnbmVkQmlnSW50ZWdlcihub0J5dGVzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm91dHB1dC5yZWFkVW5zaWduZWRCTihub0J5dGVzICogOCk7XG4gICAgfVxuICAgIHJlYWRSZW1haW5pbmcoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCByZWFkIHJlbWFpbmluZyBieXRlcyBvZiBpbnB1dCB3aGVuIHJlYWRpbmcgYml0cy5cIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWRzIDIxIGJ5dGVzIGZyb20gdGhlIHN0cmVhbSBhcyBhIEJsb2NrY2hhaW4gYWRkcmVzcy5cbiAgICAgKlxuICAgICAqIEByZXR1cm4gdGhlIHJlYWQgYmxvY2tjaGFpbiBhZGRyZXNzXG4gICAgICovXG4gICAgcmVhZEFkZHJlc3MoKSB7XG4gICAgICAgIHJldHVybiBCbG9ja2NoYWluQWRkcmVzc18xLkJsb2NrY2hhaW5BZGRyZXNzLmZyb21CdWZmZXIodGhpcy5yZWFkQnl0ZXMoMjEpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZHMgNjUgYnl0ZXMgZnJvbSB0aGUgc3RyZWFtIGFzIGEgU2lnbmF0dXJlLlxuICAgICAqXG4gICAgICogQHJldHVybiB0aGUgcmVhZCBzaWduYXR1cmVcbiAgICAgKi9cbiAgICByZWFkU2lnbmF0dXJlKCkge1xuICAgICAgICByZXR1cm4gU2lnbmF0dXJlXzEuU2lnbmF0dXJlLmZyb21CdWZmZXIodGhpcy5yZWFkQnl0ZXMoNjUpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZHMgMzIgYnl0ZXMgZnJvbSB0aGUgc3RyZWFtIGFzIGEgaGFzaC5cbiAgICAgKlxuICAgICAqIEByZXR1cm4gdGhlIHJlYWQgaGFzaFxuICAgICAqL1xuICAgIHJlYWRIYXNoKCkge1xuICAgICAgICByZXR1cm4gSGFzaF8xLkhhc2guZnJvbUJ1ZmZlcih0aGlzLnJlYWRCeXRlcygzMikpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkcyAzMyBieXRlcyBmcm9tIHRoZSBzdHJlYW0gYXMgYSBwdWJsaWMga2V5LlxuICAgICAqXG4gICAgICogQHJldHVybiB0aGUgcmVhZCBwdWJsaWMga2V5XG4gICAgICovXG4gICAgcmVhZFB1YmxpY0tleSgpIHtcbiAgICAgICAgcmV0dXJuIEJsb2NrY2hhaW5QdWJsaWNLZXlfMS5CbG9ja2NoYWluUHVibGljS2V5LmZyb21CdWZmZXIodGhpcy5yZWFkQnl0ZXMoMzMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZHMgOTYgYnl0ZXMgZnJvbSB0aGUgc3RyZWFtIGFzIGEgYmxzIHB1YmxpYyBrZXkuXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHRoZSByZWFkIGJscyBwdWJsaWMga2V5XG4gICAgICovXG4gICAgcmVhZEJsc1B1YmxpY0tleSgpIHtcbiAgICAgICAgcmV0dXJuIEJsc1B1YmxpY0tleV8xLkJsc1B1YmxpY0tleS5mcm9tQnVmZmVyKHRoaXMucmVhZEJ5dGVzKDk2KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWRzIDQ4IGJ5dGVzIGZyb20gdGhlIHN0cmVhbSBhcyBhIGJscyBzaWduYXR1cmUuXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHRoZSByZWFkIGJscyBzaWduYXR1cmVcbiAgICAgKi9cbiAgICByZWFkQmxzU2lnbmF0dXJlKCkge1xuICAgICAgICByZXR1cm4gQmxzU2lnbmF0dXJlXzEuQmxzU2lnbmF0dXJlLmZyb21CdWZmZXIodGhpcy5yZWFkQnl0ZXMoNDgpKTtcbiAgICB9XG59XG5leHBvcnRzLkFiaUJpdElucHV0ID0gQWJpQml0SW5wdXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BYmlCaXRJbnB1dC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitInput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitOutput.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitOutput.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbiBitOutput = void 0;\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nclass AbiBitOutput {\n    constructor(output) {\n        this.output = output;\n    }\n    static serialize(serializer) {\n        return bitmanipulation_ts_1.BitOutput.serializeBits((stream) => {\n            const abiOut = new AbiBitOutput(stream);\n            serializer(abiOut);\n        });\n    }\n    writeBoolean(value) {\n        this.output.writeBoolean(value);\n    }\n    writeBytes(values) {\n        this.output.writeBytes(values);\n    }\n    writeI16(value) {\n        this.output.writeSignedNumber(value, 16);\n    }\n    writeI32(value) {\n        this.output.writeSignedNumber(value, 32);\n    }\n    writeI64(value) {\n        this.output.writeSignedBN(value, 64);\n    }\n    writeI8(value) {\n        this.output.writeSignedNumber(value, 8);\n    }\n    writeSignedBigInteger(value, noBytes) {\n        this.output.writeSignedBN(value, noBytes * 8);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    writeString(value) {\n        throw new Error(\"Unsupported write string for a bit output\");\n    }\n    writeU16(value) {\n        this.output.writeUnsignedNumber(value, 16);\n    }\n    writeU32(value) {\n        this.output.writeUnsignedNumber(value, 32);\n    }\n    writeU64(value) {\n        this.output.writeUnsignedBN(value, 64);\n    }\n    writeU8(value) {\n        this.output.writeUnsignedNumber(value, 8);\n    }\n    writeUnsignedBigInteger(value, noBytes) {\n        this.output.writeUnsignedBN(value, noBytes * 8);\n    }\n    /**\n     * Writes a blockchain address.\n     *\n     * @param address the address to write to the stream\n     */\n    writeAddress(address) {\n        this.writeBytes(address.asBuffer());\n    }\n    /**\n     * Writes a public key.\n     *\n     * @param publicKey the public key to write to the stream\n     */\n    writePublicKey(publicKey) {\n        this.writeBytes(publicKey.asBuffer());\n    }\n    /**\n     * Writes a signature.\n     *\n     * @param signature the signature to write to the stream\n     */\n    writeSignature(signature) {\n        this.writeBytes(signature.asBuffer());\n    }\n    /**\n     * Writes a hash.\n     *\n     * @param hash the hash to write to the stream\n     */\n    writeHash(hash) {\n        this.writeBytes(hash.asBuffer());\n    }\n    /**\n     * Writes a bls signature.\n     *\n     * @param blsSignature the bls signature to write to the stream\n     */\n    writeBlsSignature(blsSignature) {\n        this.writeBytes(blsSignature.asBuffer());\n    }\n    /**\n     * Writes a bls public key.\n     *\n     * @param blsPublicKey the bls public key to write to the stream\n     */\n    writeBlsPublicKey(blsPublicKey) {\n        this.writeBytes(blsPublicKey.asBuffer());\n    }\n}\nexports.AbiBitOutput = AbiBitOutput;\n//# sourceMappingURL=AbiBitOutput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYWJpc3RyZWFtcy9BYmlCaXRPdXRwdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLDZCQUE2QixtQkFBTyxDQUFDLGlJQUFtQztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2FiaXN0cmVhbXMvQWJpQml0T3V0cHV0LmpzP2Y0ODciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFiaUJpdE91dHB1dCA9IHZvaWQgMDtcbmNvbnN0IGJpdG1hbmlwdWxhdGlvbl90c18xID0gcmVxdWlyZShcIkBzZWNhdGEtcHVibGljL2JpdG1hbmlwdWxhdGlvbi10c1wiKTtcbmNsYXNzIEFiaUJpdE91dHB1dCB7XG4gICAgY29uc3RydWN0b3Iob3V0cHV0KSB7XG4gICAgICAgIHRoaXMub3V0cHV0ID0gb3V0cHV0O1xuICAgIH1cbiAgICBzdGF0aWMgc2VyaWFsaXplKHNlcmlhbGl6ZXIpIHtcbiAgICAgICAgcmV0dXJuIGJpdG1hbmlwdWxhdGlvbl90c18xLkJpdE91dHB1dC5zZXJpYWxpemVCaXRzKChzdHJlYW0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFiaU91dCA9IG5ldyBBYmlCaXRPdXRwdXQoc3RyZWFtKTtcbiAgICAgICAgICAgIHNlcmlhbGl6ZXIoYWJpT3V0KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHdyaXRlQm9vbGVhbih2YWx1ZSkge1xuICAgICAgICB0aGlzLm91dHB1dC53cml0ZUJvb2xlYW4odmFsdWUpO1xuICAgIH1cbiAgICB3cml0ZUJ5dGVzKHZhbHVlcykge1xuICAgICAgICB0aGlzLm91dHB1dC53cml0ZUJ5dGVzKHZhbHVlcyk7XG4gICAgfVxuICAgIHdyaXRlSTE2KHZhbHVlKSB7XG4gICAgICAgIHRoaXMub3V0cHV0LndyaXRlU2lnbmVkTnVtYmVyKHZhbHVlLCAxNik7XG4gICAgfVxuICAgIHdyaXRlSTMyKHZhbHVlKSB7XG4gICAgICAgIHRoaXMub3V0cHV0LndyaXRlU2lnbmVkTnVtYmVyKHZhbHVlLCAzMik7XG4gICAgfVxuICAgIHdyaXRlSTY0KHZhbHVlKSB7XG4gICAgICAgIHRoaXMub3V0cHV0LndyaXRlU2lnbmVkQk4odmFsdWUsIDY0KTtcbiAgICB9XG4gICAgd3JpdGVJOCh2YWx1ZSkge1xuICAgICAgICB0aGlzLm91dHB1dC53cml0ZVNpZ25lZE51bWJlcih2YWx1ZSwgOCk7XG4gICAgfVxuICAgIHdyaXRlU2lnbmVkQmlnSW50ZWdlcih2YWx1ZSwgbm9CeXRlcykge1xuICAgICAgICB0aGlzLm91dHB1dC53cml0ZVNpZ25lZEJOKHZhbHVlLCBub0J5dGVzICogOCk7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICB3cml0ZVN0cmluZyh2YWx1ZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCB3cml0ZSBzdHJpbmcgZm9yIGEgYml0IG91dHB1dFwiKTtcbiAgICB9XG4gICAgd3JpdGVVMTYodmFsdWUpIHtcbiAgICAgICAgdGhpcy5vdXRwdXQud3JpdGVVbnNpZ25lZE51bWJlcih2YWx1ZSwgMTYpO1xuICAgIH1cbiAgICB3cml0ZVUzMih2YWx1ZSkge1xuICAgICAgICB0aGlzLm91dHB1dC53cml0ZVVuc2lnbmVkTnVtYmVyKHZhbHVlLCAzMik7XG4gICAgfVxuICAgIHdyaXRlVTY0KHZhbHVlKSB7XG4gICAgICAgIHRoaXMub3V0cHV0LndyaXRlVW5zaWduZWRCTih2YWx1ZSwgNjQpO1xuICAgIH1cbiAgICB3cml0ZVU4KHZhbHVlKSB7XG4gICAgICAgIHRoaXMub3V0cHV0LndyaXRlVW5zaWduZWROdW1iZXIodmFsdWUsIDgpO1xuICAgIH1cbiAgICB3cml0ZVVuc2lnbmVkQmlnSW50ZWdlcih2YWx1ZSwgbm9CeXRlcykge1xuICAgICAgICB0aGlzLm91dHB1dC53cml0ZVVuc2lnbmVkQk4odmFsdWUsIG5vQnl0ZXMgKiA4KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGVzIGEgYmxvY2tjaGFpbiBhZGRyZXNzLlxuICAgICAqXG4gICAgICogQHBhcmFtIGFkZHJlc3MgdGhlIGFkZHJlc3MgdG8gd3JpdGUgdG8gdGhlIHN0cmVhbVxuICAgICAqL1xuICAgIHdyaXRlQWRkcmVzcyhhZGRyZXNzKSB7XG4gICAgICAgIHRoaXMud3JpdGVCeXRlcyhhZGRyZXNzLmFzQnVmZmVyKCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZXMgYSBwdWJsaWMga2V5LlxuICAgICAqXG4gICAgICogQHBhcmFtIHB1YmxpY0tleSB0aGUgcHVibGljIGtleSB0byB3cml0ZSB0byB0aGUgc3RyZWFtXG4gICAgICovXG4gICAgd3JpdGVQdWJsaWNLZXkocHVibGljS2V5KSB7XG4gICAgICAgIHRoaXMud3JpdGVCeXRlcyhwdWJsaWNLZXkuYXNCdWZmZXIoKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlcyBhIHNpZ25hdHVyZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzaWduYXR1cmUgdGhlIHNpZ25hdHVyZSB0byB3cml0ZSB0byB0aGUgc3RyZWFtXG4gICAgICovXG4gICAgd3JpdGVTaWduYXR1cmUoc2lnbmF0dXJlKSB7XG4gICAgICAgIHRoaXMud3JpdGVCeXRlcyhzaWduYXR1cmUuYXNCdWZmZXIoKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlcyBhIGhhc2guXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaGFzaCB0aGUgaGFzaCB0byB3cml0ZSB0byB0aGUgc3RyZWFtXG4gICAgICovXG4gICAgd3JpdGVIYXNoKGhhc2gpIHtcbiAgICAgICAgdGhpcy53cml0ZUJ5dGVzKGhhc2guYXNCdWZmZXIoKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlcyBhIGJscyBzaWduYXR1cmUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYmxzU2lnbmF0dXJlIHRoZSBibHMgc2lnbmF0dXJlIHRvIHdyaXRlIHRvIHRoZSBzdHJlYW1cbiAgICAgKi9cbiAgICB3cml0ZUJsc1NpZ25hdHVyZShibHNTaWduYXR1cmUpIHtcbiAgICAgICAgdGhpcy53cml0ZUJ5dGVzKGJsc1NpZ25hdHVyZS5hc0J1ZmZlcigpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGVzIGEgYmxzIHB1YmxpYyBrZXkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYmxzUHVibGljS2V5IHRoZSBibHMgcHVibGljIGtleSB0byB3cml0ZSB0byB0aGUgc3RyZWFtXG4gICAgICovXG4gICAgd3JpdGVCbHNQdWJsaWNLZXkoYmxzUHVibGljS2V5KSB7XG4gICAgICAgIHRoaXMud3JpdGVCeXRlcyhibHNQdWJsaWNLZXkuYXNCdWZmZXIoKSk7XG4gICAgfVxufVxuZXhwb3J0cy5BYmlCaXRPdXRwdXQgPSBBYmlCaXRPdXRwdXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BYmlCaXRPdXRwdXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitOutput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteInput.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteInput.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbiByteInput = void 0;\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nconst BlockchainAddress_1 = __webpack_require__(/*! ../codegen-lib/BlockchainAddress */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainAddress.js\");\nconst Signature_1 = __webpack_require__(/*! ../codegen-lib/Signature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Signature.js\");\nconst Hash_1 = __webpack_require__(/*! ../codegen-lib/Hash */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Hash.js\");\nconst BlockchainPublicKey_1 = __webpack_require__(/*! ../codegen-lib/BlockchainPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainPublicKey.js\");\nconst BlsPublicKey_1 = __webpack_require__(/*! ../codegen-lib/BlsPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsPublicKey.js\");\nconst BlsSignature_1 = __webpack_require__(/*! ../codegen-lib/BlsSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsSignature.js\");\n/** Byte input for reading abi types. */\nclass AbiByteInput {\n    constructor(input) {\n        this.input = input;\n    }\n    /**\n     * Create a little-endian input stream from bytes.\n     *\n     * @param bytes input bytes\n     * @return input stream\n     */\n    static createLittleEndian(bytes) {\n        return new AbiByteInput(new bitmanipulation_ts_1.LittleEndianByteInput(bytes));\n    }\n    /**\n     * Create a big-endian input stream from bytes.\n     *\n     * @param bytes input bytes\n     * @return input stream\n     */\n    static createBigEndian(bytes) {\n        return new AbiByteInput(new bitmanipulation_ts_1.BigEndianByteInput(bytes));\n    }\n    /**\n     * Reads an array of bytes.\n     *\n     * @param noBytes the number of bytes\n     * @return the read bytes\n     */\n    readBytes(noBytes) {\n        return this.input.readBytes(noBytes);\n    }\n    /**\n     * Reads a single byte from the stream as a boolean.\n     *\n     * @return false if the read byte is 0 and true otherwise\n     */\n    readBoolean() {\n        return this.input.readBoolean();\n    }\n    /**\n     * Reads a signed 8-bit number from the stream.\n     *\n     * @return the read number as a java byte\n     */\n    readI8() {\n        return this.input.readI8();\n    }\n    /**\n     * Reads a signed 16-bit number from the stream.\n     *\n     * @return the read number as a java short\n     */\n    readI16() {\n        return this.input.readI16();\n    }\n    /**\n     * Reads a signed 32-bit number from the stream.\n     *\n     * @return the read number as a java int\n     */\n    readI32() {\n        return this.input.readI32();\n    }\n    /**\n     * Reads a signed 64-bit number from the stream.\n     *\n     * @return the read number as a java long\n     */\n    readI64() {\n        return this.input.readI64();\n    }\n    /**\n     * Reads a signed BigInteger.\n     *\n     * @param noBytes the number of bytes to read\n     * @return the read BigInteger from the stream\n     */\n    readSignedBigInteger(noBytes) {\n        return this.input.readSignedBigInteger(noBytes);\n    }\n    /**\n     * Reads an unsigned 8-bit number from the stream. See <a\n     * href=\"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html\">this</a> for\n     * how to handle unsigned numbers.\n     *\n     * @return the read number as a java byte\n     */\n    readU8() {\n        return this.input.readU8();\n    }\n    /**\n     * Reads an unsigned 16-bit number from the stream. See <a\n     * href=\"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html\">this</a> for\n     * how to handle unsigned numbers.\n     *\n     * @return the read number as a java short\n     */\n    readU16() {\n        return this.input.readU16();\n    }\n    /**\n     * Reads an unsigned 32-bit number from the stream. See <a\n     * href=\"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html\">this</a> for\n     * how to handle unsigned numbers.\n     *\n     * @return the read number as a java int\n     */\n    readU32() {\n        return this.input.readU32();\n    }\n    /**\n     * Reads an unsigned 64-bit number from the stream. See <a\n     * href=\"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html\">this</a> for\n     * how to handle unsigned numbers.\n     *\n     * @return the read number as a java long\n     */\n    readU64() {\n        return this.input.readU64();\n    }\n    /**\n     * Reads an unsigned BigInteger.\n     *\n     * @param noBytes the number of bytes to read\n     * @return the read BigInteger from the stream\n     */\n    readUnsignedBigInteger(noBytes) {\n        return this.input.readUnsignedBigInteger(noBytes);\n    }\n    /**\n     * Reads a string.\n     *\n     * @return the read string\n     */\n    readString() {\n        return this.input.readString();\n    }\n    /**\n     * Reads 21 bytes from the stream as a Blockchain address.\n     *\n     * @return the read blockchain address\n     */\n    readAddress() {\n        return BlockchainAddress_1.BlockchainAddress.fromBuffer(this.input.readBytes(21));\n    }\n    /**\n     * Reads 65 bytes from the stream as a Signature.\n     *\n     * @return the read signature\n     */\n    readSignature() {\n        return Signature_1.Signature.fromBuffer(this.input.readBytes(65));\n    }\n    /**\n     * Reads 32 bytes from the stream as a hash.\n     *\n     * @return the read hash\n     */\n    readHash() {\n        return Hash_1.Hash.fromBuffer(this.input.readBytes(32));\n    }\n    /**\n     * Reads 33 bytes from the stream as a public key.\n     *\n     * @return the read public key\n     */\n    readPublicKey() {\n        return BlockchainPublicKey_1.BlockchainPublicKey.fromBuffer(this.input.readBytes(33));\n    }\n    /**\n     * Reads 96 bytes from the stream as a bls public key.\n     *\n     * @return the read bls public key\n     */\n    readBlsPublicKey() {\n        return BlsPublicKey_1.BlsPublicKey.fromBuffer(this.input.readBytes(96));\n    }\n    /**\n     * Reads 48 bytes from the stream as a bls signature.\n     *\n     * @return the read bls signature\n     */\n    readBlsSignature() {\n        return BlsSignature_1.BlsSignature.fromBuffer(this.input.readBytes(48));\n    }\n    readRemaining() {\n        return this.input.readRemaining();\n    }\n    /**\n     * Reads a shortname as a leb128 encoding.\n     *\n     * @return the read shortname in a hex encoding\n     */\n    readShortnameString() {\n        return this.readShortname().toString(\"hex\");\n    }\n    /**\n     * Reads a shortname as a leb128 encoding.\n     *\n     * @return the read shortname as a byte array\n     */\n    readShortname() {\n        let byte;\n        const bufferWriter = new bitmanipulation_ts_1.BigEndianByteOutput();\n        for (let i = 0; i < 5; i++) {\n            byte = this.input.readU8();\n            bufferWriter.writeU8(byte);\n            if (byte < 128) {\n                return bufferWriter.toBuffer();\n            }\n        }\n        throw new Error(\"Invalid LEB128 sequence, RPC header must be a valid 32-bit LEB128 encoded int (max 5\" +\n            \" bytes)\");\n    }\n}\nexports.AbiByteInput = AbiByteInput;\n//# sourceMappingURL=AbiByteInput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteInput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteOutput.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteOutput.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbiByteOutput = void 0;\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\n/** ByteOutput for writing abi types. */\nclass AbiByteOutput {\n    constructor(out) {\n        this.out = out;\n    }\n    /**\n     * Creates an AbiByteOutput, runs the serialization and returns the bytes as little-endian.\n     *\n     * @param serializer the serialization to happen\n     * @return the serialized bytes\n     */\n    static serializeLittleEndian(serializer) {\n        return bitmanipulation_ts_1.LittleEndianByteOutput.serialize((out) => {\n            const abiOut = new AbiByteOutput(out);\n            serializer(abiOut);\n        });\n    }\n    /**\n     * Creates an AbiByteOutput, runs the serialization and returns the bytes as big-endian.\n     *\n     * @param serializer the serialization to happen\n     * @return the serialized bytes\n     */\n    static serializeBigEndian(serializer) {\n        return bitmanipulation_ts_1.BigEndianByteOutput.serialize((out) => {\n            const abiOut = new AbiByteOutput(out);\n            serializer(abiOut);\n        });\n    }\n    /**\n     * Writes a byte array.\n     *\n     * @param values the byte array to write to the stream\n     */\n    writeBytes(values) {\n        this.out.writeBytes(values);\n    }\n    /**\n     * Writes a boolean.\n     *\n     * @param value the boolean to write to the stream\n     */\n    writeBoolean(value) {\n        this.out.writeBoolean(value);\n    }\n    /**\n     * Writes a signed byte.\n     *\n     * @param value the byte to write to the stream\n     */\n    writeI8(value) {\n        this.out.writeI8(value);\n    }\n    /**\n     * Writes a signed short.\n     *\n     * @param value the short to write to the stream\n     */\n    writeI16(value) {\n        this.out.writeI16(value);\n    }\n    /**\n     * Writes a signed int.\n     *\n     * @param value the int to write to the stream\n     */\n    writeI32(value) {\n        this.out.writeI32(value);\n    }\n    /**\n     * Writes a signed long.\n     *\n     * @param value the long to write to the stream\n     */\n    writeI64(value) {\n        this.out.writeI64(value);\n    }\n    /**\n     * Writes a signed BigInteger.\n     *\n     * @param value the BigInteger to write to the stream\n     * @param noBytes the number of bytes to write\n     */\n    writeSignedBigInteger(value, noBytes) {\n        this.out.writeSignedBigInteger(value, noBytes);\n    }\n    /**\n     * Writes an unsigned byte.\n     *\n     * @param value the byte to write to the stream\n     */\n    writeU8(value) {\n        this.out.writeU8(value);\n    }\n    /**\n     * Writes an unsigned short.\n     *\n     * @param value the short to write to the stream\n     */\n    writeU16(value) {\n        this.out.writeU16(value);\n    }\n    /**\n     * Writes an unsigned int.\n     *\n     * @param value the int to write to the stream\n     */\n    writeU32(value) {\n        this.out.writeU32(value);\n    }\n    /**\n     * Writes an unsigned long.\n     *\n     * @param value the long to write to the stream\n     */\n    writeU64(value) {\n        this.out.writeU64(value);\n    }\n    /**\n     * Writes an unsigned BigInteger.\n     *\n     * @param value the BigInteger to write to the stream\n     * @param noBytes the number of bytes to write\n     */\n    writeUnsignedBigInteger(value, noBytes) {\n        this.out.writeUnsignedBigInteger(value, noBytes);\n    }\n    /**\n     * Writes a string.\n     *\n     * @param value the string to write to the stream\n     */\n    writeString(value) {\n        this.out.writeString(value);\n    }\n    /**\n     * Writes a blockchain address.\n     *\n     * @param address the address to write to the stream\n     */\n    writeAddress(address) {\n        this.out.writeBytes(address.asBuffer());\n    }\n    /**\n     * Writes a public key.\n     *\n     * @param publicKey the public key to write to the stream\n     */\n    writePublicKey(publicKey) {\n        this.out.writeBytes(publicKey.asBuffer());\n    }\n    /**\n     * Writes a signature.\n     *\n     * @param signature the signature to write to the stream\n     */\n    writeSignature(signature) {\n        this.out.writeBytes(signature.asBuffer());\n    }\n    /**\n     * Writes a hash.\n     *\n     * @param hash the hash to write to the stream\n     */\n    writeHash(hash) {\n        this.out.writeBytes(hash.asBuffer());\n    }\n    /**\n     * Writes a bls signature.\n     *\n     * @param blsSignature the bls signature to write to the stream\n     */\n    writeBlsSignature(blsSignature) {\n        this.out.writeBytes(blsSignature.asBuffer());\n    }\n    /**\n     * Writes a bls public key.\n     *\n     * @param blsPublicKey the bls public key to write to the stream\n     */\n    writeBlsPublicKey(blsPublicKey) {\n        this.out.writeBytes(blsPublicKey.asBuffer());\n    }\n}\nexports.AbiByteOutput = AbiByteOutput;\n//# sourceMappingURL=AbiByteOutput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteOutput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AbstractBuilder.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/AbstractBuilder.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbstractBuilder = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(action-browser)/./node_modules/bn.js/lib/bn.js\"));\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst BlsPublicKeyProducer_1 = __webpack_require__(/*! ./BlsPublicKeyProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/BlsPublicKeyProducer.js\");\nconst HashProducer_1 = __webpack_require__(/*! ./HashProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/HashProducer.js\");\nconst PublicKeyProducer_1 = __webpack_require__(/*! ./PublicKeyProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/PublicKeyProducer.js\");\nconst SignatureProducer_1 = __webpack_require__(/*! ./SignatureProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/SignatureProducer.js\");\nconst BlsSignatureProducer_1 = __webpack_require__(/*! ./BlsSignatureProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/BlsSignatureProducer.js\");\nconst AddressProducer_1 = __webpack_require__(/*! ./AddressProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AddressProducer.js\");\nconst StructProducer_1 = __webpack_require__(/*! ./StructProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/StructProducer.js\");\nconst EnumVariantProducer_1 = __webpack_require__(/*! ./EnumVariantProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/EnumVariantProducer.js\");\nconst VecProducer_1 = __webpack_require__(/*! ./VecProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/VecProducer.js\");\nconst MapProducer_1 = __webpack_require__(/*! ./MapProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/MapProducer.js\");\nconst OptionProducer_1 = __webpack_require__(/*! ./OptionProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/OptionProducer.js\");\nconst SizedArrayProducer_1 = __webpack_require__(/*! ./SizedArrayProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/SizedArrayProducer.js\");\nclass AbstractBuilder {\n    constructor(contractAbi, errorPath, aggregateProducer) {\n        this.contractAbi = contractAbi;\n        this.errorPath = errorPath;\n        this.aggregateProducer = aggregateProducer;\n    }\n    addBool(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeBoolean(value) }, Abi_1.TypeIndex.bool);\n        return this;\n    }\n    addString(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeString(value) }, Abi_1.TypeIndex.String);\n        return this;\n    }\n    addAddress(value) {\n        let val;\n        if (typeof value === \"string\") {\n            val = Buffer.from(value, \"hex\");\n        }\n        else {\n            val = value;\n        }\n        this.typeCheckAndAddArg(new AddressProducer_1.AddressProducer(val, this.errorPath + this.aggregateProducer.getFieldName()), Abi_1.TypeIndex.Address);\n        return this;\n    }\n    addHash(value) {\n        let val;\n        if (typeof value === \"string\") {\n            val = Buffer.from(value, \"hex\");\n        }\n        else {\n            val = value;\n        }\n        this.typeCheckAndAddArg(new HashProducer_1.HashProducer(val, this.errorPath + this.aggregateProducer.getFieldName()), Abi_1.TypeIndex.Hash);\n        return this;\n    }\n    addPublicKey(value) {\n        let val;\n        if (typeof value === \"string\") {\n            val = Buffer.from(value, \"hex\");\n        }\n        else {\n            val = value;\n        }\n        this.typeCheckAndAddArg(new PublicKeyProducer_1.PublicKeyProducer(val, this.errorPath + this.aggregateProducer.getFieldName()), Abi_1.TypeIndex.PublicKey);\n        return this;\n    }\n    addSignature(value) {\n        let val;\n        if (typeof value === \"string\") {\n            val = Buffer.from(value, \"hex\");\n        }\n        else {\n            val = value;\n        }\n        this.typeCheckAndAddArg(new SignatureProducer_1.SignatureProducer(val, this.errorPath + this.aggregateProducer.getFieldName()), Abi_1.TypeIndex.Signature);\n        return this;\n    }\n    addBlsPublicKey(value) {\n        let val;\n        if (typeof value === \"string\") {\n            val = Buffer.from(value, \"hex\");\n        }\n        else {\n            val = value;\n        }\n        this.typeCheckAndAddArg(new BlsPublicKeyProducer_1.BlsPublicKeyProducer(val, this.errorPath + this.aggregateProducer.getFieldName()), Abi_1.TypeIndex.BlsPublicKey);\n        return this;\n    }\n    addBlsSignature(value) {\n        let val;\n        if (typeof value === \"string\") {\n            val = Buffer.from(value, \"hex\");\n        }\n        else {\n            val = value;\n        }\n        this.typeCheckAndAddArg(new BlsSignatureProducer_1.BlsSignatureProducer(val, this.errorPath + this.aggregateProducer.getFieldName()), Abi_1.TypeIndex.BlsSignature);\n        return this;\n    }\n    addU8(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeU8(value) }, Abi_1.TypeIndex.u8);\n        return this;\n    }\n    addU16(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeU16(value) }, Abi_1.TypeIndex.u16);\n        return this;\n    }\n    addU32(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeU32(value) }, Abi_1.TypeIndex.u32);\n        return this;\n    }\n    addU64(value) {\n        let value2;\n        if (typeof value === \"number\") {\n            value2 = new bn_js_1.default(value);\n        }\n        else {\n            value2 = value;\n        }\n        this.typeCheckAndAddArg({ write: (out) => out.writeU64(value2) }, Abi_1.TypeIndex.u64);\n        return this;\n    }\n    addU128(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeUnsignedBigInteger(value, 16) }, Abi_1.TypeIndex.u128);\n        return this;\n    }\n    addU256(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeUnsignedBigInteger(value, 32) }, Abi_1.TypeIndex.u256);\n        return this;\n    }\n    addI8(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeI8(value) }, Abi_1.TypeIndex.i8);\n        return this;\n    }\n    addI16(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeI16(value) }, Abi_1.TypeIndex.i16);\n        return this;\n    }\n    addI32(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeI32(value) }, Abi_1.TypeIndex.i32);\n        return this;\n    }\n    addI64(value) {\n        let value2;\n        if (typeof value === \"number\") {\n            value2 = new bn_js_1.default(value);\n        }\n        else {\n            value2 = value;\n        }\n        this.typeCheckAndAddArg({ write: (out) => out.writeI64(value2) }, Abi_1.TypeIndex.i64);\n        return this;\n    }\n    addI128(value) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeSignedBigInteger(value, 16) }, Abi_1.TypeIndex.i128);\n        return this;\n    }\n    addStruct() {\n        const struct = this.aggregateProducer.getTypeSpecForElement();\n        this.typeCheck(Abi_1.TypeIndex.Named);\n        let structType = null;\n        if (this.contractAbi != null) {\n            structType = this.contractAbi.getNamedType(struct);\n        }\n        const newErrorPath = this.errorPath + this.aggregateProducer.getFieldName();\n        const structProducer = new StructProducer_1.StructProducer(structType, newErrorPath);\n        this.aggregateProducer.addElement(structProducer);\n        return new AggregateBuilder(this.contractAbi, newErrorPath, structProducer);\n    }\n    addEnumVariant(discriminant) {\n        const enumTypeRef = this.aggregateProducer.getTypeSpecForElement();\n        this.typeCheck(Abi_1.TypeIndex.Named);\n        const structRef = this.getEnumVariantTypeRef(enumTypeRef, discriminant);\n        let structTypeSpec;\n        if (this.contractAbi == null || structRef == null) {\n            structTypeSpec = null;\n        }\n        else {\n            structTypeSpec = this.contractAbi.getNamedType(structRef);\n        }\n        const newErrorPath = this.errorPath + this.aggregateProducer.getFieldName();\n        const enumVariantProducer = new EnumVariantProducer_1.EnumVariantProducer(structTypeSpec, discriminant, newErrorPath);\n        this.aggregateProducer.addElement(enumVariantProducer);\n        return new AggregateBuilder(this.contractAbi, newErrorPath, enumVariantProducer);\n    }\n    addVec() {\n        const vec = this.aggregateProducer.getTypeSpecForElement();\n        this.typeCheck(Abi_1.TypeIndex.Vec);\n        const vecProducer = new VecProducer_1.VecProducer(vec);\n        const newErrorPath = this.errorPath + this.aggregateProducer.getFieldName();\n        this.aggregateProducer.addElement(vecProducer);\n        return new AggregateBuilder(this.contractAbi, newErrorPath, vecProducer);\n    }\n    addVecU8(values) {\n        this.typeCheck(Abi_1.TypeIndex.Vec);\n        const vecType = this.aggregateProducer.getTypeSpecForElement();\n        if (vecType !== null) {\n            const expectedType = vecType.valueType.typeIndex;\n            if (expectedType !== Abi_1.TypeIndex.u8) {\n                throw new Error(`In ${this.errorPath + this.aggregateProducer.getFieldName()}, Expected type Vec<${Abi_1.TypeIndex[expectedType]}>, but got Vec<u8>`);\n            }\n        }\n        this.aggregateProducer.addElement({\n            write: (out) => {\n                out.writeI32(values.length);\n                out.writeBytes(values);\n            },\n        });\n        return this;\n    }\n    addMap() {\n        const map = this.aggregateProducer.getTypeSpecForElement();\n        this.typeCheck(Abi_1.TypeIndex.Map);\n        const newErrorPath = this.errorPath + this.aggregateProducer.getFieldName();\n        const mapProducer = new MapProducer_1.MapProducer(map, newErrorPath);\n        this.aggregateProducer.addElement(mapProducer);\n        return new AggregateBuilder(this.contractAbi, newErrorPath, mapProducer);\n    }\n    addSet() {\n        return this.addVec();\n    }\n    addOption() {\n        const optionType = this.aggregateProducer.getTypeSpecForElement();\n        this.typeCheck(Abi_1.TypeIndex.Option);\n        const newErrorPath = this.errorPath + this.aggregateProducer.getFieldName();\n        const optionProducer = new OptionProducer_1.OptionProducer(optionType, newErrorPath);\n        this.aggregateProducer.addElement(optionProducer);\n        return new AggregateBuilder(this.contractAbi, newErrorPath, optionProducer);\n    }\n    addSizedByteArray(values) {\n        const arrayBuilder = this.addSizedArray();\n        for (const v of values) {\n            arrayBuilder.addU8(v);\n        }\n        return arrayBuilder;\n    }\n    /**\n     * Adds a sized array argument to the builder.\n     *\n     * @param values list of values for the array\n     * @return the updated builder\n     */\n    addSizedArray() {\n        const spec = this.typeCheck(Abi_1.TypeIndex.SizedArray);\n        const newErrorPath = this.errorPath + this.aggregateProducer.getFieldName();\n        const arrayProducer = new SizedArrayProducer_1.SizedArrayProducer(spec, newErrorPath);\n        const fieldName = this.aggregateProducer.getFieldName();\n        this.aggregateProducer.addElement(arrayProducer);\n        return new AggregateBuilder(this.contractAbi, this.errorPath + fieldName, arrayProducer);\n    }\n    addAvlTreeMap(treeId) {\n        this.typeCheckAndAddArg({ write: (out) => out.writeI32(treeId) }, Abi_1.TypeIndex.AvlTreeMap);\n        return this;\n    }\n    typeCheckAndAddArg(argument, expected) {\n        this.typeCheck(expected);\n        this.aggregateProducer.addElement(argument);\n    }\n    typeCheck(actualType) {\n        const typeSpecForArgument = this.aggregateProducer.getTypeSpecForElement();\n        if (typeSpecForArgument != null) {\n            const expectedType = typeSpecForArgument.typeIndex;\n            if (expectedType !== actualType) {\n                throw new Error(`In ${this.errorPath + this.aggregateProducer.getFieldName()}, Expected type ${Abi_1.TypeIndex[expectedType]}, but got ${Abi_1.TypeIndex[actualType]}`);\n            }\n        }\n        return typeSpecForArgument;\n    }\n    write(out) {\n        this.aggregateProducer.write(out);\n    }\n    getEnumVariantTypeRef(enumTypeRef, discriminant) {\n        if (this.contractAbi == null || enumTypeRef == null) {\n            return null;\n        }\n        else {\n            const enumTypeSpec = this.contractAbi.getNamedType(enumTypeRef);\n            const variant = enumTypeSpec.variant(discriminant);\n            if (variant === null) {\n                const newErrorPath = this.errorPath + this.aggregateProducer.getFieldName();\n                throw new Error(`In ${newErrorPath}, Undefined variant discriminant ${discriminant} for ${enumTypeSpec.name}`);\n            }\n            else {\n                return variant.def;\n            }\n        }\n    }\n    getContractAbi() {\n        return this.contractAbi;\n    }\n    getAggregateProducer() {\n        return this.aggregateProducer;\n    }\n}\nexports.AbstractBuilder = AbstractBuilder;\nclass AggregateBuilder extends AbstractBuilder {\n    constructor(contractAbi, errorPath, aggregateProducer) {\n        super(contractAbi, errorPath, aggregateProducer);\n    }\n}\n//# sourceMappingURL=AbstractBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AbstractBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AddressProducer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/AddressProducer.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AddressProducer = void 0;\nconst ScValueAddress_1 = __webpack_require__(/*! ../value/ScValueAddress */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAddress.js\");\nclass AddressProducer {\n    constructor(address, errorPath) {\n        if (address.length !== ScValueAddress_1.ScValueAddress.ADDRESS_LENGTH) {\n            throw new Error(`In ${errorPath}, Address must have length 21 bytes, got length = ${address.length}, value = ${address.toString(\"hex\")}`);\n        }\n        this.address = address;\n    }\n    write(out) {\n        out.writeBytes(this.address);\n    }\n}\nexports.AddressProducer = AddressProducer;\n//# sourceMappingURL=AddressProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9BZGRyZXNzUHJvZHVjZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLHlCQUF5QixtQkFBTyxDQUFDLG1JQUF5QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsVUFBVSxvREFBb0QsZUFBZSxZQUFZLHdCQUF3QjtBQUNuSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2J1aWxkZXIvQWRkcmVzc1Byb2R1Y2VyLmpzPzUwYTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFkZHJlc3NQcm9kdWNlciA9IHZvaWQgMDtcbmNvbnN0IFNjVmFsdWVBZGRyZXNzXzEgPSByZXF1aXJlKFwiLi4vdmFsdWUvU2NWYWx1ZUFkZHJlc3NcIik7XG5jbGFzcyBBZGRyZXNzUHJvZHVjZXIge1xuICAgIGNvbnN0cnVjdG9yKGFkZHJlc3MsIGVycm9yUGF0aCkge1xuICAgICAgICBpZiAoYWRkcmVzcy5sZW5ndGggIT09IFNjVmFsdWVBZGRyZXNzXzEuU2NWYWx1ZUFkZHJlc3MuQUREUkVTU19MRU5HVEgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW4gJHtlcnJvclBhdGh9LCBBZGRyZXNzIG11c3QgaGF2ZSBsZW5ndGggMjEgYnl0ZXMsIGdvdCBsZW5ndGggPSAke2FkZHJlc3MubGVuZ3RofSwgdmFsdWUgPSAke2FkZHJlc3MudG9TdHJpbmcoXCJoZXhcIil9YCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5hZGRyZXNzID0gYWRkcmVzcztcbiAgICB9XG4gICAgd3JpdGUob3V0KSB7XG4gICAgICAgIG91dC53cml0ZUJ5dGVzKHRoaXMuYWRkcmVzcyk7XG4gICAgfVxufVxuZXhwb3J0cy5BZGRyZXNzUHJvZHVjZXIgPSBBZGRyZXNzUHJvZHVjZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BZGRyZXNzUHJvZHVjZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AddressProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/BlsPublicKeyProducer.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/BlsPublicKeyProducer.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlsPublicKeyProducer = void 0;\nconst ScValueBlsPublicKey_1 = __webpack_require__(/*! ../value/ScValueBlsPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsPublicKey.js\");\nclass BlsPublicKeyProducer {\n    constructor(blsPublicKey, errorPath) {\n        if (blsPublicKey.length !== ScValueBlsPublicKey_1.ScValueBlsPublicKey.BLS_PUBLIC_KEY_LENGTH) {\n            throw new Error(`In ${errorPath}, Bls public key must have length ${ScValueBlsPublicKey_1.ScValueBlsPublicKey.BLS_PUBLIC_KEY_LENGTH} bytes, got length = ${blsPublicKey.length}, value = ${blsPublicKey.toString(\"hex\")}`);\n        }\n        this.blsPublicKey = blsPublicKey;\n    }\n    write(out) {\n        out.writeBytes(this.blsPublicKey);\n    }\n}\nexports.BlsPublicKeyProducer = BlsPublicKeyProducer;\n//# sourceMappingURL=BlsPublicKeyProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9CbHNQdWJsaWNLZXlQcm9kdWNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsOEJBQThCLG1CQUFPLENBQUMsNklBQThCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxVQUFVLG9DQUFvQyxpRUFBaUUsc0JBQXNCLG9CQUFvQixZQUFZLDZCQUE2QjtBQUNwTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2J1aWxkZXIvQmxzUHVibGljS2V5UHJvZHVjZXIuanM/YTM5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxzUHVibGljS2V5UHJvZHVjZXIgPSB2b2lkIDA7XG5jb25zdCBTY1ZhbHVlQmxzUHVibGljS2V5XzEgPSByZXF1aXJlKFwiLi4vdmFsdWUvU2NWYWx1ZUJsc1B1YmxpY0tleVwiKTtcbmNsYXNzIEJsc1B1YmxpY0tleVByb2R1Y2VyIHtcbiAgICBjb25zdHJ1Y3RvcihibHNQdWJsaWNLZXksIGVycm9yUGF0aCkge1xuICAgICAgICBpZiAoYmxzUHVibGljS2V5Lmxlbmd0aCAhPT0gU2NWYWx1ZUJsc1B1YmxpY0tleV8xLlNjVmFsdWVCbHNQdWJsaWNLZXkuQkxTX1BVQkxJQ19LRVlfTEVOR1RIKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEluICR7ZXJyb3JQYXRofSwgQmxzIHB1YmxpYyBrZXkgbXVzdCBoYXZlIGxlbmd0aCAke1NjVmFsdWVCbHNQdWJsaWNLZXlfMS5TY1ZhbHVlQmxzUHVibGljS2V5LkJMU19QVUJMSUNfS0VZX0xFTkdUSH0gYnl0ZXMsIGdvdCBsZW5ndGggPSAke2Jsc1B1YmxpY0tleS5sZW5ndGh9LCB2YWx1ZSA9ICR7YmxzUHVibGljS2V5LnRvU3RyaW5nKFwiaGV4XCIpfWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYmxzUHVibGljS2V5ID0gYmxzUHVibGljS2V5O1xuICAgIH1cbiAgICB3cml0ZShvdXQpIHtcbiAgICAgICAgb3V0LndyaXRlQnl0ZXModGhpcy5ibHNQdWJsaWNLZXkpO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxzUHVibGljS2V5UHJvZHVjZXIgPSBCbHNQdWJsaWNLZXlQcm9kdWNlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJsc1B1YmxpY0tleVByb2R1Y2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/BlsPublicKeyProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/BlsSignatureProducer.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/BlsSignatureProducer.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlsSignatureProducer = void 0;\nconst ScValueBlsSignature_1 = __webpack_require__(/*! ../value/ScValueBlsSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsSignature.js\");\nclass BlsSignatureProducer {\n    constructor(blsSignature, errorPath) {\n        if (blsSignature.length !== ScValueBlsSignature_1.ScValueBlsSignature.BLS_SIGNATURE_LENGTH) {\n            throw new Error(`In ${errorPath}, Bls signature must have length ${ScValueBlsSignature_1.ScValueBlsSignature.BLS_SIGNATURE_LENGTH} bytes, got length = ${blsSignature.length}, value = ${blsSignature.toString(\"hex\")}`);\n        }\n        this.blsSignature = blsSignature;\n    }\n    write(out) {\n        out.writeBytes(this.blsSignature);\n    }\n}\nexports.BlsSignatureProducer = BlsSignatureProducer;\n//# sourceMappingURL=BlsSignatureProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9CbHNTaWduYXR1cmVQcm9kdWNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsOEJBQThCLG1CQUFPLENBQUMsNklBQThCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxVQUFVLG1DQUFtQyxnRUFBZ0Usc0JBQXNCLG9CQUFvQixZQUFZLDZCQUE2QjtBQUNsTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2J1aWxkZXIvQmxzU2lnbmF0dXJlUHJvZHVjZXIuanM/NmIyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxzU2lnbmF0dXJlUHJvZHVjZXIgPSB2b2lkIDA7XG5jb25zdCBTY1ZhbHVlQmxzU2lnbmF0dXJlXzEgPSByZXF1aXJlKFwiLi4vdmFsdWUvU2NWYWx1ZUJsc1NpZ25hdHVyZVwiKTtcbmNsYXNzIEJsc1NpZ25hdHVyZVByb2R1Y2VyIHtcbiAgICBjb25zdHJ1Y3RvcihibHNTaWduYXR1cmUsIGVycm9yUGF0aCkge1xuICAgICAgICBpZiAoYmxzU2lnbmF0dXJlLmxlbmd0aCAhPT0gU2NWYWx1ZUJsc1NpZ25hdHVyZV8xLlNjVmFsdWVCbHNTaWduYXR1cmUuQkxTX1NJR05BVFVSRV9MRU5HVEgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW4gJHtlcnJvclBhdGh9LCBCbHMgc2lnbmF0dXJlIG11c3QgaGF2ZSBsZW5ndGggJHtTY1ZhbHVlQmxzU2lnbmF0dXJlXzEuU2NWYWx1ZUJsc1NpZ25hdHVyZS5CTFNfU0lHTkFUVVJFX0xFTkdUSH0gYnl0ZXMsIGdvdCBsZW5ndGggPSAke2Jsc1NpZ25hdHVyZS5sZW5ndGh9LCB2YWx1ZSA9ICR7YmxzU2lnbmF0dXJlLnRvU3RyaW5nKFwiaGV4XCIpfWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYmxzU2lnbmF0dXJlID0gYmxzU2lnbmF0dXJlO1xuICAgIH1cbiAgICB3cml0ZShvdXQpIHtcbiAgICAgICAgb3V0LndyaXRlQnl0ZXModGhpcy5ibHNTaWduYXR1cmUpO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxzU2lnbmF0dXJlUHJvZHVjZXIgPSBCbHNTaWduYXR1cmVQcm9kdWNlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJsc1NpZ25hdHVyZVByb2R1Y2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/BlsSignatureProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/EnumVariantProducer.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/EnumVariantProducer.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EnumVariantProducer = void 0;\nconst StructProducer_1 = __webpack_require__(/*! ./StructProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/StructProducer.js\");\nclass EnumVariantProducer {\n    constructor(variantType, discriminant, errorPath) {\n        if (variantType == null) {\n            this.variantName = \"\";\n        }\n        else {\n            this.variantName = variantType.name;\n        }\n        this.structProducer = new StructProducer_1.StructProducer(variantType, errorPath);\n        this.discriminant = discriminant;\n    }\n    write(out) {\n        out.writeU8(this.discriminant);\n        this.structProducer.write(out);\n    }\n    addElement(argument) {\n        this.structProducer.addElement(argument);\n    }\n    getTypeSpecForElement() {\n        return this.structProducer.getTypeSpecForElement();\n    }\n    getFieldName() {\n        return \"/\" + this.variantName + this.structProducer.getFieldName();\n    }\n}\nexports.EnumVariantProducer = EnumVariantProducer;\n//# sourceMappingURL=EnumVariantProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9FbnVtVmFyaWFudFByb2R1Y2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQix5QkFBeUIsbUJBQU8sQ0FBQyw4SEFBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi9idWlsZGVyL0VudW1WYXJpYW50UHJvZHVjZXIuanM/YTkzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRW51bVZhcmlhbnRQcm9kdWNlciA9IHZvaWQgMDtcbmNvbnN0IFN0cnVjdFByb2R1Y2VyXzEgPSByZXF1aXJlKFwiLi9TdHJ1Y3RQcm9kdWNlclwiKTtcbmNsYXNzIEVudW1WYXJpYW50UHJvZHVjZXIge1xuICAgIGNvbnN0cnVjdG9yKHZhcmlhbnRUeXBlLCBkaXNjcmltaW5hbnQsIGVycm9yUGF0aCkge1xuICAgICAgICBpZiAodmFyaWFudFR5cGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy52YXJpYW50TmFtZSA9IFwiXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnZhcmlhbnROYW1lID0gdmFyaWFudFR5cGUubmFtZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0cnVjdFByb2R1Y2VyID0gbmV3IFN0cnVjdFByb2R1Y2VyXzEuU3RydWN0UHJvZHVjZXIodmFyaWFudFR5cGUsIGVycm9yUGF0aCk7XG4gICAgICAgIHRoaXMuZGlzY3JpbWluYW50ID0gZGlzY3JpbWluYW50O1xuICAgIH1cbiAgICB3cml0ZShvdXQpIHtcbiAgICAgICAgb3V0LndyaXRlVTgodGhpcy5kaXNjcmltaW5hbnQpO1xuICAgICAgICB0aGlzLnN0cnVjdFByb2R1Y2VyLndyaXRlKG91dCk7XG4gICAgfVxuICAgIGFkZEVsZW1lbnQoYXJndW1lbnQpIHtcbiAgICAgICAgdGhpcy5zdHJ1Y3RQcm9kdWNlci5hZGRFbGVtZW50KGFyZ3VtZW50KTtcbiAgICB9XG4gICAgZ2V0VHlwZVNwZWNGb3JFbGVtZW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdHJ1Y3RQcm9kdWNlci5nZXRUeXBlU3BlY0ZvckVsZW1lbnQoKTtcbiAgICB9XG4gICAgZ2V0RmllbGROYW1lKCkge1xuICAgICAgICByZXR1cm4gXCIvXCIgKyB0aGlzLnZhcmlhbnROYW1lICsgdGhpcy5zdHJ1Y3RQcm9kdWNlci5nZXRGaWVsZE5hbWUoKTtcbiAgICB9XG59XG5leHBvcnRzLkVudW1WYXJpYW50UHJvZHVjZXIgPSBFbnVtVmFyaWFudFByb2R1Y2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW51bVZhcmlhbnRQcm9kdWNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/EnumVariantProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/HashProducer.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/HashProducer.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HashProducer = void 0;\nconst ScValueHash_1 = __webpack_require__(/*! ../value/ScValueHash */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueHash.js\");\nclass HashProducer {\n    constructor(hash, errorPath) {\n        if (hash.length !== ScValueHash_1.ScValueHash.HASH_LENGTH) {\n            throw new Error(`In ${errorPath}, Hash must have length ${ScValueHash_1.ScValueHash.HASH_LENGTH} bytes, got length = ${hash.length}, value = ${hash.toString(\"hex\")}`);\n        }\n        this.hash = hash;\n    }\n    write(out) {\n        out.writeBytes(this.hash);\n    }\n}\nexports.HashProducer = HashProducer;\n//# sourceMappingURL=HashProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9IYXNoUHJvZHVjZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLHNCQUFzQixtQkFBTyxDQUFDLDZIQUFzQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsVUFBVSwwQkFBMEIsdUNBQXVDLHNCQUFzQixZQUFZLFlBQVkscUJBQXFCO0FBQ2hMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9IYXNoUHJvZHVjZXIuanM/MDE4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGFzaFByb2R1Y2VyID0gdm9pZCAwO1xuY29uc3QgU2NWYWx1ZUhhc2hfMSA9IHJlcXVpcmUoXCIuLi92YWx1ZS9TY1ZhbHVlSGFzaFwiKTtcbmNsYXNzIEhhc2hQcm9kdWNlciB7XG4gICAgY29uc3RydWN0b3IoaGFzaCwgZXJyb3JQYXRoKSB7XG4gICAgICAgIGlmIChoYXNoLmxlbmd0aCAhPT0gU2NWYWx1ZUhhc2hfMS5TY1ZhbHVlSGFzaC5IQVNIX0xFTkdUSCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbiAke2Vycm9yUGF0aH0sIEhhc2ggbXVzdCBoYXZlIGxlbmd0aCAke1NjVmFsdWVIYXNoXzEuU2NWYWx1ZUhhc2guSEFTSF9MRU5HVEh9IGJ5dGVzLCBnb3QgbGVuZ3RoID0gJHtoYXNoLmxlbmd0aH0sIHZhbHVlID0gJHtoYXNoLnRvU3RyaW5nKFwiaGV4XCIpfWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaGFzaCA9IGhhc2g7XG4gICAgfVxuICAgIHdyaXRlKG91dCkge1xuICAgICAgICBvdXQud3JpdGVCeXRlcyh0aGlzLmhhc2gpO1xuICAgIH1cbn1cbmV4cG9ydHMuSGFzaFByb2R1Y2VyID0gSGFzaFByb2R1Y2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SGFzaFByb2R1Y2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/HashProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/MapProducer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/MapProducer.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MapProducer = void 0;\nclass MapProducer {\n    constructor(mapTypeSpec, errorPath) {\n        this.elements = [];\n        this.mapTypeSpec = mapTypeSpec;\n        this.errorPath = errorPath;\n    }\n    write(out) {\n        if (this.elements.length % 2 === 1) {\n            throw new Error(`In ${this.errorPath}, Missing value for key`);\n        }\n        out.writeI32(this.size());\n        for (const element of this.elements) {\n            element.write(out);\n        }\n    }\n    addElement(argument) {\n        this.elements.push(argument);\n    }\n    getTypeSpecForElement() {\n        if (this.mapTypeSpec !== null) {\n            if (this.elements.length % 2 == 0) {\n                return this.mapTypeSpec.keyType;\n            }\n            else {\n                return this.mapTypeSpec.valueType;\n            }\n        }\n        return null;\n    }\n    size() {\n        return Math.trunc((this.elements.length + 1) / 2);\n    }\n    getFieldName() {\n        const index = Math.trunc(this.elements.length / 2);\n        if (this.elements.length % 2 == 0) {\n            return \"/\" + index + \"/key\";\n        }\n        else {\n            return \"/\" + index + \"/value\";\n        }\n    }\n}\nexports.MapProducer = MapProducer;\n//# sourceMappingURL=MapProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9NYXBQcm9kdWNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxlQUFlO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2J1aWxkZXIvTWFwUHJvZHVjZXIuanM/MmNkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWFwUHJvZHVjZXIgPSB2b2lkIDA7XG5jbGFzcyBNYXBQcm9kdWNlciB7XG4gICAgY29uc3RydWN0b3IobWFwVHlwZVNwZWMsIGVycm9yUGF0aCkge1xuICAgICAgICB0aGlzLmVsZW1lbnRzID0gW107XG4gICAgICAgIHRoaXMubWFwVHlwZVNwZWMgPSBtYXBUeXBlU3BlYztcbiAgICAgICAgdGhpcy5lcnJvclBhdGggPSBlcnJvclBhdGg7XG4gICAgfVxuICAgIHdyaXRlKG91dCkge1xuICAgICAgICBpZiAodGhpcy5lbGVtZW50cy5sZW5ndGggJSAyID09PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEluICR7dGhpcy5lcnJvclBhdGh9LCBNaXNzaW5nIHZhbHVlIGZvciBrZXlgKTtcbiAgICAgICAgfVxuICAgICAgICBvdXQud3JpdGVJMzIodGhpcy5zaXplKCkpO1xuICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgdGhpcy5lbGVtZW50cykge1xuICAgICAgICAgICAgZWxlbWVudC53cml0ZShvdXQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFkZEVsZW1lbnQoYXJndW1lbnQpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50cy5wdXNoKGFyZ3VtZW50KTtcbiAgICB9XG4gICAgZ2V0VHlwZVNwZWNGb3JFbGVtZW50KCkge1xuICAgICAgICBpZiAodGhpcy5tYXBUeXBlU3BlYyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuZWxlbWVudHMubGVuZ3RoICUgMiA9PSAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFwVHlwZVNwZWMua2V5VHlwZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm1hcFR5cGVTcGVjLnZhbHVlVHlwZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGgudHJ1bmMoKHRoaXMuZWxlbWVudHMubGVuZ3RoICsgMSkgLyAyKTtcbiAgICB9XG4gICAgZ2V0RmllbGROYW1lKCkge1xuICAgICAgICBjb25zdCBpbmRleCA9IE1hdGgudHJ1bmModGhpcy5lbGVtZW50cy5sZW5ndGggLyAyKTtcbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudHMubGVuZ3RoICUgMiA9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gXCIvXCIgKyBpbmRleCArIFwiL2tleVwiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFwiL1wiICsgaW5kZXggKyBcIi92YWx1ZVwiO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5NYXBQcm9kdWNlciA9IE1hcFByb2R1Y2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWFwUHJvZHVjZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/MapProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/OptionProducer.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/OptionProducer.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.OptionProducer = void 0;\nclass OptionProducer {\n    constructor(optionType, errorPath) {\n        this.element = null;\n        this.optionType = optionType;\n        this.errorPath = errorPath;\n    }\n    write(out) {\n        if (this.element !== null) {\n            out.writeU8(1);\n            this.element.write(out);\n        }\n        else {\n            out.writeU8(0);\n        }\n    }\n    addElement(argument) {\n        if (this.element !== null) {\n            throw new Error(`In ${this.errorPath}, Cannot set option value twice.`);\n        }\n        this.element = argument;\n    }\n    getTypeSpecForElement() {\n        if (this.optionType !== null) {\n            return this.optionType.valueType;\n        }\n        return null;\n    }\n    getFieldName() {\n        return \"\";\n    }\n}\nexports.OptionProducer = OptionProducer;\n//# sourceMappingURL=OptionProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9PcHRpb25Qcm9kdWNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxlQUFlO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9PcHRpb25Qcm9kdWNlci5qcz85OGIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PcHRpb25Qcm9kdWNlciA9IHZvaWQgMDtcbmNsYXNzIE9wdGlvblByb2R1Y2VyIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25UeXBlLCBlcnJvclBhdGgpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gbnVsbDtcbiAgICAgICAgdGhpcy5vcHRpb25UeXBlID0gb3B0aW9uVHlwZTtcbiAgICAgICAgdGhpcy5lcnJvclBhdGggPSBlcnJvclBhdGg7XG4gICAgfVxuICAgIHdyaXRlKG91dCkge1xuICAgICAgICBpZiAodGhpcy5lbGVtZW50ICE9PSBudWxsKSB7XG4gICAgICAgICAgICBvdXQud3JpdGVVOCgxKTtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC53cml0ZShvdXQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgb3V0LndyaXRlVTgoMCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkRWxlbWVudChhcmd1bWVudCkge1xuICAgICAgICBpZiAodGhpcy5lbGVtZW50ICE9PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEluICR7dGhpcy5lcnJvclBhdGh9LCBDYW5ub3Qgc2V0IG9wdGlvbiB2YWx1ZSB0d2ljZS5gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBhcmd1bWVudDtcbiAgICB9XG4gICAgZ2V0VHlwZVNwZWNGb3JFbGVtZW50KCkge1xuICAgICAgICBpZiAodGhpcy5vcHRpb25UeXBlICE9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25UeXBlLnZhbHVlVHlwZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgZ2V0RmllbGROYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG59XG5leHBvcnRzLk9wdGlvblByb2R1Y2VyID0gT3B0aW9uUHJvZHVjZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1PcHRpb25Qcm9kdWNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/OptionProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/PublicKeyProducer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/PublicKeyProducer.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKeyProducer = void 0;\nconst ScValuePublicKey_1 = __webpack_require__(/*! ../value/ScValuePublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValuePublicKey.js\");\nclass PublicKeyProducer {\n    constructor(publicKey, errorPath) {\n        if (publicKey.length !== ScValuePublicKey_1.ScValuePublicKey.PUBLIC_KEY_LENGTH) {\n            throw new Error(`In ${errorPath}, Public key must have length ${ScValuePublicKey_1.ScValuePublicKey.PUBLIC_KEY_LENGTH} bytes, got length = ${publicKey.length}, value = ${publicKey.toString(\"hex\")}`);\n        }\n        this.publicKey = publicKey;\n    }\n    write(out) {\n        out.writeBytes(this.publicKey);\n    }\n}\nexports.PublicKeyProducer = PublicKeyProducer;\n//# sourceMappingURL=PublicKeyProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9QdWJsaWNLZXlQcm9kdWNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsMkJBQTJCLG1CQUFPLENBQUMsdUlBQTJCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxVQUFVLGdDQUFnQyx1REFBdUQsc0JBQXNCLGlCQUFpQixZQUFZLDBCQUEwQjtBQUNoTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2J1aWxkZXIvUHVibGljS2V5UHJvZHVjZXIuanM/MWI5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHVibGljS2V5UHJvZHVjZXIgPSB2b2lkIDA7XG5jb25zdCBTY1ZhbHVlUHVibGljS2V5XzEgPSByZXF1aXJlKFwiLi4vdmFsdWUvU2NWYWx1ZVB1YmxpY0tleVwiKTtcbmNsYXNzIFB1YmxpY0tleVByb2R1Y2VyIHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWNLZXksIGVycm9yUGF0aCkge1xuICAgICAgICBpZiAocHVibGljS2V5Lmxlbmd0aCAhPT0gU2NWYWx1ZVB1YmxpY0tleV8xLlNjVmFsdWVQdWJsaWNLZXkuUFVCTElDX0tFWV9MRU5HVEgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW4gJHtlcnJvclBhdGh9LCBQdWJsaWMga2V5IG11c3QgaGF2ZSBsZW5ndGggJHtTY1ZhbHVlUHVibGljS2V5XzEuU2NWYWx1ZVB1YmxpY0tleS5QVUJMSUNfS0VZX0xFTkdUSH0gYnl0ZXMsIGdvdCBsZW5ndGggPSAke3B1YmxpY0tleS5sZW5ndGh9LCB2YWx1ZSA9ICR7cHVibGljS2V5LnRvU3RyaW5nKFwiaGV4XCIpfWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHVibGljS2V5ID0gcHVibGljS2V5O1xuICAgIH1cbiAgICB3cml0ZShvdXQpIHtcbiAgICAgICAgb3V0LndyaXRlQnl0ZXModGhpcy5wdWJsaWNLZXkpO1xuICAgIH1cbn1cbmV4cG9ydHMuUHVibGljS2V5UHJvZHVjZXIgPSBQdWJsaWNLZXlQcm9kdWNlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVB1YmxpY0tleVByb2R1Y2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/PublicKeyProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/SignatureProducer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/SignatureProducer.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SignatureProducer = void 0;\nconst ScValueSignature_1 = __webpack_require__(/*! ../value/ScValueSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSignature.js\");\nclass SignatureProducer {\n    constructor(signature, errorPath) {\n        if (signature.length !== ScValueSignature_1.ScValueSignature.SIGNATURE_LENGTH) {\n            throw new Error(`In ${errorPath}, Signature must have length ${ScValueSignature_1.ScValueSignature.SIGNATURE_LENGTH} bytes, got length = ${signature.length}, value = ${signature.toString(\"hex\")}`);\n        }\n        this.signature = signature;\n    }\n    write(out) {\n        out.writeBytes(this.signature);\n    }\n}\nexports.SignatureProducer = SignatureProducer;\n//# sourceMappingURL=SignatureProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9TaWduYXR1cmVQcm9kdWNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsMkJBQTJCLG1CQUFPLENBQUMsdUlBQTJCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxVQUFVLCtCQUErQixzREFBc0Qsc0JBQXNCLGlCQUFpQixZQUFZLDBCQUEwQjtBQUM5TTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2J1aWxkZXIvU2lnbmF0dXJlUHJvZHVjZXIuanM/ZDRhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmF0dXJlUHJvZHVjZXIgPSB2b2lkIDA7XG5jb25zdCBTY1ZhbHVlU2lnbmF0dXJlXzEgPSByZXF1aXJlKFwiLi4vdmFsdWUvU2NWYWx1ZVNpZ25hdHVyZVwiKTtcbmNsYXNzIFNpZ25hdHVyZVByb2R1Y2VyIHtcbiAgICBjb25zdHJ1Y3RvcihzaWduYXR1cmUsIGVycm9yUGF0aCkge1xuICAgICAgICBpZiAoc2lnbmF0dXJlLmxlbmd0aCAhPT0gU2NWYWx1ZVNpZ25hdHVyZV8xLlNjVmFsdWVTaWduYXR1cmUuU0lHTkFUVVJFX0xFTkdUSCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbiAke2Vycm9yUGF0aH0sIFNpZ25hdHVyZSBtdXN0IGhhdmUgbGVuZ3RoICR7U2NWYWx1ZVNpZ25hdHVyZV8xLlNjVmFsdWVTaWduYXR1cmUuU0lHTkFUVVJFX0xFTkdUSH0gYnl0ZXMsIGdvdCBsZW5ndGggPSAke3NpZ25hdHVyZS5sZW5ndGh9LCB2YWx1ZSA9ICR7c2lnbmF0dXJlLnRvU3RyaW5nKFwiaGV4XCIpfWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2lnbmF0dXJlID0gc2lnbmF0dXJlO1xuICAgIH1cbiAgICB3cml0ZShvdXQpIHtcbiAgICAgICAgb3V0LndyaXRlQnl0ZXModGhpcy5zaWduYXR1cmUpO1xuICAgIH1cbn1cbmV4cG9ydHMuU2lnbmF0dXJlUHJvZHVjZXIgPSBTaWduYXR1cmVQcm9kdWNlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpZ25hdHVyZVByb2R1Y2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/SignatureProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/SizedArrayProducer.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/SizedArrayProducer.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SizedArrayProducer = void 0;\nclass SizedArrayProducer {\n    constructor(sizedArrayType, errorPath) {\n        this.elements = [];\n        this.sizedArrayType = sizedArrayType;\n        this.errorPath = errorPath;\n    }\n    write(out) {\n        if (this.sizedArrayType != null && this.elements.length != this.sizedArrayType.length) {\n            throw new Error(`Array builder at ${this.errorPath}: Array with size ${this.elements.length} did not have the expected size ${this.sizedArrayType.length}`);\n        }\n        for (const element of this.elements) {\n            element.write(out);\n        }\n    }\n    addElement(argument) {\n        if (this.sizedArrayType != null && this.elements.length == this.sizedArrayType.length) {\n            throw new Error(`Array builder at ${this.errorPath}${this.getFieldName()}: Array is already at max size ${this.sizedArrayType.length}, cannot add more`);\n        }\n        this.elements.push(argument);\n    }\n    getTypeSpecForElement() {\n        if (this.sizedArrayType !== null) {\n            return this.sizedArrayType.valueType;\n        }\n        return null;\n    }\n    getFieldName() {\n        return \"/\" + this.elements.length;\n    }\n}\nexports.SizedArrayProducer = SizedArrayProducer;\n//# sourceMappingURL=SizedArrayProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9TaXplZEFycmF5UHJvZHVjZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsZUFBZSxvQkFBb0Isc0JBQXNCLGlDQUFpQywyQkFBMkI7QUFDcks7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsZUFBZSxFQUFFLG9CQUFvQixpQ0FBaUMsMkJBQTJCO0FBQ2pKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9TaXplZEFycmF5UHJvZHVjZXIuanM/ZDQ1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2l6ZWRBcnJheVByb2R1Y2VyID0gdm9pZCAwO1xuY2xhc3MgU2l6ZWRBcnJheVByb2R1Y2VyIHtcbiAgICBjb25zdHJ1Y3RvcihzaXplZEFycmF5VHlwZSwgZXJyb3JQYXRoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcbiAgICAgICAgdGhpcy5zaXplZEFycmF5VHlwZSA9IHNpemVkQXJyYXlUeXBlO1xuICAgICAgICB0aGlzLmVycm9yUGF0aCA9IGVycm9yUGF0aDtcbiAgICB9XG4gICAgd3JpdGUob3V0KSB7XG4gICAgICAgIGlmICh0aGlzLnNpemVkQXJyYXlUeXBlICE9IG51bGwgJiYgdGhpcy5lbGVtZW50cy5sZW5ndGggIT0gdGhpcy5zaXplZEFycmF5VHlwZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQXJyYXkgYnVpbGRlciBhdCAke3RoaXMuZXJyb3JQYXRofTogQXJyYXkgd2l0aCBzaXplICR7dGhpcy5lbGVtZW50cy5sZW5ndGh9IGRpZCBub3QgaGF2ZSB0aGUgZXhwZWN0ZWQgc2l6ZSAke3RoaXMuc2l6ZWRBcnJheVR5cGUubGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiB0aGlzLmVsZW1lbnRzKSB7XG4gICAgICAgICAgICBlbGVtZW50LndyaXRlKG91dCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkRWxlbWVudChhcmd1bWVudCkge1xuICAgICAgICBpZiAodGhpcy5zaXplZEFycmF5VHlwZSAhPSBudWxsICYmIHRoaXMuZWxlbWVudHMubGVuZ3RoID09IHRoaXMuc2l6ZWRBcnJheVR5cGUubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEFycmF5IGJ1aWxkZXIgYXQgJHt0aGlzLmVycm9yUGF0aH0ke3RoaXMuZ2V0RmllbGROYW1lKCl9OiBBcnJheSBpcyBhbHJlYWR5IGF0IG1heCBzaXplICR7dGhpcy5zaXplZEFycmF5VHlwZS5sZW5ndGh9LCBjYW5ub3QgYWRkIG1vcmVgKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2goYXJndW1lbnQpO1xuICAgIH1cbiAgICBnZXRUeXBlU3BlY0ZvckVsZW1lbnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnNpemVkQXJyYXlUeXBlICE9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zaXplZEFycmF5VHlwZS52YWx1ZVR5cGU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGdldEZpZWxkTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiL1wiICsgdGhpcy5lbGVtZW50cy5sZW5ndGg7XG4gICAgfVxufVxuZXhwb3J0cy5TaXplZEFycmF5UHJvZHVjZXIgPSBTaXplZEFycmF5UHJvZHVjZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TaXplZEFycmF5UHJvZHVjZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/SizedArrayProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/StructProducer.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/StructProducer.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StructProducer = void 0;\nclass StructProducer {\n    constructor(structTypeSpec, errorPath) {\n        this.elements = [];\n        this.structTypeSpec = structTypeSpec;\n        this.errorPath = errorPath;\n    }\n    write(out) {\n        for (const element of this.elements) {\n            element.write(out);\n        }\n        this.validate();\n    }\n    addElement(argument) {\n        this.elements.push(argument);\n    }\n    getTypeSpecForElement() {\n        if (this.structTypeSpec !== null) {\n            const lastIndex = this.elements.length;\n            if (lastIndex >= this.structTypeSpec.fields.length) {\n                throw new Error(`In ${this.errorPath}, Cannot add more arguments than the struct has fields.`);\n            }\n            return this.structTypeSpec.fields[lastIndex].type;\n        }\n        return null;\n    }\n    validate() {\n        if (this.structTypeSpec !== null &&\n            this.elements.length !== this.structTypeSpec.fields.length) {\n            const missingArgument = this.structTypeSpec.fields[this.elements.length].name;\n            throw new Error(`In ${this.errorPath}, Missing argument '${missingArgument}'`);\n        }\n    }\n    getFieldName() {\n        if (this.structTypeSpec !== null) {\n            const lastIndex = this.elements.length;\n            return \"/\" + this.structTypeSpec.fields[lastIndex].name;\n        }\n        return \"\";\n    }\n}\nexports.StructProducer = StructProducer;\n//# sourceMappingURL=StructProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9TdHJ1Y3RQcm9kdWNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsZUFBZTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsZUFBZSxzQkFBc0IsZ0JBQWdCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9TdHJ1Y3RQcm9kdWNlci5qcz8xY2RhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdHJ1Y3RQcm9kdWNlciA9IHZvaWQgMDtcbmNsYXNzIFN0cnVjdFByb2R1Y2VyIHtcbiAgICBjb25zdHJ1Y3RvcihzdHJ1Y3RUeXBlU3BlYywgZXJyb3JQYXRoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudHMgPSBbXTtcbiAgICAgICAgdGhpcy5zdHJ1Y3RUeXBlU3BlYyA9IHN0cnVjdFR5cGVTcGVjO1xuICAgICAgICB0aGlzLmVycm9yUGF0aCA9IGVycm9yUGF0aDtcbiAgICB9XG4gICAgd3JpdGUob3V0KSB7XG4gICAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiB0aGlzLmVsZW1lbnRzKSB7XG4gICAgICAgICAgICBlbGVtZW50LndyaXRlKG91dCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52YWxpZGF0ZSgpO1xuICAgIH1cbiAgICBhZGRFbGVtZW50KGFyZ3VtZW50KSB7XG4gICAgICAgIHRoaXMuZWxlbWVudHMucHVzaChhcmd1bWVudCk7XG4gICAgfVxuICAgIGdldFR5cGVTcGVjRm9yRWxlbWVudCgpIHtcbiAgICAgICAgaWYgKHRoaXMuc3RydWN0VHlwZVNwZWMgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IGxhc3RJbmRleCA9IHRoaXMuZWxlbWVudHMubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKGxhc3RJbmRleCA+PSB0aGlzLnN0cnVjdFR5cGVTcGVjLmZpZWxkcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEluICR7dGhpcy5lcnJvclBhdGh9LCBDYW5ub3QgYWRkIG1vcmUgYXJndW1lbnRzIHRoYW4gdGhlIHN0cnVjdCBoYXMgZmllbGRzLmApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc3RydWN0VHlwZVNwZWMuZmllbGRzW2xhc3RJbmRleF0udHlwZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgdmFsaWRhdGUoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0cnVjdFR5cGVTcGVjICE9PSBudWxsICYmXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzLmxlbmd0aCAhPT0gdGhpcy5zdHJ1Y3RUeXBlU3BlYy5maWVsZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCBtaXNzaW5nQXJndW1lbnQgPSB0aGlzLnN0cnVjdFR5cGVTcGVjLmZpZWxkc1t0aGlzLmVsZW1lbnRzLmxlbmd0aF0ubmFtZTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW4gJHt0aGlzLmVycm9yUGF0aH0sIE1pc3NpbmcgYXJndW1lbnQgJyR7bWlzc2luZ0FyZ3VtZW50fSdgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRGaWVsZE5hbWUoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0cnVjdFR5cGVTcGVjICE9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBsYXN0SW5kZXggPSB0aGlzLmVsZW1lbnRzLmxlbmd0aDtcbiAgICAgICAgICAgIHJldHVybiBcIi9cIiArIHRoaXMuc3RydWN0VHlwZVNwZWMuZmllbGRzW2xhc3RJbmRleF0ubmFtZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gXCJcIjtcbiAgICB9XG59XG5leHBvcnRzLlN0cnVjdFByb2R1Y2VyID0gU3RydWN0UHJvZHVjZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdHJ1Y3RQcm9kdWNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/StructProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/VecProducer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/builder/VecProducer.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VecProducer = void 0;\nclass VecProducer {\n    constructor(vec) {\n        this.elements = [];\n        this.vec = vec;\n    }\n    write(out) {\n        out.writeI32(this.elements.length);\n        for (const element of this.elements) {\n            element.write(out);\n        }\n    }\n    addElement(argument) {\n        this.elements.push(argument);\n    }\n    getTypeSpecForElement() {\n        if (this.vec !== null) {\n            return this.vec.valueType;\n        }\n        return null;\n    }\n    getFieldName() {\n        return \"/\" + this.elements.length;\n    }\n}\nexports.VecProducer = VecProducer;\n//# sourceMappingURL=VecProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9WZWNQcm9kdWNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vYnVpbGRlci9WZWNQcm9kdWNlci5qcz8zNGNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WZWNQcm9kdWNlciA9IHZvaWQgMDtcbmNsYXNzIFZlY1Byb2R1Y2VyIHtcbiAgICBjb25zdHJ1Y3Rvcih2ZWMpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IFtdO1xuICAgICAgICB0aGlzLnZlYyA9IHZlYztcbiAgICB9XG4gICAgd3JpdGUob3V0KSB7XG4gICAgICAgIG91dC53cml0ZUkzMih0aGlzLmVsZW1lbnRzLmxlbmd0aCk7XG4gICAgICAgIGZvciAoY29uc3QgZWxlbWVudCBvZiB0aGlzLmVsZW1lbnRzKSB7XG4gICAgICAgICAgICBlbGVtZW50LndyaXRlKG91dCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkRWxlbWVudChhcmd1bWVudCkge1xuICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2goYXJndW1lbnQpO1xuICAgIH1cbiAgICBnZXRUeXBlU3BlY0ZvckVsZW1lbnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnZlYyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudmVjLnZhbHVlVHlwZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgZ2V0RmllbGROYW1lKCkge1xuICAgICAgICByZXR1cm4gXCIvXCIgKyB0aGlzLmVsZW1lbnRzLmxlbmd0aDtcbiAgICB9XG59XG5leHBvcnRzLlZlY1Byb2R1Y2VyID0gVmVjUHJvZHVjZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1WZWNQcm9kdWNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/VecProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/AvlTreeMap.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/AvlTreeMap.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AvlTreeMap = void 0;\nclass AvlTreeMap {\n    constructor(treeId, client, address, keySerializer, keyDeserializer, valueDeserializer) {\n        this.client = client;\n        this.address = address;\n        this.treeId = treeId;\n        this.keySerializer = keySerializer;\n        this.keyDeserializer = keyDeserializer;\n        this.valueDeserializer = valueDeserializer;\n    }\n    get(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.client === undefined ||\n                this.address === undefined ||\n                this.keySerializer === undefined ||\n                this.keyDeserializer === undefined ||\n                this.valueDeserializer === undefined) {\n                throw new Error(\"Tried to get avl state with no client\");\n            }\n            const keyBytes = this.keySerializer(key);\n            const valueDeserializer = this.valueDeserializer;\n            return this.client\n                .getContractStateAvlValue(this.address, this.treeId, keyBytes)\n                .then((valueBytes) => valueBytes == undefined ? undefined : valueDeserializer(valueBytes));\n        });\n    }\n    getNextN(key, n) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.client === undefined ||\n                this.address === undefined ||\n                this.keySerializer === undefined ||\n                this.keyDeserializer === undefined ||\n                this.valueDeserializer === undefined) {\n                throw new Error(\"Tried to get avl state with no client\");\n            }\n            const keyBytes = key === undefined ? undefined : this.keySerializer(key);\n            const nextN = yield this.client.getContractStateAvlNextN(this.address, this.treeId, keyBytes, n);\n            const keyDeserializer = this.keyDeserializer;\n            const valueDeserializer = this.valueDeserializer;\n            return nextN.map(({ key, value }) => {\n                return { key: keyDeserializer(key), value: valueDeserializer(value) };\n            });\n        });\n    }\n    size() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.client === undefined || this.address === undefined) {\n                throw new Error(\"Tried to get avl state with no client\");\n            }\n            return this.client.getContractStateAvlSize(this.address, this.treeId);\n        });\n    }\n    deserializeKey(bytes) {\n        const deserializer = this.keyDeserializer;\n        return deserializer(bytes);\n    }\n    deserializeValue(bytes) {\n        const deserializer = this.valueDeserializer;\n        return deserializer(bytes);\n    }\n    serializeKey(key) {\n        const serializer = this.keySerializer;\n        return serializer(key);\n    }\n}\nexports.AvlTreeMap = AvlTreeMap;\n//# sourceMappingURL=AvlTreeMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvQXZsVHJlZU1hcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxZQUFZO0FBQzVDLHlCQUF5QjtBQUN6QixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi9jb2RlZ2VuLWxpYi9BdmxUcmVlTWFwLmpzPzRmZTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXZsVHJlZU1hcCA9IHZvaWQgMDtcbmNsYXNzIEF2bFRyZWVNYXAge1xuICAgIGNvbnN0cnVjdG9yKHRyZWVJZCwgY2xpZW50LCBhZGRyZXNzLCBrZXlTZXJpYWxpemVyLCBrZXlEZXNlcmlhbGl6ZXIsIHZhbHVlRGVzZXJpYWxpemVyKSB7XG4gICAgICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgICAgICB0aGlzLmFkZHJlc3MgPSBhZGRyZXNzO1xuICAgICAgICB0aGlzLnRyZWVJZCA9IHRyZWVJZDtcbiAgICAgICAgdGhpcy5rZXlTZXJpYWxpemVyID0ga2V5U2VyaWFsaXplcjtcbiAgICAgICAgdGhpcy5rZXlEZXNlcmlhbGl6ZXIgPSBrZXlEZXNlcmlhbGl6ZXI7XG4gICAgICAgIHRoaXMudmFsdWVEZXNlcmlhbGl6ZXIgPSB2YWx1ZURlc2VyaWFsaXplcjtcbiAgICB9XG4gICAgZ2V0KGtleSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuY2xpZW50ID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICB0aGlzLmFkZHJlc3MgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgIHRoaXMua2V5U2VyaWFsaXplciA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgdGhpcy5rZXlEZXNlcmlhbGl6ZXIgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgIHRoaXMudmFsdWVEZXNlcmlhbGl6ZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRyaWVkIHRvIGdldCBhdmwgc3RhdGUgd2l0aCBubyBjbGllbnRcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBrZXlCeXRlcyA9IHRoaXMua2V5U2VyaWFsaXplcihrZXkpO1xuICAgICAgICAgICAgY29uc3QgdmFsdWVEZXNlcmlhbGl6ZXIgPSB0aGlzLnZhbHVlRGVzZXJpYWxpemVyO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY2xpZW50XG4gICAgICAgICAgICAgICAgLmdldENvbnRyYWN0U3RhdGVBdmxWYWx1ZSh0aGlzLmFkZHJlc3MsIHRoaXMudHJlZUlkLCBrZXlCeXRlcylcbiAgICAgICAgICAgICAgICAudGhlbigodmFsdWVCeXRlcykgPT4gdmFsdWVCeXRlcyA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiB2YWx1ZURlc2VyaWFsaXplcih2YWx1ZUJ5dGVzKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXROZXh0TihrZXksIG4pIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNsaWVudCA9PT0gdW5kZWZpbmVkIHx8XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRyZXNzID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICB0aGlzLmtleVNlcmlhbGl6ZXIgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICAgICAgICAgIHRoaXMua2V5RGVzZXJpYWxpemVyID09PSB1bmRlZmluZWQgfHxcbiAgICAgICAgICAgICAgICB0aGlzLnZhbHVlRGVzZXJpYWxpemVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUcmllZCB0byBnZXQgYXZsIHN0YXRlIHdpdGggbm8gY2xpZW50XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qga2V5Qnl0ZXMgPSBrZXkgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHRoaXMua2V5U2VyaWFsaXplcihrZXkpO1xuICAgICAgICAgICAgY29uc3QgbmV4dE4gPSB5aWVsZCB0aGlzLmNsaWVudC5nZXRDb250cmFjdFN0YXRlQXZsTmV4dE4odGhpcy5hZGRyZXNzLCB0aGlzLnRyZWVJZCwga2V5Qnl0ZXMsIG4pO1xuICAgICAgICAgICAgY29uc3Qga2V5RGVzZXJpYWxpemVyID0gdGhpcy5rZXlEZXNlcmlhbGl6ZXI7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZURlc2VyaWFsaXplciA9IHRoaXMudmFsdWVEZXNlcmlhbGl6ZXI7XG4gICAgICAgICAgICByZXR1cm4gbmV4dE4ubWFwKCh7IGtleSwgdmFsdWUgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7IGtleToga2V5RGVzZXJpYWxpemVyKGtleSksIHZhbHVlOiB2YWx1ZURlc2VyaWFsaXplcih2YWx1ZSkgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNsaWVudCA9PT0gdW5kZWZpbmVkIHx8IHRoaXMuYWRkcmVzcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHJpZWQgdG8gZ2V0IGF2bCBzdGF0ZSB3aXRoIG5vIGNsaWVudFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmNsaWVudC5nZXRDb250cmFjdFN0YXRlQXZsU2l6ZSh0aGlzLmFkZHJlc3MsIHRoaXMudHJlZUlkKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGRlc2VyaWFsaXplS2V5KGJ5dGVzKSB7XG4gICAgICAgIGNvbnN0IGRlc2VyaWFsaXplciA9IHRoaXMua2V5RGVzZXJpYWxpemVyO1xuICAgICAgICByZXR1cm4gZGVzZXJpYWxpemVyKGJ5dGVzKTtcbiAgICB9XG4gICAgZGVzZXJpYWxpemVWYWx1ZShieXRlcykge1xuICAgICAgICBjb25zdCBkZXNlcmlhbGl6ZXIgPSB0aGlzLnZhbHVlRGVzZXJpYWxpemVyO1xuICAgICAgICByZXR1cm4gZGVzZXJpYWxpemVyKGJ5dGVzKTtcbiAgICB9XG4gICAgc2VyaWFsaXplS2V5KGtleSkge1xuICAgICAgICBjb25zdCBzZXJpYWxpemVyID0gdGhpcy5rZXlTZXJpYWxpemVyO1xuICAgICAgICByZXR1cm4gc2VyaWFsaXplcihrZXkpO1xuICAgIH1cbn1cbmV4cG9ydHMuQXZsVHJlZU1hcCA9IEF2bFRyZWVNYXA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdmxUcmVlTWFwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/AvlTreeMap.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainAddress.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainAddress.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockchainAddress = void 0;\nclass BlockchainAddress {\n    constructor(val) {\n        this.val = val;\n    }\n    asString() {\n        return this.val.toString(\"hex\");\n    }\n    asBuffer() {\n        return this.val;\n    }\n    static fromString(val) {\n        return this.fromBuffer(Buffer.from(val, \"hex\"));\n    }\n    static fromBuffer(val) {\n        if (val.length != this.ADDRESS_LENGTH) {\n            throw new Error(`BlockchainAddress expects exactly ${this.ADDRESS_LENGTH} bytes, but found ${val.length}`);\n        }\n        return new BlockchainAddress(val);\n    }\n}\nexports.BlockchainAddress = BlockchainAddress;\nBlockchainAddress.ADDRESS_LENGTH = 21;\n//# sourceMappingURL=BlockchainAddress.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvQmxvY2tjaGFpbkFkZHJlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxxQkFBcUIsbUJBQW1CLFdBQVc7QUFDcEg7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2NvZGVnZW4tbGliL0Jsb2NrY2hhaW5BZGRyZXNzLmpzPzA4MDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJsb2NrY2hhaW5BZGRyZXNzID0gdm9pZCAwO1xuY2xhc3MgQmxvY2tjaGFpbkFkZHJlc3Mge1xuICAgIGNvbnN0cnVjdG9yKHZhbCkge1xuICAgICAgICB0aGlzLnZhbCA9IHZhbDtcbiAgICB9XG4gICAgYXNTdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbC50b1N0cmluZyhcImhleFwiKTtcbiAgICB9XG4gICAgYXNCdWZmZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbDtcbiAgICB9XG4gICAgc3RhdGljIGZyb21TdHJpbmcodmFsKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZyb21CdWZmZXIoQnVmZmVyLmZyb20odmFsLCBcImhleFwiKSk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tQnVmZmVyKHZhbCkge1xuICAgICAgICBpZiAodmFsLmxlbmd0aCAhPSB0aGlzLkFERFJFU1NfTEVOR1RIKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEJsb2NrY2hhaW5BZGRyZXNzIGV4cGVjdHMgZXhhY3RseSAke3RoaXMuQUREUkVTU19MRU5HVEh9IGJ5dGVzLCBidXQgZm91bmQgJHt2YWwubGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgQmxvY2tjaGFpbkFkZHJlc3ModmFsKTtcbiAgICB9XG59XG5leHBvcnRzLkJsb2NrY2hhaW5BZGRyZXNzID0gQmxvY2tjaGFpbkFkZHJlc3M7XG5CbG9ja2NoYWluQWRkcmVzcy5BRERSRVNTX0xFTkdUSCA9IDIxO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmxvY2tjaGFpbkFkZHJlc3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainAddress.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainPublicKey.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainPublicKey.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockchainPublicKey = void 0;\nclass BlockchainPublicKey {\n    constructor(val) {\n        this.val = val;\n    }\n    asString() {\n        return this.val.toString(\"hex\");\n    }\n    asBuffer() {\n        return this.val;\n    }\n    static fromString(val) {\n        return this.fromBuffer(Buffer.from(val, \"hex\"));\n    }\n    static fromBuffer(val) {\n        if (val.length != this.PUBLIC_KEY_LENGTH) {\n            throw new Error(`BlockchainPublicKey expects exactly ${this.PUBLIC_KEY_LENGTH} bytes, but found ${val.length}`);\n        }\n        return new BlockchainPublicKey(val);\n    }\n}\nexports.BlockchainPublicKey = BlockchainPublicKey;\nBlockchainPublicKey.PUBLIC_KEY_LENGTH = 33;\n//# sourceMappingURL=BlockchainPublicKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvQmxvY2tjaGFpblB1YmxpY0tleS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLHdCQUF3QixtQkFBbUIsV0FBVztBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvQmxvY2tjaGFpblB1YmxpY0tleS5qcz81MDNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CbG9ja2NoYWluUHVibGljS2V5ID0gdm9pZCAwO1xuY2xhc3MgQmxvY2tjaGFpblB1YmxpY0tleSB7XG4gICAgY29uc3RydWN0b3IodmFsKSB7XG4gICAgICAgIHRoaXMudmFsID0gdmFsO1xuICAgIH1cbiAgICBhc1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsLnRvU3RyaW5nKFwiaGV4XCIpO1xuICAgIH1cbiAgICBhc0J1ZmZlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVN0cmluZyh2YWwpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZnJvbUJ1ZmZlcihCdWZmZXIuZnJvbSh2YWwsIFwiaGV4XCIpKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21CdWZmZXIodmFsKSB7XG4gICAgICAgIGlmICh2YWwubGVuZ3RoICE9IHRoaXMuUFVCTElDX0tFWV9MRU5HVEgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQmxvY2tjaGFpblB1YmxpY0tleSBleHBlY3RzIGV4YWN0bHkgJHt0aGlzLlBVQkxJQ19LRVlfTEVOR1RIfSBieXRlcywgYnV0IGZvdW5kICR7dmFsLmxlbmd0aH1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEJsb2NrY2hhaW5QdWJsaWNLZXkodmFsKTtcbiAgICB9XG59XG5leHBvcnRzLkJsb2NrY2hhaW5QdWJsaWNLZXkgPSBCbG9ja2NoYWluUHVibGljS2V5O1xuQmxvY2tjaGFpblB1YmxpY0tleS5QVUJMSUNfS0VZX0xFTkdUSCA9IDMzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmxvY2tjaGFpblB1YmxpY0tleS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainPublicKey.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainStateClient.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainStateClient.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockchainStateClientImpl = void 0;\nconst blockchain_api_transaction_client_1 = __webpack_require__(/*! @partisiablockchain/blockchain-api-transaction-client */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/index.js\");\nclass BlockchainStateClientImpl {\n    constructor(client) {\n        this.client = client;\n    }\n    static create(arg) {\n        let client;\n        if (typeof arg === \"string\") {\n            client = new blockchain_api_transaction_client_1.ChainControllerApi(new blockchain_api_transaction_client_1.Configuration({ basePath: arg }));\n        }\n        else {\n            client = arg;\n        }\n        return new BlockchainStateClientImpl(client);\n    }\n    getContractStateAvlNextN(address, treeId, key, n) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const next = yield this.client.getContractAvlNextN({\n                address: address.asString(),\n                treeId,\n                key: key === null || key === void 0 ? void 0 : key.toString(\"hex\"),\n                n,\n            });\n            return next.map((entry) => {\n                return { key: Buffer.from(entry.key, \"hex\"), value: Buffer.from(entry.value, \"base64\") };\n            });\n        });\n    }\n    getContractStateAvlSize(address, treeId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.client.getContractAvlInformation({ address: address.asString(), treeId }))\n                .size;\n        });\n    }\n    getContractStateAvlValue(address, treeId, key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const avlValue = yield this.client\n                .getContractAvlValue({ address: address.asString(), treeId, key: key.toString(\"hex\") })\n                .catch(() => undefined);\n            return avlValue == undefined ? undefined : Buffer.from(avlValue.data, \"base64\");\n        });\n    }\n    getContractStateBinary(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const contract = yield this.client.getContract({ address: address.asString() });\n            if (contract.serializedContract === undefined) {\n                throw new Error(\"Contract does not have any state\");\n            }\n            return Buffer.from(contract.serializedContract, \"base64\");\n        });\n    }\n}\nexports.BlockchainStateClientImpl = BlockchainStateClientImpl;\n//# sourceMappingURL=BlockchainStateClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvQmxvY2tjaGFpblN0YXRlQ2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUM7QUFDakMsNENBQTRDLG1CQUFPLENBQUMseUtBQXVEO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0lBQXdJLGVBQWU7QUFDdko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx5QkFBeUI7QUFDekIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UscUNBQXFDO0FBQ3ZHO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLCtEQUErRDtBQUN0RztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCw2QkFBNkI7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2NvZGVnZW4tbGliL0Jsb2NrY2hhaW5TdGF0ZUNsaWVudC5qcz9kODFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJsb2NrY2hhaW5TdGF0ZUNsaWVudEltcGwgPSB2b2lkIDA7XG5jb25zdCBibG9ja2NoYWluX2FwaV90cmFuc2FjdGlvbl9jbGllbnRfMSA9IHJlcXVpcmUoXCJAcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudFwiKTtcbmNsYXNzIEJsb2NrY2hhaW5TdGF0ZUNsaWVudEltcGwge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgICAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICB9XG4gICAgc3RhdGljIGNyZWF0ZShhcmcpIHtcbiAgICAgICAgbGV0IGNsaWVudDtcbiAgICAgICAgaWYgKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIGNsaWVudCA9IG5ldyBibG9ja2NoYWluX2FwaV90cmFuc2FjdGlvbl9jbGllbnRfMS5DaGFpbkNvbnRyb2xsZXJBcGkobmV3IGJsb2NrY2hhaW5fYXBpX3RyYW5zYWN0aW9uX2NsaWVudF8xLkNvbmZpZ3VyYXRpb24oeyBiYXNlUGF0aDogYXJnIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNsaWVudCA9IGFyZztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEJsb2NrY2hhaW5TdGF0ZUNsaWVudEltcGwoY2xpZW50KTtcbiAgICB9XG4gICAgZ2V0Q29udHJhY3RTdGF0ZUF2bE5leHROKGFkZHJlc3MsIHRyZWVJZCwga2V5LCBuKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBuZXh0ID0geWllbGQgdGhpcy5jbGllbnQuZ2V0Q29udHJhY3RBdmxOZXh0Tih7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogYWRkcmVzcy5hc1N0cmluZygpLFxuICAgICAgICAgICAgICAgIHRyZWVJZCxcbiAgICAgICAgICAgICAgICBrZXk6IGtleSA9PT0gbnVsbCB8fCBrZXkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGtleS50b1N0cmluZyhcImhleFwiKSxcbiAgICAgICAgICAgICAgICBuLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gbmV4dC5tYXAoKGVudHJ5KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsga2V5OiBCdWZmZXIuZnJvbShlbnRyeS5rZXksIFwiaGV4XCIpLCB2YWx1ZTogQnVmZmVyLmZyb20oZW50cnkudmFsdWUsIFwiYmFzZTY0XCIpIH07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldENvbnRyYWN0U3RhdGVBdmxTaXplKGFkZHJlc3MsIHRyZWVJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuICh5aWVsZCB0aGlzLmNsaWVudC5nZXRDb250cmFjdEF2bEluZm9ybWF0aW9uKHsgYWRkcmVzczogYWRkcmVzcy5hc1N0cmluZygpLCB0cmVlSWQgfSkpXG4gICAgICAgICAgICAgICAgLnNpemU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRDb250cmFjdFN0YXRlQXZsVmFsdWUoYWRkcmVzcywgdHJlZUlkLCBrZXkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGF2bFZhbHVlID0geWllbGQgdGhpcy5jbGllbnRcbiAgICAgICAgICAgICAgICAuZ2V0Q29udHJhY3RBdmxWYWx1ZSh7IGFkZHJlc3M6IGFkZHJlc3MuYXNTdHJpbmcoKSwgdHJlZUlkLCBrZXk6IGtleS50b1N0cmluZyhcImhleFwiKSB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaCgoKSA9PiB1bmRlZmluZWQpO1xuICAgICAgICAgICAgcmV0dXJuIGF2bFZhbHVlID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IEJ1ZmZlci5mcm9tKGF2bFZhbHVlLmRhdGEsIFwiYmFzZTY0XCIpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0Q29udHJhY3RTdGF0ZUJpbmFyeShhZGRyZXNzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBjb250cmFjdCA9IHlpZWxkIHRoaXMuY2xpZW50LmdldENvbnRyYWN0KHsgYWRkcmVzczogYWRkcmVzcy5hc1N0cmluZygpIH0pO1xuICAgICAgICAgICAgaWYgKGNvbnRyYWN0LnNlcmlhbGl6ZWRDb250cmFjdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ29udHJhY3QgZG9lcyBub3QgaGF2ZSBhbnkgc3RhdGVcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oY29udHJhY3Quc2VyaWFsaXplZENvbnRyYWN0LCBcImJhc2U2NFwiKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5CbG9ja2NoYWluU3RhdGVDbGllbnRJbXBsID0gQmxvY2tjaGFpblN0YXRlQ2xpZW50SW1wbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJsb2NrY2hhaW5TdGF0ZUNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainStateClient.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsPublicKey.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsPublicKey.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlsPublicKey = void 0;\nclass BlsPublicKey {\n    constructor(val) {\n        this.val = val;\n    }\n    asString() {\n        return this.val.toString(\"hex\");\n    }\n    asBuffer() {\n        return this.val;\n    }\n    static fromString(val) {\n        return this.fromBuffer(Buffer.from(val, \"hex\"));\n    }\n    static fromBuffer(val) {\n        if (val.length != this.BLS_PUBLIC_KEY_LENGTH) {\n            throw new Error(`BlsPublicKey expects exactly ${this.BLS_PUBLIC_KEY_LENGTH} bytes, but found ${val.length}`);\n        }\n        return new BlsPublicKey(val);\n    }\n}\nexports.BlsPublicKey = BlsPublicKey;\nBlsPublicKey.BLS_PUBLIC_KEY_LENGTH = 96;\n//# sourceMappingURL=BlsPublicKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvQmxzUHVibGljS2V5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsNEJBQTRCLG1CQUFtQixXQUFXO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi9jb2RlZ2VuLWxpYi9CbHNQdWJsaWNLZXkuanM/MzA2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxzUHVibGljS2V5ID0gdm9pZCAwO1xuY2xhc3MgQmxzUHVibGljS2V5IHtcbiAgICBjb25zdHJ1Y3Rvcih2YWwpIHtcbiAgICAgICAgdGhpcy52YWwgPSB2YWw7XG4gICAgfVxuICAgIGFzU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWwudG9TdHJpbmcoXCJoZXhcIik7XG4gICAgfVxuICAgIGFzQnVmZmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWw7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tU3RyaW5nKHZhbCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mcm9tQnVmZmVyKEJ1ZmZlci5mcm9tKHZhbCwgXCJoZXhcIikpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUJ1ZmZlcih2YWwpIHtcbiAgICAgICAgaWYgKHZhbC5sZW5ndGggIT0gdGhpcy5CTFNfUFVCTElDX0tFWV9MRU5HVEgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQmxzUHVibGljS2V5IGV4cGVjdHMgZXhhY3RseSAke3RoaXMuQkxTX1BVQkxJQ19LRVlfTEVOR1RIfSBieXRlcywgYnV0IGZvdW5kICR7dmFsLmxlbmd0aH1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEJsc1B1YmxpY0tleSh2YWwpO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxzUHVibGljS2V5ID0gQmxzUHVibGljS2V5O1xuQmxzUHVibGljS2V5LkJMU19QVUJMSUNfS0VZX0xFTkdUSCA9IDk2O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmxzUHVibGljS2V5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsPublicKey.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsSignature.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsSignature.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlsSignature = void 0;\nclass BlsSignature {\n    constructor(val) {\n        this.val = val;\n    }\n    asString() {\n        return this.val.toString(\"hex\");\n    }\n    asBuffer() {\n        return this.val;\n    }\n    static fromString(val) {\n        return this.fromBuffer(Buffer.from(val, \"hex\"));\n    }\n    static fromBuffer(val) {\n        if (val.length != this.BLS_SIGNATURE_LENGTH) {\n            throw new Error(`BlsSignature expects exactly ${this.BLS_SIGNATURE_LENGTH} bytes, but found ${val.length}`);\n        }\n        return new BlsSignature(val);\n    }\n}\nexports.BlsSignature = BlsSignature;\nBlsSignature.BLS_SIGNATURE_LENGTH = 48;\n//# sourceMappingURL=BlsSignature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvQmxzU2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsMkJBQTJCLG1CQUFtQixXQUFXO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi9jb2RlZ2VuLWxpYi9CbHNTaWduYXR1cmUuanM/MDc3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxzU2lnbmF0dXJlID0gdm9pZCAwO1xuY2xhc3MgQmxzU2lnbmF0dXJlIHtcbiAgICBjb25zdHJ1Y3Rvcih2YWwpIHtcbiAgICAgICAgdGhpcy52YWwgPSB2YWw7XG4gICAgfVxuICAgIGFzU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWwudG9TdHJpbmcoXCJoZXhcIik7XG4gICAgfVxuICAgIGFzQnVmZmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWw7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tU3RyaW5nKHZhbCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mcm9tQnVmZmVyKEJ1ZmZlci5mcm9tKHZhbCwgXCJoZXhcIikpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUJ1ZmZlcih2YWwpIHtcbiAgICAgICAgaWYgKHZhbC5sZW5ndGggIT0gdGhpcy5CTFNfU0lHTkFUVVJFX0xFTkdUSCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBCbHNTaWduYXR1cmUgZXhwZWN0cyBleGFjdGx5ICR7dGhpcy5CTFNfU0lHTkFUVVJFX0xFTkdUSH0gYnl0ZXMsIGJ1dCBmb3VuZCAke3ZhbC5sZW5ndGh9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBCbHNTaWduYXR1cmUodmFsKTtcbiAgICB9XG59XG5leHBvcnRzLkJsc1NpZ25hdHVyZSA9IEJsc1NpZ25hdHVyZTtcbkJsc1NpZ25hdHVyZS5CTFNfU0lHTkFUVVJFX0xFTkdUSCA9IDQ4O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmxzU2lnbmF0dXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsSignature.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Hash.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Hash.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash = void 0;\nclass Hash {\n    constructor(val) {\n        this.val = val;\n    }\n    asString() {\n        return this.val.toString(\"hex\");\n    }\n    asBuffer() {\n        return this.val;\n    }\n    static fromString(val) {\n        return this.fromBuffer(Buffer.from(val, \"hex\"));\n    }\n    static fromBuffer(val) {\n        if (val.length != this.HASH_LENGTH) {\n            throw new Error(`Hash expects exactly ${this.HASH_LENGTH} bytes, but found ${val.length}`);\n        }\n        return new Hash(val);\n    }\n}\nexports.Hash = Hash;\nHash.HASH_LENGTH = 32;\n//# sourceMappingURL=Hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvSGFzaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGtCQUFrQixtQkFBbUIsV0FBVztBQUNwRztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvSGFzaC5qcz85MzRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IYXNoID0gdm9pZCAwO1xuY2xhc3MgSGFzaCB7XG4gICAgY29uc3RydWN0b3IodmFsKSB7XG4gICAgICAgIHRoaXMudmFsID0gdmFsO1xuICAgIH1cbiAgICBhc1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsLnRvU3RyaW5nKFwiaGV4XCIpO1xuICAgIH1cbiAgICBhc0J1ZmZlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVN0cmluZyh2YWwpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZnJvbUJ1ZmZlcihCdWZmZXIuZnJvbSh2YWwsIFwiaGV4XCIpKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21CdWZmZXIodmFsKSB7XG4gICAgICAgIGlmICh2YWwubGVuZ3RoICE9IHRoaXMuSEFTSF9MRU5HVEgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSGFzaCBleHBlY3RzIGV4YWN0bHkgJHt0aGlzLkhBU0hfTEVOR1RIfSBieXRlcywgYnV0IGZvdW5kICR7dmFsLmxlbmd0aH1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEhhc2godmFsKTtcbiAgICB9XG59XG5leHBvcnRzLkhhc2ggPSBIYXNoO1xuSGFzaC5IQVNIX0xFTkdUSCA9IDMyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SGFzaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Hash.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/SecretInputBuilder.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/SecretInputBuilder.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SecretInputBuilder = void 0;\n/** Codegen builder for creating secret inputs. */\nclass SecretInputBuilder {\n    /**\n     * Create secret input builder. Called by the codegenned code.\n     *\n     * @param publicRpc the public rpc of the secret input function\n     * @param secretSerializer function for serializing the secret input\n     */\n    constructor(publicRpc, secretSerializer) {\n        this.publicRpc = publicRpc;\n        this.secretSerializer = secretSerializer;\n    }\n    /**\n     * Add the secret input.\n     *\n     * @param secretInput the secret input of the function\n     * @returns record containing the public rpc and the serialized secret input\n     */\n    secretInput(secretInput) {\n        return { publicRpc: this.publicRpc, secretInput: this.secretSerializer(secretInput) };\n    }\n}\nexports.SecretInputBuilder = SecretInputBuilder;\n//# sourceMappingURL=SecretInputBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvU2VjcmV0SW5wdXRCdWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvU2VjcmV0SW5wdXRCdWlsZGVyLmpzP2RhMzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNlY3JldElucHV0QnVpbGRlciA9IHZvaWQgMDtcbi8qKiBDb2RlZ2VuIGJ1aWxkZXIgZm9yIGNyZWF0aW5nIHNlY3JldCBpbnB1dHMuICovXG5jbGFzcyBTZWNyZXRJbnB1dEJ1aWxkZXIge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBzZWNyZXQgaW5wdXQgYnVpbGRlci4gQ2FsbGVkIGJ5IHRoZSBjb2RlZ2VubmVkIGNvZGUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcHVibGljUnBjIHRoZSBwdWJsaWMgcnBjIG9mIHRoZSBzZWNyZXQgaW5wdXQgZnVuY3Rpb25cbiAgICAgKiBAcGFyYW0gc2VjcmV0U2VyaWFsaXplciBmdW5jdGlvbiBmb3Igc2VyaWFsaXppbmcgdGhlIHNlY3JldCBpbnB1dFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpY1JwYywgc2VjcmV0U2VyaWFsaXplcikge1xuICAgICAgICB0aGlzLnB1YmxpY1JwYyA9IHB1YmxpY1JwYztcbiAgICAgICAgdGhpcy5zZWNyZXRTZXJpYWxpemVyID0gc2VjcmV0U2VyaWFsaXplcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkIHRoZSBzZWNyZXQgaW5wdXQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc2VjcmV0SW5wdXQgdGhlIHNlY3JldCBpbnB1dCBvZiB0aGUgZnVuY3Rpb25cbiAgICAgKiBAcmV0dXJucyByZWNvcmQgY29udGFpbmluZyB0aGUgcHVibGljIHJwYyBhbmQgdGhlIHNlcmlhbGl6ZWQgc2VjcmV0IGlucHV0XG4gICAgICovXG4gICAgc2VjcmV0SW5wdXQoc2VjcmV0SW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIHsgcHVibGljUnBjOiB0aGlzLnB1YmxpY1JwYywgc2VjcmV0SW5wdXQ6IHRoaXMuc2VjcmV0U2VyaWFsaXplcihzZWNyZXRJbnB1dCkgfTtcbiAgICB9XG59XG5leHBvcnRzLlNlY3JldElucHV0QnVpbGRlciA9IFNlY3JldElucHV0QnVpbGRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNlY3JldElucHV0QnVpbGRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/SecretInputBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Signature.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Signature.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signature = void 0;\nclass Signature {\n    constructor(val) {\n        this.val = val;\n    }\n    asString() {\n        return this.val.toString(\"hex\");\n    }\n    asBuffer() {\n        return this.val;\n    }\n    static fromString(val) {\n        return this.fromBuffer(Buffer.from(val, \"hex\"));\n    }\n    static fromBuffer(val) {\n        if (val.length != this.SIGNATURE_LENGTH) {\n            throw new Error(`Signature expects exactly ${this.SIGNATURE_LENGTH} bytes, but found ${val.length}`);\n        }\n        return new Signature(val);\n    }\n}\nexports.Signature = Signature;\nSignature.SIGNATURE_LENGTH = 65;\n//# sourceMappingURL=Signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vY29kZWdlbi1saWIvU2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsdUJBQXVCLG1CQUFtQixXQUFXO0FBQzlHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi9jb2RlZ2VuLWxpYi9TaWduYXR1cmUuanM/NWI4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmF0dXJlID0gdm9pZCAwO1xuY2xhc3MgU2lnbmF0dXJlIHtcbiAgICBjb25zdHJ1Y3Rvcih2YWwpIHtcbiAgICAgICAgdGhpcy52YWwgPSB2YWw7XG4gICAgfVxuICAgIGFzU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWwudG9TdHJpbmcoXCJoZXhcIik7XG4gICAgfVxuICAgIGFzQnVmZmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWw7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tU3RyaW5nKHZhbCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mcm9tQnVmZmVyKEJ1ZmZlci5mcm9tKHZhbCwgXCJoZXhcIikpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUJ1ZmZlcih2YWwpIHtcbiAgICAgICAgaWYgKHZhbC5sZW5ndGggIT0gdGhpcy5TSUdOQVRVUkVfTEVOR1RIKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFNpZ25hdHVyZSBleHBlY3RzIGV4YWN0bHkgJHt0aGlzLlNJR05BVFVSRV9MRU5HVEh9IGJ5dGVzLCBidXQgZm91bmQgJHt2YWwubGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgU2lnbmF0dXJlKHZhbCk7XG4gICAgfVxufVxuZXhwb3J0cy5TaWduYXR1cmUgPSBTaWduYXR1cmU7XG5TaWduYXR1cmUuU0lHTkFUVVJFX0xFTkdUSCA9IDY1O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2lnbmF0dXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Signature.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/BlockchainClientForDeploymentImpl.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/BlockchainClientForDeploymentImpl.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockchainClientForDeploymentImpl = void 0;\n/**\n * Default implementation of BlockchainClientForDeployment using\n * BlockchainTransactionClient and ChainControllerApi.\n */\nclass BlockchainClientForDeploymentImpl {\n    /**\n     * Constructor for {@link BlockchainClientForDeploymentImpl}.\n     *\n     * @param transactionClient the underlying transaction client\n     * @param chainController the underlying chainController\n     */\n    constructor(transactionClient, chainController) {\n        this.transactionClient = transactionClient;\n        this.chainController = chainController;\n    }\n    getContract(address) {\n        return this.chainController.getContract({ address });\n    }\n    sign(transaction, gasCost) {\n        return this.transactionClient.sign(transaction, gasCost);\n    }\n    send(signedTransaction) {\n        return this.transactionClient.send(signedTransaction);\n    }\n    waitForSpawnedEvents(sentTransaction) {\n        return this.transactionClient.waitForSpawnedEvents(sentTransaction);\n    }\n}\nexports.BlockchainClientForDeploymentImpl = BlockchainClientForDeploymentImpl;\n//# sourceMappingURL=BlockchainClientForDeploymentImpl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vZGVwbG95bWVudGNsaWVudC9CbG9ja2NoYWluQ2xpZW50Rm9yRGVwbG95bWVudEltcGwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix3Q0FBd0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELFNBQVM7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL2RlcGxveW1lbnRjbGllbnQvQmxvY2tjaGFpbkNsaWVudEZvckRlcGxveW1lbnRJbXBsLmpzPzYxYzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJsb2NrY2hhaW5DbGllbnRGb3JEZXBsb3ltZW50SW1wbCA9IHZvaWQgMDtcbi8qKlxuICogRGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBvZiBCbG9ja2NoYWluQ2xpZW50Rm9yRGVwbG95bWVudCB1c2luZ1xuICogQmxvY2tjaGFpblRyYW5zYWN0aW9uQ2xpZW50IGFuZCBDaGFpbkNvbnRyb2xsZXJBcGkuXG4gKi9cbmNsYXNzIEJsb2NrY2hhaW5DbGllbnRGb3JEZXBsb3ltZW50SW1wbCB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0b3IgZm9yIHtAbGluayBCbG9ja2NoYWluQ2xpZW50Rm9yRGVwbG95bWVudEltcGx9LlxuICAgICAqXG4gICAgICogQHBhcmFtIHRyYW5zYWN0aW9uQ2xpZW50IHRoZSB1bmRlcmx5aW5nIHRyYW5zYWN0aW9uIGNsaWVudFxuICAgICAqIEBwYXJhbSBjaGFpbkNvbnRyb2xsZXIgdGhlIHVuZGVybHlpbmcgY2hhaW5Db250cm9sbGVyXG4gICAgICovXG4gICAgY29uc3RydWN0b3IodHJhbnNhY3Rpb25DbGllbnQsIGNoYWluQ29udHJvbGxlcikge1xuICAgICAgICB0aGlzLnRyYW5zYWN0aW9uQ2xpZW50ID0gdHJhbnNhY3Rpb25DbGllbnQ7XG4gICAgICAgIHRoaXMuY2hhaW5Db250cm9sbGVyID0gY2hhaW5Db250cm9sbGVyO1xuICAgIH1cbiAgICBnZXRDb250cmFjdChhZGRyZXNzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoYWluQ29udHJvbGxlci5nZXRDb250cmFjdCh7IGFkZHJlc3MgfSk7XG4gICAgfVxuICAgIHNpZ24odHJhbnNhY3Rpb24sIGdhc0Nvc3QpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNhY3Rpb25DbGllbnQuc2lnbih0cmFuc2FjdGlvbiwgZ2FzQ29zdCk7XG4gICAgfVxuICAgIHNlbmQoc2lnbmVkVHJhbnNhY3Rpb24pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNhY3Rpb25DbGllbnQuc2VuZChzaWduZWRUcmFuc2FjdGlvbik7XG4gICAgfVxuICAgIHdhaXRGb3JTcGF3bmVkRXZlbnRzKHNlbnRUcmFuc2FjdGlvbikge1xuICAgICAgICByZXR1cm4gdGhpcy50cmFuc2FjdGlvbkNsaWVudC53YWl0Rm9yU3Bhd25lZEV2ZW50cyhzZW50VHJhbnNhY3Rpb24pO1xuICAgIH1cbn1cbmV4cG9ydHMuQmxvY2tjaGFpbkNsaWVudEZvckRlcGxveW1lbnRJbXBsID0gQmxvY2tjaGFpbkNsaWVudEZvckRlcGxveW1lbnRJbXBsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmxvY2tjaGFpbkNsaWVudEZvckRlcGxveW1lbnRJbXBsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/BlockchainClientForDeploymentImpl.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/DeploymentBuilder.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/DeploymentBuilder.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DeploymentBuilder = void 0;\nexports.findBinderId = findBinderId;\nconst sections_1 = __webpack_require__(/*! @partisiablockchain/sections */ \"(action-browser)/./node_modules/@partisiablockchain/sections/target/main/index.js\");\nconst AbiParser_1 = __webpack_require__(/*! ../parser/AbiParser */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/AbiParser.js\");\nconst StateReader_1 = __webpack_require__(/*! ../state/StateReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/StateReader.js\");\nconst AbiVersion_1 = __webpack_require__(/*! ../types/AbiVersion */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/AbiVersion.js\");\nconst FnRpcBuilder_1 = __webpack_require__(/*! ../rpc/FnRpcBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/FnRpcBuilder.js\");\nconst FnKinds_1 = __webpack_require__(/*! ../parser/FnKinds */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js\");\nclass DeploymentBuilder {\n    constructor(blockchainClient) {\n        this.blockchainClient = blockchainClient;\n    }\n    /**\n     * Set the abi and contract bytes to deploy through a pbc file.\n     *\n     * <p>It is required to provide the abi and the contract bytes, either through this method or\n     * through a combination of {@link #abi} and either {@link #wasm} or {@link #zkwa}.\n     *\n     * @param pbcFile the pbc file to deploy\n     * @returns this builder\n     */\n    pbcFile(pbcFile) {\n        let pbc;\n        if (Buffer.isBuffer(pbcFile)) {\n            pbc = sections_1.PbcFile.fromBytes(pbcFile);\n        }\n        else {\n            pbc = pbcFile;\n        }\n        this.isZk = pbc.isZk;\n        this.abiBytes = pbc.getAbiBytes();\n        if (pbc.isZk) {\n            this.contractBytes = pbc.getZkwaBytes();\n        }\n        else {\n            this.contractBytes = pbc.getWasmBytes();\n        }\n        return this;\n    }\n    /**\n     * Set the abi of the contract to deploy.\n     *\n     * <p>It is required to provide the abi either through this method or through {@link #pbcFile}.\n     *\n     * @param abi abi bytes to deploy\n     * @returns this builder\n     */\n    abi(abi) {\n        this.abiBytes = abi;\n        return this;\n    }\n    /**\n     * Set the contract bytes of the contract to deploy. Using this function denotes that it is a zk\n     * contract you are trying to deploy.\n     *\n     * <p>It is required to provide the contract bytes either though this method, {@link wasm}, or\n     * {@link pbcFile}.\n     *\n     * @param zkwa contract bytes to deploy\n     * @returns this builder\n     */\n    zkwa(zkwa) {\n        this.isZk = true;\n        this.contractBytes = zkwa;\n        return this;\n    }\n    /**\n     * Set the contract bytes of the contract to deploy. Using this function denotes that it is a\n     * public contract you are trying to deploy.\n     *\n     * <p>It is required to provide the contract bytes either though this method, {@link #zkwa}, or\n     * {@link #pbcFile}.\n     *\n     * @param wasm contract bytes to deploy\n     * @returns this builder\n     */\n    wasm(wasm) {\n        this.isZk = false;\n        this.contractBytes = wasm;\n        return this;\n    }\n    /**\n     * Set the initialization bytes of the contract to deploy.\n     *\n     * <p>This is a required parameter.\n     *\n     * @param initRpc the initialization bytes\n     * @returns this builder\n     */\n    initRpc(initRpc) {\n        this.initRpcBytes = initRpc;\n        return this;\n    }\n    /**\n     * Set the contract address of the deploy contract to target.\n     *\n     * <p>Not a required parameter. The default deploy contract address used depends on if you are\n     * deploying a public or a zk contract.\n     *\n     * <ul>\n     *   <li>Default pub deploy address: 0197a0e238e924025bad144aa0c4913e46308f9a4d\n     *   <li>Default zk deploy address: 018bc1ccbb672b87710327713c97d43204905082cb\n     * </ul>\n     *\n     * @param deployContractAddress address of the deploy contract to target\n     * @returns this builder\n     */\n    deployContractAddress(deployContractAddress) {\n        this.deployContractAddressField = deployContractAddress;\n        return this;\n    }\n    /**\n     * Set the allowed jurisdictions from which zk nodes can be selected. Follows the ISO 3166-1\n     * numeric format, meaning jurisdictions are integers in [0-999].\n     *\n     * <p>This argument is not allowed if trying to deploy a public contract. It is not required if\n     * deploying a zk contract and a default of all jurisdictions allowed is used if it is not set.\n     *\n     * <p>There are three cases for the jurisdictions:\n     *\n     * <ul>\n     *   <li>An outer list containing nothing: All jurisdictions are allowed for all requested nodes.\n     *   <li>An outer list containing one inner list: Only jurisdictions in the inner list are allowed\n     *       for all requested nodes.\n     *   <li>An outer list containing multiple inner lists: Jurisdictions in the first inner list are\n     *       allowed for the first requested node, jurisdictions in the second list for the second\n     *       requested node etc.\n     * </ul>\n     *\n     * @param allowedJurisdictions the jurisdictions from which zk nodes can be selected. Follows the\n     *     ISO 3166-1 numeric format, meaning jurisdictions are integers in [0-999]\n     * @returns this builder\n     */\n    allowedJurisdictions(allowedJurisdictions) {\n        this.allowedJurisdictionsField = allowedJurisdictions;\n        return this;\n    }\n    /**\n     * Set the required stakes from the nodes selected for the deployed zk contract.\n     *\n     * <p>This argument is not allowed if trying to deploy a public contract.\n     *\n     * <p>It is not required if deploying a zk contract and a default of the minimum amount of stakes\n     * '2_000_0000' is used if it is not set.\n     *\n     * @param requiredStakes the amount of stakes required for the computation.\n     * @returns this builder\n     */\n    requiredStakes(requiredStakes) {\n        this.requiredStakesField = requiredStakes;\n        return this;\n    }\n    /**\n     * Set the binder id used to determine which binder to deploy the contract with.\n     *\n     * <p>This argument is not required. By default it will read the state of the deploy contract to\n     * find a binder which supports the given contract.\n     *\n     * @param binderId binder id\n     * @returns this builder\n     */\n    binderId(binderId) {\n        this.binderIdField = binderId;\n        return this;\n    }\n    /**\n     * Set the gas cost used to deploy the contract.\n     *\n     * <p>The default gas cost depends on if you are deploying a public or a zk contract\n     *\n     * <ul>\n     *   <li>Default public gas cost: 800_000\n     *   <li>Default public zk cost: 2_000_000\n     * </ul>\n     *\n     * @param gasCost gas cost used to deploy the contract\n     * @returns this builder\n     */\n    gasCost(gasCost) {\n        this.gasCostField = gasCost;\n        return this;\n    }\n    /**\n     * Build the rpc for the transaction to the deploy contract.\n     *\n     * @returns the rpc for the deploy contract\n     */\n    buildRpc() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateRequiredParameters();\n            this.validateOptionalParameters();\n            const deployContract = yield this.blockchainClient\n                .getContract(this.deployContractAddressField)\n                .catch(() => {\n                throw new Error(\"Unable to get deploy contract state\");\n            });\n            const deployAbiBytes = Buffer.from(deployContract.abi, \"base64\");\n            const deployState = Buffer.from(deployContract.serializedContract, \"base64\");\n            const deployAbi = new AbiParser_1.AbiParser(deployAbiBytes).parseAbi().contract;\n            const abiToBeDeployed = new AbiParser_1.AbiParser(this.abiBytes).parseAbi();\n            const binderId = this.determineBinderId(abiToBeDeployed, deployAbi, deployState);\n            const initializationBytes = this.getInitializationBytes(abiToBeDeployed);\n            if (this.isZk) {\n                return this.realDeployRpc(deployAbi, initializationBytes, binderId);\n            }\n            else {\n                return this.pubDeployRpc(deployAbi, initializationBytes, binderId);\n            }\n        });\n    }\n    /**\n     * Build the signed transaction of the deploy call.\n     *\n     * @returns the signed transaction of the deploy call.\n     */\n    build() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const rpc = yield this.buildRpc();\n            let gasCost;\n            if (this.gasCostField !== undefined) {\n                gasCost = this.gasCostField;\n            }\n            else if (this.isZk) {\n                gasCost = DeploymentBuilder.DEFAULT_REAL_GAS_COST;\n            }\n            else {\n                gasCost = DeploymentBuilder.DEFAULT_PUB_GAS_COST;\n            }\n            return this.blockchainClient.sign({ address: this.deployContractAddressField, rpc }, gasCost);\n        });\n    }\n    /**\n     * Build and send the signed transaction to the deploy contract.\n     *\n     * @returns the contract address of deployed contract, and the executed transaction tree of the\n     *     transaction.\n     */\n    deploy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const signedTransaction = yield this.build();\n            const sentTransaction = yield this.blockchainClient.send(signedTransaction).catch(() => {\n                throw new Error(\"Failed to send deployment transaction\");\n            });\n            const transactionTree = yield this.blockchainClient.waitForSpawnedEvents(sentTransaction);\n            if (transactionTree.hasFailures()) {\n                throw new Error(`Deployment '${signedTransaction.identifier()}' failed with cause: ${findFailureCause(transactionTree)}`);\n            }\n            const addressType = this.isZk ? \"03\" : \"02\";\n            const contractAddress = addressType + signedTransaction.identifier().slice(24, 64);\n            return { contractAddress, executedTransactions: transactionTree };\n        });\n    }\n    validateRequiredParameters() {\n        if (this.contractBytes === undefined) {\n            throw new Error(\"Missing contract bytes\");\n        }\n        if (this.abiBytes === undefined) {\n            throw new Error(\"Missing abi bytes\");\n        }\n        if (this.initRpcBytes === undefined) {\n            throw new Error(\"Missing initialization bytes\");\n        }\n    }\n    validateOptionalParameters() {\n        if (this.deployContractAddressField === undefined) {\n            if (this.isZk) {\n                this.deployContractAddressField = DeploymentBuilder.DEFAULT_REAL_ADDRESS;\n            }\n            else {\n                this.deployContractAddressField = DeploymentBuilder.DEFAULT_PUB_ADDRESS;\n            }\n        }\n        if (this.isZk && this.allowedJurisdictionsField === undefined) {\n            this.allowedJurisdictionsField = DeploymentBuilder.DEFAULT_ALLOWED_JURISDICTION;\n        }\n        if (!this.isZk && this.allowedJurisdictionsField !== undefined) {\n            throw new Error(\"Allowed jurisdictions is not allowed as argument to pub deploy\");\n        }\n        if (this.isZk && this.requiredStakesField === undefined) {\n            this.requiredStakesField = DeploymentBuilder.DEFAULT_REQUIRED_STAKES;\n        }\n        if (!this.isZk && this.requiredStakesField !== undefined) {\n            throw new Error(\"Required stakes is not allowed as argument to pub deploy\");\n        }\n    }\n    determineBinderId(abiToBeDeployed, deployAbi, deployState) {\n        if (this.binderIdField !== undefined) {\n            return this.binderIdField;\n        }\n        const binderVersions = getSupportedBinderVersions(deployState, deployAbi);\n        const binderVersion = abiToBeDeployed.versionBinder;\n        return findBinderId(binderVersions, binderVersion);\n    }\n    realDeployRpc(deployAbi, initializationBytes, binderId) {\n        const fnBuilder = new FnRpcBuilder_1.FnRpcBuilder(\"deployContractV3\", deployAbi);\n        fnBuilder.addVecU8(this.contractBytes);\n        fnBuilder.addVecU8(initializationBytes);\n        fnBuilder.addVecU8(this.abiBytes);\n        fnBuilder.addI64(this.requiredStakesField);\n        const vecBuilder = fnBuilder.addVec();\n        for (const allowedJurisdiction of this.allowedJurisdictionsField) {\n            const vecVecBuilder = vecBuilder.addVec();\n            for (const allowed of allowedJurisdiction) {\n                vecVecBuilder.addI32(allowed);\n            }\n        }\n        fnBuilder.addI32(binderId);\n        return fnBuilder.getBytes();\n    }\n    pubDeployRpc(deployAbi, initializationBytes, binderId) {\n        const fnBuilder = new FnRpcBuilder_1.FnRpcBuilder(\"deployContractWithBinderId\", deployAbi);\n        fnBuilder.addVecU8(this.contractBytes);\n        fnBuilder.addVecU8(this.abiBytes);\n        fnBuilder.addVecU8(initializationBytes);\n        fnBuilder.addI32(binderId);\n        return fnBuilder.getBytes();\n    }\n    getInitializationBytes(abiToBeDeployed) {\n        if (Buffer.isBuffer(this.initRpcBytes)) {\n            return this.initRpcBytes;\n        }\n        const fnBuilder = new FnRpcBuilder_1.FnRpcBuilder(Buffer.from(\"ffffffff0f\", \"hex\"), abiToBeDeployed.contract, FnKinds_1.FnKinds.init);\n        this.initRpcBytes(fnBuilder);\n        return fnBuilder.getBytes();\n    }\n}\nexports.DeploymentBuilder = DeploymentBuilder;\nDeploymentBuilder.DEFAULT_PUB_ADDRESS = \"0197a0e238e924025bad144aa0c4913e46308f9a4d\";\nDeploymentBuilder.DEFAULT_REAL_ADDRESS = \"018bc1ccbb672b87710327713c97d43204905082cb\";\nDeploymentBuilder.DEFAULT_ALLOWED_JURISDICTION = [];\nDeploymentBuilder.DEFAULT_REQUIRED_STAKES = 20000000;\nDeploymentBuilder.DEFAULT_PUB_GAS_COST = 800000;\nDeploymentBuilder.DEFAULT_REAL_GAS_COST = 2000000;\nfunction getSupportedBinderVersions(deployState, deployAbi) {\n    const state = new StateReader_1.StateReader(deployState, deployAbi).readState();\n    const binders = state.getFieldValue(\"binders\").optionValue().innerValue.mapValue();\n    const entries = [...binders.map.entries()].map(([k, v]) => [\n        k.optionValue().innerValue.asNumber(),\n        versionIntervalFromScBinderInfo(v.optionValue().innerValue.structValue()),\n    ]);\n    return new Map(entries);\n}\nfunction versionIntervalFromScBinderInfo(binderInfo) {\n    const versionInterval = binderInfo\n        .getFieldValue(\"versionInterval\")\n        .optionValue()\n        .innerValue.structValue();\n    const scMin = versionInterval\n        .getFieldValue(\"supportedBinderVersionMin\")\n        .optionValue()\n        .innerValue.structValue();\n    const scMax = versionInterval\n        .getFieldValue(\"supportedBinderVersionMax\")\n        .optionValue()\n        .innerValue.structValue();\n    const min = new AbiVersion_1.AbiVersion(scMin.getFieldValue(\"major\").asNumber(), scMin.getFieldValue(\"minor\").asNumber(), scMin.getFieldValue(\"patch\").asNumber());\n    const max = new AbiVersion_1.AbiVersion(scMax.getFieldValue(\"major\").asNumber(), scMax.getFieldValue(\"minor\").asNumber(), scMax.getFieldValue(\"patch\").asNumber());\n    return { min, max };\n}\nfunction findBinderId(binders, binderVersion) {\n    const entry = [...binders.entries()].find(([_, v]) => checkDeployVersion(binderVersion, v));\n    if (entry === undefined) {\n        throw new Error(\"No binders exists supporting version \" + binderVersion.toString());\n    }\n    return entry[0];\n}\nfunction checkDeployVersion(binderVersion, versionInterval) {\n    return checkVersion(binderVersion, versionInterval.max.major, versionInterval.max.minor, versionInterval.min.major, versionInterval.min.minor);\n}\nfunction checkVersion(binderVersion, maxMajor, maxMinor, minMajor, minMinor) {\n    return (maxMajor >= binderVersion.major &&\n        maxMinor >= binderVersion.minor &&\n        minMajor <= binderVersion.major &&\n        minMinor <= binderVersion.minor);\n}\nfunction findFailureCause(transactionTree) {\n    const errorMsg = executedToErrorMsg(transactionTree.transaction);\n    if (errorMsg !== undefined) {\n        return errorMsg;\n    }\n    return transactionTree.events.map((t) => executedToErrorMsg(t)).find((p) => p !== undefined);\n}\nfunction executedToErrorMsg(executedTransaction) {\n    if (executedTransaction.executionStatus.success) {\n        return undefined;\n    }\n    return executedTransaction.executionStatus.failure.errorMessage;\n}\n//# sourceMappingURL=DeploymentBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/DeploymentBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/DeploymentClient.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/DeploymentClient.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DeploymentClient = void 0;\nconst blockchain_api_transaction_client_1 = __webpack_require__(/*! @partisiablockchain/blockchain-api-transaction-client */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/index.js\");\nconst BlockchainClientForDeploymentImpl_1 = __webpack_require__(/*! ./BlockchainClientForDeploymentImpl */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/BlockchainClientForDeploymentImpl.js\");\nconst DeploymentBuilder_1 = __webpack_require__(/*! ./DeploymentBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/DeploymentBuilder.js\");\n/** Client for deploying contracts. */\nclass DeploymentClient {\n    /**\n     * Constructor for {@link DeploymentClient}.\n     *\n     * @param blockchainClient client for getting state and building and sending transactions\n     */\n    constructor(blockchainClient) {\n        this.blockchainClient = blockchainClient;\n    }\n    /**\n     * Create a {@link DeploymentClient} with our default transaction client and state client.\n     *\n     * @param transactionClient transaction client building and sending transactions\n     * @param chainController blockchain client\n     * @returns a new {@link DeploymentClient}\n     */\n    static create(transactionClient, chainController) {\n        return new DeploymentClient(new BlockchainClientForDeploymentImpl_1.BlockchainClientForDeploymentImpl(transactionClient, chainController));\n    }\n    /**\n     * Create a {@link DeploymentClient} with targeting a specific base url.\n     *\n     * @param baseUrl base url of the blockchain to target\n     * @param senderAuthentication sender authentication for signing deploy transactions\n     * @returns a new {@link DeploymentClient}\n     */\n    static createWithUrl(baseUrl, senderAuthentication) {\n        const configuration = new blockchain_api_transaction_client_1.Configuration({ basePath: baseUrl });\n        const chainController = new blockchain_api_transaction_client_1.ChainControllerApi(configuration);\n        const transactionClient = blockchain_api_transaction_client_1.BlockchainTransactionClient.create(baseUrl, senderAuthentication);\n        return this.create(transactionClient, chainController);\n    }\n    /**\n     * Create a builder for deploying a contract.\n     *\n     * @returns a DeploymentBuilder\n     */\n    builder() {\n        return new DeploymentBuilder_1.DeploymentBuilder(this.blockchainClient);\n    }\n}\nexports.DeploymentClient = DeploymentClient;\n//# sourceMappingURL=DeploymentClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vZGVwbG95bWVudGNsaWVudC9EZXBsb3ltZW50Q2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4Qiw0Q0FBNEMsbUJBQU8sQ0FBQyx5S0FBdUQ7QUFDM0csNENBQTRDLG1CQUFPLENBQUMsNktBQXFDO0FBQ3pGLDRCQUE0QixtQkFBTyxDQUFDLDZJQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHdCQUF3QjtBQUN6QztBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix3QkFBd0I7QUFDekM7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSxzRkFBc0YsbUJBQW1CO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vZGVwbG95bWVudGNsaWVudC9EZXBsb3ltZW50Q2xpZW50LmpzPzEzNjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlcGxveW1lbnRDbGllbnQgPSB2b2lkIDA7XG5jb25zdCBibG9ja2NoYWluX2FwaV90cmFuc2FjdGlvbl9jbGllbnRfMSA9IHJlcXVpcmUoXCJAcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudFwiKTtcbmNvbnN0IEJsb2NrY2hhaW5DbGllbnRGb3JEZXBsb3ltZW50SW1wbF8xID0gcmVxdWlyZShcIi4vQmxvY2tjaGFpbkNsaWVudEZvckRlcGxveW1lbnRJbXBsXCIpO1xuY29uc3QgRGVwbG95bWVudEJ1aWxkZXJfMSA9IHJlcXVpcmUoXCIuL0RlcGxveW1lbnRCdWlsZGVyXCIpO1xuLyoqIENsaWVudCBmb3IgZGVwbG95aW5nIGNvbnRyYWN0cy4gKi9cbmNsYXNzIERlcGxveW1lbnRDbGllbnQge1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdG9yIGZvciB7QGxpbmsgRGVwbG95bWVudENsaWVudH0uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYmxvY2tjaGFpbkNsaWVudCBjbGllbnQgZm9yIGdldHRpbmcgc3RhdGUgYW5kIGJ1aWxkaW5nIGFuZCBzZW5kaW5nIHRyYW5zYWN0aW9uc1xuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGJsb2NrY2hhaW5DbGllbnQpIHtcbiAgICAgICAgdGhpcy5ibG9ja2NoYWluQ2xpZW50ID0gYmxvY2tjaGFpbkNsaWVudDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEge0BsaW5rIERlcGxveW1lbnRDbGllbnR9IHdpdGggb3VyIGRlZmF1bHQgdHJhbnNhY3Rpb24gY2xpZW50IGFuZCBzdGF0ZSBjbGllbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHJhbnNhY3Rpb25DbGllbnQgdHJhbnNhY3Rpb24gY2xpZW50IGJ1aWxkaW5nIGFuZCBzZW5kaW5nIHRyYW5zYWN0aW9uc1xuICAgICAqIEBwYXJhbSBjaGFpbkNvbnRyb2xsZXIgYmxvY2tjaGFpbiBjbGllbnRcbiAgICAgKiBAcmV0dXJucyBhIG5ldyB7QGxpbmsgRGVwbG95bWVudENsaWVudH1cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlKHRyYW5zYWN0aW9uQ2xpZW50LCBjaGFpbkNvbnRyb2xsZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEZXBsb3ltZW50Q2xpZW50KG5ldyBCbG9ja2NoYWluQ2xpZW50Rm9yRGVwbG95bWVudEltcGxfMS5CbG9ja2NoYWluQ2xpZW50Rm9yRGVwbG95bWVudEltcGwodHJhbnNhY3Rpb25DbGllbnQsIGNoYWluQ29udHJvbGxlcikpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSB7QGxpbmsgRGVwbG95bWVudENsaWVudH0gd2l0aCB0YXJnZXRpbmcgYSBzcGVjaWZpYyBiYXNlIHVybC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBiYXNlVXJsIGJhc2UgdXJsIG9mIHRoZSBibG9ja2NoYWluIHRvIHRhcmdldFxuICAgICAqIEBwYXJhbSBzZW5kZXJBdXRoZW50aWNhdGlvbiBzZW5kZXIgYXV0aGVudGljYXRpb24gZm9yIHNpZ25pbmcgZGVwbG95IHRyYW5zYWN0aW9uc1xuICAgICAqIEByZXR1cm5zIGEgbmV3IHtAbGluayBEZXBsb3ltZW50Q2xpZW50fVxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGVXaXRoVXJsKGJhc2VVcmwsIHNlbmRlckF1dGhlbnRpY2F0aW9uKSB7XG4gICAgICAgIGNvbnN0IGNvbmZpZ3VyYXRpb24gPSBuZXcgYmxvY2tjaGFpbl9hcGlfdHJhbnNhY3Rpb25fY2xpZW50XzEuQ29uZmlndXJhdGlvbih7IGJhc2VQYXRoOiBiYXNlVXJsIH0pO1xuICAgICAgICBjb25zdCBjaGFpbkNvbnRyb2xsZXIgPSBuZXcgYmxvY2tjaGFpbl9hcGlfdHJhbnNhY3Rpb25fY2xpZW50XzEuQ2hhaW5Db250cm9sbGVyQXBpKGNvbmZpZ3VyYXRpb24pO1xuICAgICAgICBjb25zdCB0cmFuc2FjdGlvbkNsaWVudCA9IGJsb2NrY2hhaW5fYXBpX3RyYW5zYWN0aW9uX2NsaWVudF8xLkJsb2NrY2hhaW5UcmFuc2FjdGlvbkNsaWVudC5jcmVhdGUoYmFzZVVybCwgc2VuZGVyQXV0aGVudGljYXRpb24pO1xuICAgICAgICByZXR1cm4gdGhpcy5jcmVhdGUodHJhbnNhY3Rpb25DbGllbnQsIGNoYWluQ29udHJvbGxlcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIGJ1aWxkZXIgZm9yIGRlcGxveWluZyBhIGNvbnRyYWN0LlxuICAgICAqXG4gICAgICogQHJldHVybnMgYSBEZXBsb3ltZW50QnVpbGRlclxuICAgICAqL1xuICAgIGJ1aWxkZXIoKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGVwbG95bWVudEJ1aWxkZXJfMS5EZXBsb3ltZW50QnVpbGRlcih0aGlzLmJsb2NrY2hhaW5DbGllbnQpO1xuICAgIH1cbn1cbmV4cG9ydHMuRGVwbG95bWVudENsaWVudCA9IERlcGxveW1lbnRDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EZXBsb3ltZW50Q2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/DeploymentClient.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StateBuilder = exports.FnRpcBuilder = exports.ZkSecretReader = exports.ZkInputBuilder = exports.BigEndianReader = exports.AbstractBuilder = exports.JsonRpcConverter = exports.JsonValueConverter = exports.TransactionReader = exports.RustSyntaxPrettyPrinter = exports.RustSyntaxStatePrinter = exports.RpcValueFn = exports.RpcReader = exports.ScValueArray = exports.ScValueAvlTreeMap = exports.ScValueBlsSignature = exports.ScValueBlsPublicKey = exports.ScValueSignature = exports.ScValuePublicKey = exports.ScValueHash = exports.ScValueAddress = exports.ScValueString = exports.ScValueOption = exports.ScValueNumber = exports.ScValueBool = exports.ScValueVector = exports.ScValueSet = exports.ScValueEnum = exports.ScValueMap = exports.ScValueStruct = exports.StateReader = exports.ScValue = exports.HashMap = exports.FnKinds = exports.fromKindId = exports.ContractAbi = exports.Configuration = exports.AbiParser = exports.StructTypeSpec = exports.EnumTypeSpec = exports.AbiVersion = exports.FileAbi = exports.FnAbi = exports.FunctionFormat = exports.ShortnameType = exports.NamedTypesFormat = exports.NamedTypeSpec = exports.TypeIndex = exports.hashBuffer = exports.BN = void 0;\nexports.BlockchainClientForDeploymentImpl = exports.DeploymentClient = exports.DeploymentBuilder = exports.AbiByteOutput = exports.AbiByteInput = exports.AbiBitOutput = exports.AbiBitInput = exports.BlockchainStateClientImpl = exports.SecretInputBuilder = exports.AvlTreeMap = exports.BlsPublicKey = exports.BlsSignature = exports.Signature = exports.BlockchainPublicKey = exports.BlockchainAddress = exports.Hash = exports.TransactionBuilder = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(action-browser)/./node_modules/bn.js/lib/bn.js\"));\nexports.BN = bn_js_1.default;\nvar BufferUtil_1 = __webpack_require__(/*! ./util/BufferUtil */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/util/BufferUtil.js\");\nObject.defineProperty(exports, \"hashBuffer\", ({ enumerable: true, get: function () { return BufferUtil_1.hashBuffer; } }));\nvar Abi_1 = __webpack_require__(/*! ./types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nObject.defineProperty(exports, \"TypeIndex\", ({ enumerable: true, get: function () { return Abi_1.TypeIndex; } }));\nObject.defineProperty(exports, \"NamedTypeSpec\", ({ enumerable: true, get: function () { return Abi_1.NamedTypeSpec; } }));\nObject.defineProperty(exports, \"NamedTypesFormat\", ({ enumerable: true, get: function () { return Abi_1.NamedTypesFormat; } }));\nObject.defineProperty(exports, \"ShortnameType\", ({ enumerable: true, get: function () { return Abi_1.ShortnameType; } }));\nObject.defineProperty(exports, \"FunctionFormat\", ({ enumerable: true, get: function () { return Abi_1.FunctionFormat; } }));\nvar FnAbi_1 = __webpack_require__(/*! ./types/FnAbi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/FnAbi.js\");\nObject.defineProperty(exports, \"FnAbi\", ({ enumerable: true, get: function () { return FnAbi_1.FnAbi; } }));\nvar FileAbi_1 = __webpack_require__(/*! ./types/FileAbi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/FileAbi.js\");\nObject.defineProperty(exports, \"FileAbi\", ({ enumerable: true, get: function () { return FileAbi_1.FileAbi; } }));\nvar AbiVersion_1 = __webpack_require__(/*! ./types/AbiVersion */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/AbiVersion.js\");\nObject.defineProperty(exports, \"AbiVersion\", ({ enumerable: true, get: function () { return AbiVersion_1.AbiVersion; } }));\nvar EnumTypeSpec_1 = __webpack_require__(/*! ./types/EnumTypeSpec */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/EnumTypeSpec.js\");\nObject.defineProperty(exports, \"EnumTypeSpec\", ({ enumerable: true, get: function () { return EnumTypeSpec_1.EnumTypeSpec; } }));\nvar StructTypeSpec_1 = __webpack_require__(/*! ./types/StructTypeSpec */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/StructTypeSpec.js\");\nObject.defineProperty(exports, \"StructTypeSpec\", ({ enumerable: true, get: function () { return StructTypeSpec_1.StructTypeSpec; } }));\nvar AbiParser_1 = __webpack_require__(/*! ./parser/AbiParser */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/AbiParser.js\");\nObject.defineProperty(exports, \"AbiParser\", ({ enumerable: true, get: function () { return AbiParser_1.AbiParser; } }));\nvar Configuration_1 = __webpack_require__(/*! ./parser/Configuration */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/Configuration.js\");\nObject.defineProperty(exports, \"Configuration\", ({ enumerable: true, get: function () { return Configuration_1.Configuration; } }));\nvar ContractAbi_1 = __webpack_require__(/*! ./parser/ContractAbi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/ContractAbi.js\");\nObject.defineProperty(exports, \"ContractAbi\", ({ enumerable: true, get: function () { return ContractAbi_1.ContractAbi; } }));\nvar FnKinds_1 = __webpack_require__(/*! ./parser/FnKinds */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js\");\nObject.defineProperty(exports, \"fromKindId\", ({ enumerable: true, get: function () { return FnKinds_1.fromKindId; } }));\nObject.defineProperty(exports, \"FnKinds\", ({ enumerable: true, get: function () { return FnKinds_1.FnKinds; } }));\nvar HashMap_1 = __webpack_require__(/*! ./HashMap */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/HashMap.js\");\nObject.defineProperty(exports, \"HashMap\", ({ enumerable: true, get: function () { return HashMap_1.HashMap; } }));\nvar ScValue_1 = __webpack_require__(/*! ./value/ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nObject.defineProperty(exports, \"ScValue\", ({ enumerable: true, get: function () { return ScValue_1.ScValue; } }));\nvar StateReader_1 = __webpack_require__(/*! ./state/StateReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/StateReader.js\");\nObject.defineProperty(exports, \"StateReader\", ({ enumerable: true, get: function () { return StateReader_1.StateReader; } }));\nvar ScValueStruct_1 = __webpack_require__(/*! ./value/ScValueStruct */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueStruct.js\");\nObject.defineProperty(exports, \"ScValueStruct\", ({ enumerable: true, get: function () { return ScValueStruct_1.ScValueStruct; } }));\nvar ScValueMap_1 = __webpack_require__(/*! ./value/ScValueMap */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueMap.js\");\nObject.defineProperty(exports, \"ScValueMap\", ({ enumerable: true, get: function () { return ScValueMap_1.ScValueMap; } }));\nvar ScValueEnum_1 = __webpack_require__(/*! ./value/ScValueEnum */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueEnum.js\");\nObject.defineProperty(exports, \"ScValueEnum\", ({ enumerable: true, get: function () { return ScValueEnum_1.ScValueEnum; } }));\nvar ScValueSet_1 = __webpack_require__(/*! ./value/ScValueSet */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSet.js\");\nObject.defineProperty(exports, \"ScValueSet\", ({ enumerable: true, get: function () { return ScValueSet_1.ScValueSet; } }));\nvar ScValueVector_1 = __webpack_require__(/*! ./value/ScValueVector */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueVector.js\");\nObject.defineProperty(exports, \"ScValueVector\", ({ enumerable: true, get: function () { return ScValueVector_1.ScValueVector; } }));\nvar ScValueBool_1 = __webpack_require__(/*! ./value/ScValueBool */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBool.js\");\nObject.defineProperty(exports, \"ScValueBool\", ({ enumerable: true, get: function () { return ScValueBool_1.ScValueBool; } }));\nvar ScValueNumber_1 = __webpack_require__(/*! ./value/ScValueNumber */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueNumber.js\");\nObject.defineProperty(exports, \"ScValueNumber\", ({ enumerable: true, get: function () { return ScValueNumber_1.ScValueNumber; } }));\nvar ScValueOption_1 = __webpack_require__(/*! ./value/ScValueOption */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueOption.js\");\nObject.defineProperty(exports, \"ScValueOption\", ({ enumerable: true, get: function () { return ScValueOption_1.ScValueOption; } }));\nvar ScValueString_1 = __webpack_require__(/*! ./value/ScValueString */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueString.js\");\nObject.defineProperty(exports, \"ScValueString\", ({ enumerable: true, get: function () { return ScValueString_1.ScValueString; } }));\nvar ScValueAddress_1 = __webpack_require__(/*! ./value/ScValueAddress */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAddress.js\");\nObject.defineProperty(exports, \"ScValueAddress\", ({ enumerable: true, get: function () { return ScValueAddress_1.ScValueAddress; } }));\nvar ScValueHash_1 = __webpack_require__(/*! ./value/ScValueHash */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueHash.js\");\nObject.defineProperty(exports, \"ScValueHash\", ({ enumerable: true, get: function () { return ScValueHash_1.ScValueHash; } }));\nvar ScValuePublicKey_1 = __webpack_require__(/*! ./value/ScValuePublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValuePublicKey.js\");\nObject.defineProperty(exports, \"ScValuePublicKey\", ({ enumerable: true, get: function () { return ScValuePublicKey_1.ScValuePublicKey; } }));\nvar ScValueSignature_1 = __webpack_require__(/*! ./value/ScValueSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSignature.js\");\nObject.defineProperty(exports, \"ScValueSignature\", ({ enumerable: true, get: function () { return ScValueSignature_1.ScValueSignature; } }));\nvar ScValueBlsPublicKey_1 = __webpack_require__(/*! ./value/ScValueBlsPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsPublicKey.js\");\nObject.defineProperty(exports, \"ScValueBlsPublicKey\", ({ enumerable: true, get: function () { return ScValueBlsPublicKey_1.ScValueBlsPublicKey; } }));\nvar ScValueBlsSignature_1 = __webpack_require__(/*! ./value/ScValueBlsSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsSignature.js\");\nObject.defineProperty(exports, \"ScValueBlsSignature\", ({ enumerable: true, get: function () { return ScValueBlsSignature_1.ScValueBlsSignature; } }));\nvar ScValueAvlTreeMap_1 = __webpack_require__(/*! ./value/ScValueAvlTreeMap */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAvlTreeMap.js\");\nObject.defineProperty(exports, \"ScValueAvlTreeMap\", ({ enumerable: true, get: function () { return ScValueAvlTreeMap_1.ScValueAvlTreeMap; } }));\nvar ScValueArray_1 = __webpack_require__(/*! ./value/ScValueArray */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueArray.js\");\nObject.defineProperty(exports, \"ScValueArray\", ({ enumerable: true, get: function () { return ScValueArray_1.ScValueArray; } }));\nvar RpcReader_1 = __webpack_require__(/*! ./rpc/RpcReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcReader.js\");\nObject.defineProperty(exports, \"RpcReader\", ({ enumerable: true, get: function () { return RpcReader_1.RpcReader; } }));\nvar RpcValueFn_1 = __webpack_require__(/*! ./rpc/RpcValueFn */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcValueFn.js\");\nObject.defineProperty(exports, \"RpcValueFn\", ({ enumerable: true, get: function () { return RpcValueFn_1.RpcValueFn; } }));\nvar RustSyntaxStatePrinter_1 = __webpack_require__(/*! ./state/RustSyntaxStatePrinter */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/RustSyntaxStatePrinter.js\");\nObject.defineProperty(exports, \"RustSyntaxStatePrinter\", ({ enumerable: true, get: function () { return RustSyntaxStatePrinter_1.RustSyntaxStatePrinter; } }));\nvar RustSyntaxPrettyPrinter_1 = __webpack_require__(/*! ./parser/RustSyntaxPrettyPrinter */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/RustSyntaxPrettyPrinter.js\");\nObject.defineProperty(exports, \"RustSyntaxPrettyPrinter\", ({ enumerable: true, get: function () { return RustSyntaxPrettyPrinter_1.RustSyntaxPrettyPrinter; } }));\nvar TransactionReader_1 = __webpack_require__(/*! ./transaction/TransactionReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/transaction/TransactionReader.js\");\nObject.defineProperty(exports, \"TransactionReader\", ({ enumerable: true, get: function () { return TransactionReader_1.TransactionReader; } }));\nvar JsonValueConverter_1 = __webpack_require__(/*! ./value/JsonValueConverter */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/JsonValueConverter.js\");\nObject.defineProperty(exports, \"JsonValueConverter\", ({ enumerable: true, get: function () { return JsonValueConverter_1.JsonValueConverter; } }));\nvar JsonRpcConverter_1 = __webpack_require__(/*! ./rpc/JsonRpcConverter */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/JsonRpcConverter.js\");\nObject.defineProperty(exports, \"JsonRpcConverter\", ({ enumerable: true, get: function () { return JsonRpcConverter_1.JsonRpcConverter; } }));\nvar AbstractBuilder_1 = __webpack_require__(/*! ./builder/AbstractBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AbstractBuilder.js\");\nObject.defineProperty(exports, \"AbstractBuilder\", ({ enumerable: true, get: function () { return AbstractBuilder_1.AbstractBuilder; } }));\nvar BigEndianReader_1 = __webpack_require__(/*! ./BigEndianReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/BigEndianReader.js\");\nObject.defineProperty(exports, \"BigEndianReader\", ({ enumerable: true, get: function () { return BigEndianReader_1.BigEndianReader; } }));\nvar ZkInputBuilder_1 = __webpack_require__(/*! ./zk/ZkInputBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkInputBuilder.js\");\nObject.defineProperty(exports, \"ZkInputBuilder\", ({ enumerable: true, get: function () { return ZkInputBuilder_1.ZkInputBuilder; } }));\nvar ZkSecretReader_1 = __webpack_require__(/*! ./zk/ZkSecretReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkSecretReader.js\");\nObject.defineProperty(exports, \"ZkSecretReader\", ({ enumerable: true, get: function () { return ZkSecretReader_1.ZkSecretReader; } }));\nvar FnRpcBuilder_1 = __webpack_require__(/*! ./rpc/FnRpcBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/FnRpcBuilder.js\");\nObject.defineProperty(exports, \"FnRpcBuilder\", ({ enumerable: true, get: function () { return FnRpcBuilder_1.FnRpcBuilder; } }));\nvar StateBuilder_1 = __webpack_require__(/*! ./state/StateBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/StateBuilder.js\");\nObject.defineProperty(exports, \"StateBuilder\", ({ enumerable: true, get: function () { return StateBuilder_1.StateBuilder; } }));\nvar TransactionBuilder_1 = __webpack_require__(/*! ./transaction/TransactionBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/transaction/TransactionBuilder.js\");\nObject.defineProperty(exports, \"TransactionBuilder\", ({ enumerable: true, get: function () { return TransactionBuilder_1.TransactionBuilder; } }));\n// Codegen-lib\nvar Hash_1 = __webpack_require__(/*! ./codegen-lib/Hash */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Hash.js\");\nObject.defineProperty(exports, \"Hash\", ({ enumerable: true, get: function () { return Hash_1.Hash; } }));\nvar BlockchainAddress_1 = __webpack_require__(/*! ./codegen-lib/BlockchainAddress */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainAddress.js\");\nObject.defineProperty(exports, \"BlockchainAddress\", ({ enumerable: true, get: function () { return BlockchainAddress_1.BlockchainAddress; } }));\nvar BlockchainPublicKey_1 = __webpack_require__(/*! ./codegen-lib/BlockchainPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainPublicKey.js\");\nObject.defineProperty(exports, \"BlockchainPublicKey\", ({ enumerable: true, get: function () { return BlockchainPublicKey_1.BlockchainPublicKey; } }));\nvar Signature_1 = __webpack_require__(/*! ./codegen-lib/Signature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/Signature.js\");\nObject.defineProperty(exports, \"Signature\", ({ enumerable: true, get: function () { return Signature_1.Signature; } }));\nvar BlsSignature_1 = __webpack_require__(/*! ./codegen-lib/BlsSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsSignature.js\");\nObject.defineProperty(exports, \"BlsSignature\", ({ enumerable: true, get: function () { return BlsSignature_1.BlsSignature; } }));\nvar BlsPublicKey_1 = __webpack_require__(/*! ./codegen-lib/BlsPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlsPublicKey.js\");\nObject.defineProperty(exports, \"BlsPublicKey\", ({ enumerable: true, get: function () { return BlsPublicKey_1.BlsPublicKey; } }));\nvar AvlTreeMap_1 = __webpack_require__(/*! ./codegen-lib/AvlTreeMap */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/AvlTreeMap.js\");\nObject.defineProperty(exports, \"AvlTreeMap\", ({ enumerable: true, get: function () { return AvlTreeMap_1.AvlTreeMap; } }));\nvar SecretInputBuilder_1 = __webpack_require__(/*! ./codegen-lib/SecretInputBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/SecretInputBuilder.js\");\nObject.defineProperty(exports, \"SecretInputBuilder\", ({ enumerable: true, get: function () { return SecretInputBuilder_1.SecretInputBuilder; } }));\nvar BlockchainStateClient_1 = __webpack_require__(/*! ./codegen-lib/BlockchainStateClient */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/codegen-lib/BlockchainStateClient.js\");\nObject.defineProperty(exports, \"BlockchainStateClientImpl\", ({ enumerable: true, get: function () { return BlockchainStateClient_1.BlockchainStateClientImpl; } }));\nvar AbiBitInput_1 = __webpack_require__(/*! ./abistreams/AbiBitInput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitInput.js\");\nObject.defineProperty(exports, \"AbiBitInput\", ({ enumerable: true, get: function () { return AbiBitInput_1.AbiBitInput; } }));\nvar AbiBitOutput_1 = __webpack_require__(/*! ./abistreams/AbiBitOutput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitOutput.js\");\nObject.defineProperty(exports, \"AbiBitOutput\", ({ enumerable: true, get: function () { return AbiBitOutput_1.AbiBitOutput; } }));\nvar AbiByteInput_1 = __webpack_require__(/*! ./abistreams/AbiByteInput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteInput.js\");\nObject.defineProperty(exports, \"AbiByteInput\", ({ enumerable: true, get: function () { return AbiByteInput_1.AbiByteInput; } }));\nvar AbiByteOutput_1 = __webpack_require__(/*! ./abistreams/AbiByteOutput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteOutput.js\");\nObject.defineProperty(exports, \"AbiByteOutput\", ({ enumerable: true, get: function () { return AbiByteOutput_1.AbiByteOutput; } }));\nvar DeploymentBuilder_1 = __webpack_require__(/*! ./deploymentclient/DeploymentBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/DeploymentBuilder.js\");\nObject.defineProperty(exports, \"DeploymentBuilder\", ({ enumerable: true, get: function () { return DeploymentBuilder_1.DeploymentBuilder; } }));\nvar DeploymentClient_1 = __webpack_require__(/*! ./deploymentclient/DeploymentClient */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/DeploymentClient.js\");\nObject.defineProperty(exports, \"DeploymentClient\", ({ enumerable: true, get: function () { return DeploymentClient_1.DeploymentClient; } }));\nvar BlockchainClientForDeploymentImpl_1 = __webpack_require__(/*! ./deploymentclient/BlockchainClientForDeploymentImpl */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/deploymentclient/BlockchainClientForDeploymentImpl.js\");\nObject.defineProperty(exports, \"BlockchainClientForDeploymentImpl\", ({ enumerable: true, get: function () { return BlockchainClientForDeploymentImpl_1.BlockchainClientForDeploymentImpl; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/AbiParser.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/parser/AbiParser.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbiParser = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nconst AbiVersion_1 = __webpack_require__(/*! ../types/AbiVersion */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/AbiVersion.js\");\nconst DocumentationNamedType_1 = __webpack_require__(/*! ../types/DocumentationNamedType */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/DocumentationNamedType.js\");\nconst EnumTypeSpec_1 = __webpack_require__(/*! ../types/EnumTypeSpec */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/EnumTypeSpec.js\");\nconst FileAbi_1 = __webpack_require__(/*! ../types/FileAbi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/FileAbi.js\");\nconst FnAbi_1 = __webpack_require__(/*! ../types/FnAbi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/FnAbi.js\");\nconst StructTypeSpec_1 = __webpack_require__(/*! ../types/StructTypeSpec */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/StructTypeSpec.js\");\nconst BufferUtil_1 = __webpack_require__(/*! ../util/BufferUtil */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/util/BufferUtil.js\");\nconst NumberToHex_1 = __webpack_require__(/*! ../util/NumberToHex */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/util/NumberToHex.js\");\nconst Configuration_1 = __webpack_require__(/*! ./Configuration */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/Configuration.js\");\nconst ContractAbi_1 = __webpack_require__(/*! ./ContractAbi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/ContractAbi.js\");\nconst FnKinds_1 = __webpack_require__(/*! ./FnKinds */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js\");\nconst RustSyntaxPrettyPrinter_1 = __webpack_require__(/*! ./RustSyntaxPrettyPrinter */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/RustSyntaxPrettyPrinter.js\");\nclass AbiParser {\n    constructor(buffer) {\n        this.FN_KIND_NAME = new Map([\n            [FnKinds_1.FnKinds.init.kindId, \"Init\"],\n            [FnKinds_1.FnKinds.action.kindId, \"Action\"],\n            [FnKinds_1.FnKinds.callback.kindId, \"Callback\"],\n            [FnKinds_1.FnKinds.zkSecretInput.kindId, \"ZkSecretInput\"],\n            [FnKinds_1.FnKinds.zkVarInputted.kindId, \"ZkVarInputted\"],\n            [FnKinds_1.FnKinds.zkVarRejected.kindId, \"ZkVarRejected\"],\n            [FnKinds_1.FnKinds.zkComputeComplete.kindId, \"ZkComputeComplete\"],\n            [FnKinds_1.FnKinds.zkVarOpened.kindId, \"ZkVarOpened\"],\n            [FnKinds_1.FnKinds.zkUserVarOpened.kindId, \"ZkUserVarOpened\"],\n            [FnKinds_1.FnKinds.zkAttestationComplete.kindId, \"ZkAttestationComplete\"],\n            [FnKinds_1.FnKinds.zkSecretInputWithExplicitType.kindId, \"ZkSecretInputWithExplicitType\"],\n            [FnKinds_1.FnKinds.zkOnExternalEvent.kindId, \"ZkOnExternalEvent\"],\n        ]);\n        this.bufferReader = new bitmanipulation_ts_1.BigEndianByteInput(buffer);\n    }\n    parseHeader() {\n        const headerBuffer = this.bufferReader.readBytes(6);\n        const header = headerBuffer.toString(\"ascii\");\n        const versionBinder = new AbiVersion_1.AbiVersion(this.bufferReader.readU8(), this.bufferReader.readU8(), this.bufferReader.readU8());\n        const versionClient = new AbiVersion_1.AbiVersion(this.bufferReader.readU8(), this.bufferReader.readU8(), this.bufferReader.readU8());\n        return { header, versionBinder, versionClient };\n    }\n    parseContract(header) {\n        const shortnameLength = this.readShortnameLength(header);\n        const configuration = Configuration_1.Configuration.fromClientVersion(header.versionClient, shortnameLength);\n        const contractAbi = this.parseContractAbi(configuration);\n        return new FileAbi_1.FileAbi(header.header, header.versionBinder, header.versionClient, shortnameLength, contractAbi);\n    }\n    readShortnameLength(header) {\n        if (header.header !== \"PBCABI\") {\n            throw new Error(`Malformed header bytes, expecting PBCABI but was ${header.header}`);\n        }\n        const options = Configuration_1.Configuration.getOptionsOrThrow(header.versionClient);\n        let shortnameLength;\n        if (options.shortnameType === Abi_1.ShortnameType.hash) {\n            shortnameLength = this.bufferReader.readU8();\n        }\n        else {\n            shortnameLength = null;\n        }\n        return shortnameLength;\n    }\n    parseAbi() {\n        const header = this.parseHeader();\n        return this.parseContract(header);\n    }\n    parseContractAbi(config) {\n        const namedTypes = this.parseNamedTypes(config);\n        let functions;\n        if (config.fnType === Abi_1.FunctionFormat.InitSeparately) {\n            const init = this.parseFnAbi(config, FnKinds_1.FnKinds.init);\n            functions = this.parseActions(config);\n            functions.push(init);\n        }\n        else {\n            functions = this.parseActions(config);\n        }\n        // Check for a valid number of functions of each kind.\n        for (const [action, kind] of Object.entries(FnKinds_1.FnKinds)) {\n            // Hack to change error message to match Java\n            const actionName = action.charAt(0).toUpperCase().concat(action.substring(1));\n            const count = functions.filter((a) => a.kind.kindId === kind.kindId).length;\n            const validNumberOfFunctions = kind.minAllowedPerContract <= count && count <= kind.maxAllowedPerContract;\n            if (!validNumberOfFunctions) {\n                throw new Error(`Expected between ${kind.minAllowedPerContract} and ${kind.maxAllowedPerContract} ${actionName} functions, but found ${count}`);\n            }\n        }\n        const stateType = this.parseTypeSpec();\n        const remainingSize = this.bufferReader.readRemaining().length;\n        if (remainingSize !== 0) {\n            throw new Error(`Expected EOF after parsed ABI, but stream had ${remainingSize} bytes remaining`);\n        }\n        if (config.typeAndFunctionOrder == Abi_1.TypeAndFunctionOrder.DepthFirst) {\n            // Validate functions are ordered by KindId and then shortname\n            this.validateFunctionsSorted(functions);\n            // Validate the types are ordered depth-first when traversing the type tree from each root\n            // (state type and function argument types).\n            const typeRoots = this.findTypeRoots(stateType, functions);\n            this.validateTypesSortedDepthFirst(namedTypes, typeRoots);\n        }\n        else {\n            // Sort actions\n            functions.sort((a, b) => a.kind.kindId - b.kind.kindId);\n        }\n        return new ContractAbi_1.ContractAbi(namedTypes, functions, stateType);\n    }\n    validateFunctionsSorted(functions) {\n        for (let i = 0; i < functions.length - 1; i++) {\n            if (!this.functionOrderStrictlyAscending(functions[i], functions[i + 1])) {\n                const previous = this.formatFnAbiForError(functions[i]);\n                const next = this.formatFnAbiForError(functions[i + 1]);\n                const errorMessage = `Functions are unordered: Must be ordered by function kind and by shortname in ascending order but ${previous} appears before ${next}`;\n                throw new Error(errorMessage);\n            }\n        }\n    }\n    formatFnAbiForError(fnAbi) {\n        const kindName = this.fnKindToName(fnAbi.kind);\n        const kindId = fnAbi.kind.kindId;\n        const shortname = fnAbi.shortname.toString(\"hex\");\n        return `${kindName}(${kindId}) with shortname ${shortname}`;\n    }\n    fnKindToName(kind) {\n        const kindName = this.FN_KIND_NAME.get(kind.kindId);\n        return kindName;\n    }\n    functionOrderStrictlyAscending(previous, next) {\n        if (previous.kind.kindId < next.kind.kindId) {\n            return true;\n        }\n        else if (previous.kind.kindId == next.kind.kindId) {\n            const previousShortname = previous.shortname.toString(\"hex\");\n            const nextShortname = next.shortname.toString(\"hex\");\n            return previousShortname.localeCompare(nextShortname) < 0;\n        }\n        else {\n            return false;\n        }\n    }\n    findTypeRoots(stateType, functions) {\n        const typeRoots = [];\n        if (stateType.typeIndex == Abi_1.TypeIndex.Named) {\n            const stateRefIndex = stateType.index;\n            if (stateRefIndex != 0) {\n                throw new Error(`Invalid type index for StateType: expected 0 was ${stateRefIndex}`);\n            }\n            typeRoots.push(stateType);\n        }\n        for (const fnAbi of functions) {\n            for (const argument of fnAbi.arguments) {\n                typeRoots.push(argument.type);\n            }\n            if (fnAbi.secretArgument != undefined) {\n                typeRoots.push(fnAbi.secretArgument.type);\n            }\n        }\n        return typeRoots;\n    }\n    validateTypesSortedDepthFirst(namedTypes, roots) {\n        const visitedTypes = [];\n        for (const root of roots) {\n            this.visitTypeSpec(namedTypes, visitedTypes, root);\n        }\n        if (namedTypes.length != visitedTypes.length) {\n            const difference = namedTypes.filter((type) => visitedTypes.indexOf(type) < 0);\n            const asString = difference.map((type) => type.name).join(\", \");\n            throw new Error(`Named Types list contained unreachable type(s) [${asString}]`);\n        }\n    }\n    visitIndex(allTypes, visitedTypes, index) {\n        if (allTypes.length <= index) {\n            throw Error(`No known types at index ${index}`);\n        }\n        const namedType = allTypes[index];\n        if (visitedTypes.indexOf(namedType) < 0) {\n            const expectedIndex = visitedTypes.length;\n            if (index != expectedIndex) {\n                throw new Error(`Expected named type '${namedType.name}' to have index ${expectedIndex} but was ${index}`);\n            }\n            visitedTypes.push(namedType);\n            this.visitNamedType(allTypes, visitedTypes, namedType);\n        }\n    }\n    visitNamedType(allTypes, visitedTypes, currentNamedType) {\n        if (currentNamedType instanceof StructTypeSpec_1.StructTypeSpec) {\n            for (const field of currentNamedType.fields) {\n                const type = field.type;\n                this.visitTypeSpec(allTypes, visitedTypes, type);\n            }\n        }\n        else if (currentNamedType instanceof EnumTypeSpec_1.EnumTypeSpec) {\n            for (const variant of currentNamedType.variants) {\n                const type = variant.def;\n                this.visitTypeSpec(allTypes, visitedTypes, type);\n            }\n        }\n    }\n    visitTypeSpec(allTypes, visitedTypes, currentSpec) {\n        if (currentSpec.typeIndex == Abi_1.TypeIndex.Named) {\n            const index = currentSpec.index;\n            this.visitIndex(allTypes, visitedTypes, index);\n        }\n        else if (currentSpec.typeIndex == Abi_1.TypeIndex.Vec ||\n            currentSpec.typeIndex == Abi_1.TypeIndex.Set ||\n            currentSpec.typeIndex == Abi_1.TypeIndex.SizedArray ||\n            currentSpec.typeIndex == Abi_1.TypeIndex.Option) {\n            const type = currentSpec.valueType;\n            this.visitTypeSpec(allTypes, visitedTypes, type);\n        }\n        else if (currentSpec.typeIndex == Abi_1.TypeIndex.Map ||\n            currentSpec.typeIndex == Abi_1.TypeIndex.AvlTreeMap) {\n            const keyType = currentSpec.keyType;\n            this.visitTypeSpec(allTypes, visitedTypes, keyType);\n            const valueType = currentSpec.valueType;\n            this.visitTypeSpec(allTypes, visitedTypes, valueType);\n        }\n    }\n    parseNamedTypes(config) {\n        const namedTypesSize = this.bufferReader.readI32();\n        const namedTypes = [];\n        for (let i = 0; i < namedTypesSize; i++) {\n            if (config.namedTypesFormat == Abi_1.NamedTypesFormat.StructsAndEnum) {\n                const namedType = this.bufferReader.readU8();\n                if (namedType === Abi_1.NamedTypeIndex.Struct) {\n                    namedTypes.push(this.parseStructTypeSpec());\n                }\n                else if (namedType === Abi_1.NamedTypeIndex.Enum) {\n                    namedTypes.push(this.parseEnumTypeSpec());\n                }\n                else {\n                    throw new Error(`Bad byte 0x${(0, NumberToHex_1.toHexString)(namedType)} used for namedTypeSpec index ` +\n                        `should be either 0x${(0, NumberToHex_1.toHexString)(Abi_1.NamedTypeIndex.Struct)} for a struct ` +\n                        `or 0x${(0, NumberToHex_1.toHexString)(Abi_1.NamedTypeIndex.Enum)} for an enum`);\n                }\n            }\n            else {\n                namedTypes.push(this.parseStructTypeSpec());\n            }\n        }\n        return namedTypes;\n    }\n    parseStructTypeSpec() {\n        const name = this.bufferReader.readString();\n        const fieldsSize = this.bufferReader.readI32();\n        const fields = [];\n        for (let j = 0; j < fieldsSize; j++) {\n            const fieldName = this.bufferReader.readString();\n            const type = this.parseTypeSpec();\n            fields.push({ name: fieldName, type });\n        }\n        return new StructTypeSpec_1.StructTypeSpec(name, fields, DocumentationNamedType_1.DocumentationNamedType.empty());\n    }\n    parseEnumTypeSpec() {\n        var _a;\n        const name = this.bufferReader.readString();\n        const numVariants = this.bufferReader.readI32();\n        const variants = [];\n        for (let i = 0; i < numVariants; i++) {\n            const discriminant = this.bufferReader.readU8();\n            const typeIndex = this.bufferReader.readU8();\n            if (typeIndex !== Abi_1.TypeIndex.Named) {\n                throw new Error(`Non named type ${(_a = Abi_1.TypeIndex[typeIndex]) !== null && _a !== void 0 ? _a : \"Unknown\"} used as an enum variant, ` +\n                    \"each variant should be a reference to a struct\");\n            }\n            const index = this.bufferReader.readU8();\n            variants.push({ discriminant, def: { typeIndex, index } });\n        }\n        return new EnumTypeSpec_1.EnumTypeSpec(name, variants);\n    }\n    parseTypeSpec() {\n        const typeIndex = this.bufferReader.readU8();\n        if (!(typeIndex in Abi_1.TypeIndex)) {\n            throw new Error(`Unknown type index: 0x${(0, NumberToHex_1.toHexString)(typeIndex)}`);\n        }\n        if (typeIndex === Abi_1.TypeIndex.Named) {\n            const index = this.bufferReader.readU8();\n            return { typeIndex, index };\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Vec) {\n            const valueType = this.parseTypeSpec();\n            return { typeIndex, valueType };\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Option) {\n            const valueType = this.parseTypeSpec();\n            return { typeIndex, valueType };\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Map || typeIndex == Abi_1.TypeIndex.AvlTreeMap) {\n            const keyType = this.parseTypeSpec();\n            const valueType = this.parseTypeSpec();\n            return { typeIndex, keyType, valueType };\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Set) {\n            const valueType = this.parseTypeSpec();\n            return { typeIndex, valueType };\n        }\n        else if (typeIndex === Abi_1.TypeIndex.SizedByteArray) {\n            const valueType = { typeIndex: Abi_1.TypeIndex.u8 };\n            const length = this.bufferReader.readU8();\n            return { typeIndex: Abi_1.TypeIndex.SizedArray, valueType, length };\n        }\n        else if (typeIndex === Abi_1.TypeIndex.SizedArray) {\n            const valueType = this.parseTypeSpec();\n            const length = this.bufferReader.readU8();\n            return { typeIndex, valueType, length };\n        }\n        else {\n            return { typeIndex };\n        }\n    }\n    parseFnAbi(config, defaultFnKind) {\n        let fnKind;\n        if (config.fnType === Abi_1.FunctionFormat.FnKind) {\n            const kindId = this.bufferReader.readU8();\n            fnKind = (0, FnKinds_1.fromKindId)(kindId);\n            if (fnKind === undefined) {\n                throw new Error(`Unsupported FnKind type 0x${(0, NumberToHex_1.toHexString)(kindId)} specified`);\n            }\n        }\n        else {\n            fnKind = defaultFnKind;\n        }\n        const name = this.bufferReader.readString();\n        let shortname;\n        if (config.shortnameType === Abi_1.ShortnameType.leb128) {\n            shortname = this.parseLeb128();\n            if (shortname.length > 5) {\n                throw new Error(\"Invalid LEB128 sequence, RPC header must be a valid 32-bit LEB128 encoded int (max 5 bytes)\");\n            }\n        }\n        else {\n            if (fnKind.kindId === 1) {\n                shortname = Buffer.from([0, 0, 0, 0]);\n            }\n            else {\n                shortname = AbiParser.parseHashShortname(config.shortnameLength, name);\n            }\n        }\n        const fnArguments = [];\n        const argumentsSize = this.bufferReader.readI32();\n        for (let i = 0; i < argumentsSize; i++) {\n            const nameArg = this.bufferReader.readString();\n            const argType = this.parseTypeSpec();\n            fnArguments.push({ name: nameArg, type: argType });\n        }\n        if (fnKind === FnKinds_1.FnKinds.zkSecretInputWithExplicitType) {\n            const secretNameArg = this.bufferReader.readString();\n            const secretArgType = this.parseTypeSpec();\n            return new FnAbi_1.FnAbi(fnKind, name, shortname, fnArguments, {\n                name: secretNameArg,\n                type: secretArgType,\n            });\n        }\n        return new FnAbi_1.FnAbi(fnKind, name, shortname, fnArguments);\n    }\n    static parseHashShortname(shortnameLength, name) {\n        const nameBuffer = Buffer.from(name);\n        const hash = (0, BufferUtil_1.hashBuffer)(nameBuffer);\n        return hash.slice(0, shortnameLength);\n    }\n    parseLeb128() {\n        let byte;\n        const bufferWriter = new bitmanipulation_ts_1.BigEndianByteOutput();\n        do {\n            byte = this.bufferReader.readU8();\n            bufferWriter.writeU8(byte);\n        } while (byte >= 128);\n        return bufferWriter.toBuffer();\n    }\n    parseActions(config) {\n        const actionList = [];\n        const actionsSize = this.bufferReader.readI32();\n        for (let i = 0; i < actionsSize; i++) {\n            const action = this.parseFnAbi(config, FnKinds_1.FnKinds.action);\n            actionList.push(action);\n        }\n        return actionList;\n    }\n    static printModel(model) {\n        const printer = new RustSyntaxPrettyPrinter_1.RustSyntaxPrettyPrinter(model);\n        return printer.printModel();\n    }\n    static printFunction(model, fnAbi) {\n        const printer = new RustSyntaxPrettyPrinter_1.RustSyntaxPrettyPrinter(model);\n        return printer.printFunction(fnAbi);\n    }\n    static printStruct(model, struct) {\n        const printer = new RustSyntaxPrettyPrinter_1.RustSyntaxPrettyPrinter(model);\n        return printer.printStruct(struct);\n    }\n}\nexports.AbiParser = AbiParser;\n//# sourceMappingURL=AbiParser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/AbiParser.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/Configuration.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/parser/Configuration.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Configuration = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass Configuration {\n    constructor(shortnameType, fnType, shortnameLength, namedTypesFormat, typeAndFunctionOrder) {\n        this.shortnameType = shortnameType;\n        this.fnType = fnType;\n        this.shortnameLength = shortnameLength;\n        this.namedTypesFormat = namedTypesFormat;\n        this.typeAndFunctionOrder = typeAndFunctionOrder;\n    }\n    static fromClientVersion(version, shortnameLength) {\n        const options = Configuration.getOptionsOrThrow(version);\n        return new Configuration(options.shortnameType, options.fnType, shortnameLength, options.namedTypesFormat, options.typeAndFunctionOrder);\n    }\n    static getOptionsOrThrow(clientVersion) {\n        const options = this.supportedClientVersions.get(clientVersion.withZeroPatch().toString());\n        if (options === undefined) {\n            throw new Error(`Unsupported Version ${clientVersion} for Version Client.`);\n        }\n        else {\n            return options;\n        }\n    }\n    static isSupportedVersion(clientVersion) {\n        return this.supportedClientVersions.has(clientVersion.withZeroPatch().toString());\n    }\n}\nexports.Configuration = Configuration;\nConfiguration.supportedClientVersions = new Map([\n    [\n        \"1.0.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.hash,\n            fnType: Abi_1.FunctionFormat.InitSeparately,\n            namedTypesFormat: Abi_1.NamedTypesFormat.OnlyStructs,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"2.0.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.hash,\n            fnType: Abi_1.FunctionFormat.InitSeparately,\n            namedTypesFormat: Abi_1.NamedTypesFormat.OnlyStructs,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"3.0.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.InitSeparately,\n            namedTypesFormat: Abi_1.NamedTypesFormat.OnlyStructs,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"3.1.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.InitSeparately,\n            namedTypesFormat: Abi_1.NamedTypesFormat.OnlyStructs,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"4.0.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.OnlyStructs,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"4.1.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.OnlyStructs,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"5.0.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.StructsAndEnum,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"5.1.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.StructsAndEnum,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"5.2.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.StructsAndEnum,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"5.3.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.StructsAndEnum,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"5.4.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.StructsAndEnum,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"5.5.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.StructsAndEnum,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"5.6.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.StructsAndEnum,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.Unordered,\n        },\n    ],\n    [\n        \"5.7.0\",\n        {\n            shortnameType: Abi_1.ShortnameType.leb128,\n            fnType: Abi_1.FunctionFormat.FnKind,\n            namedTypesFormat: Abi_1.NamedTypesFormat.StructsAndEnum,\n            typeAndFunctionOrder: Abi_1.TypeAndFunctionOrder.DepthFirst,\n        },\n    ],\n]);\n//# sourceMappingURL=Configuration.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/Configuration.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/ContractAbi.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/parser/ContractAbi.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ContractAbi = void 0;\nconst FnKinds_1 = __webpack_require__(/*! ./FnKinds */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js\");\nclass ContractAbi {\n    constructor(namedTypes, functions, stateType) {\n        this.namedTypes = namedTypes;\n        this.functions = functions;\n        this.stateType = stateType;\n    }\n    init() {\n        return this.functions.find((v) => v.kind.kindId === FnKinds_1.FnKinds.init.kindId);\n    }\n    getFunctionByName(name) {\n        return this.functions.find((v) => v.name === name);\n    }\n    getFunction(shortname, kind) {\n        return this.functions.find((v) => v.shortname.equals(shortname) && v.kind === kind);\n    }\n    getStateStruct() {\n        return this.namedTypes[this.stateType.index];\n    }\n    isZk() {\n        return this.functions.some((fn) => fn.kind === FnKinds_1.FnKinds.zkComputeComplete ||\n            fn.kind === FnKinds_1.FnKinds.zkSecretInput ||\n            fn.kind === FnKinds_1.FnKinds.zkUserVarOpened ||\n            fn.kind === FnKinds_1.FnKinds.zkVarInputted ||\n            fn.kind === FnKinds_1.FnKinds.zkVarOpened ||\n            fn.kind === FnKinds_1.FnKinds.zkVarRejected ||\n            fn.kind === FnKinds_1.FnKinds.zkAttestationComplete ||\n            fn.kind === FnKinds_1.FnKinds.zkOnExternalEvent ||\n            fn.kind === FnKinds_1.FnKinds.zkSecretInputWithExplicitType);\n    }\n    getNamedType(struct) {\n        if (typeof struct === \"string\") {\n            return this.namedTypes.find((namedType) => namedType.name === struct);\n        }\n        else {\n            return this.namedTypes[struct.index];\n        }\n    }\n}\nexports.ContractAbi = ContractAbi;\n//# sourceMappingURL=ContractAbi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcGFyc2VyL0NvbnRyYWN0QWJpLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixrQkFBa0IsbUJBQU8sQ0FBQywrR0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcGFyc2VyL0NvbnRyYWN0QWJpLmpzPzhmMTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbnRyYWN0QWJpID0gdm9pZCAwO1xuY29uc3QgRm5LaW5kc18xID0gcmVxdWlyZShcIi4vRm5LaW5kc1wiKTtcbmNsYXNzIENvbnRyYWN0QWJpIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lZFR5cGVzLCBmdW5jdGlvbnMsIHN0YXRlVHlwZSkge1xuICAgICAgICB0aGlzLm5hbWVkVHlwZXMgPSBuYW1lZFR5cGVzO1xuICAgICAgICB0aGlzLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucztcbiAgICAgICAgdGhpcy5zdGF0ZVR5cGUgPSBzdGF0ZVR5cGU7XG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZ1bmN0aW9ucy5maW5kKCh2KSA9PiB2LmtpbmQua2luZElkID09PSBGbktpbmRzXzEuRm5LaW5kcy5pbml0LmtpbmRJZCk7XG4gICAgfVxuICAgIGdldEZ1bmN0aW9uQnlOYW1lKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZnVuY3Rpb25zLmZpbmQoKHYpID0+IHYubmFtZSA9PT0gbmFtZSk7XG4gICAgfVxuICAgIGdldEZ1bmN0aW9uKHNob3J0bmFtZSwga2luZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mdW5jdGlvbnMuZmluZCgodikgPT4gdi5zaG9ydG5hbWUuZXF1YWxzKHNob3J0bmFtZSkgJiYgdi5raW5kID09PSBraW5kKTtcbiAgICB9XG4gICAgZ2V0U3RhdGVTdHJ1Y3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5hbWVkVHlwZXNbdGhpcy5zdGF0ZVR5cGUuaW5kZXhdO1xuICAgIH1cbiAgICBpc1prKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mdW5jdGlvbnMuc29tZSgoZm4pID0+IGZuLmtpbmQgPT09IEZuS2luZHNfMS5GbktpbmRzLnprQ29tcHV0ZUNvbXBsZXRlIHx8XG4gICAgICAgICAgICBmbi5raW5kID09PSBGbktpbmRzXzEuRm5LaW5kcy56a1NlY3JldElucHV0IHx8XG4gICAgICAgICAgICBmbi5raW5kID09PSBGbktpbmRzXzEuRm5LaW5kcy56a1VzZXJWYXJPcGVuZWQgfHxcbiAgICAgICAgICAgIGZuLmtpbmQgPT09IEZuS2luZHNfMS5GbktpbmRzLnprVmFySW5wdXR0ZWQgfHxcbiAgICAgICAgICAgIGZuLmtpbmQgPT09IEZuS2luZHNfMS5GbktpbmRzLnprVmFyT3BlbmVkIHx8XG4gICAgICAgICAgICBmbi5raW5kID09PSBGbktpbmRzXzEuRm5LaW5kcy56a1ZhclJlamVjdGVkIHx8XG4gICAgICAgICAgICBmbi5raW5kID09PSBGbktpbmRzXzEuRm5LaW5kcy56a0F0dGVzdGF0aW9uQ29tcGxldGUgfHxcbiAgICAgICAgICAgIGZuLmtpbmQgPT09IEZuS2luZHNfMS5GbktpbmRzLnprT25FeHRlcm5hbEV2ZW50IHx8XG4gICAgICAgICAgICBmbi5raW5kID09PSBGbktpbmRzXzEuRm5LaW5kcy56a1NlY3JldElucHV0V2l0aEV4cGxpY2l0VHlwZSk7XG4gICAgfVxuICAgIGdldE5hbWVkVHlwZShzdHJ1Y3QpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBzdHJ1Y3QgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5hbWVkVHlwZXMuZmluZCgobmFtZWRUeXBlKSA9PiBuYW1lZFR5cGUubmFtZSA9PT0gc3RydWN0KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5hbWVkVHlwZXNbc3RydWN0LmluZGV4XTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuQ29udHJhY3RBYmkgPSBDb250cmFjdEFiaTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnRyYWN0QWJpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/ContractAbi.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FnKinds = void 0;\nexports.fromKindId = fromKindId;\nexports.FnKinds = {\n    init: { kindId: 0x01, minAllowedPerContract: 1, maxAllowedPerContract: 1 },\n    action: { kindId: 0x02, minAllowedPerContract: 0, maxAllowedPerContract: 2147483647 },\n    callback: { kindId: 0x03, minAllowedPerContract: 0, maxAllowedPerContract: 2147483647 },\n    zkSecretInput: { kindId: 0x10, minAllowedPerContract: 0, maxAllowedPerContract: 2147483647 },\n    zkVarInputted: { kindId: 0x11, minAllowedPerContract: 0, maxAllowedPerContract: 2147483647 },\n    zkVarRejected: { kindId: 0x12, minAllowedPerContract: 0, maxAllowedPerContract: 1 },\n    zkComputeComplete: { kindId: 0x13, minAllowedPerContract: 0, maxAllowedPerContract: 2147483647 },\n    zkVarOpened: { kindId: 0x14, minAllowedPerContract: 0, maxAllowedPerContract: 1 },\n    zkUserVarOpened: { kindId: 0x15, minAllowedPerContract: 0, maxAllowedPerContract: 1 },\n    zkAttestationComplete: { kindId: 0x16, minAllowedPerContract: 0, maxAllowedPerContract: 1 },\n    zkSecretInputWithExplicitType: {\n        kindId: 0x17,\n        minAllowedPerContract: 0,\n        maxAllowedPerContract: 2147483647,\n    },\n    zkOnExternalEvent: { kindId: 0x18, minAllowedPerContract: 0, maxAllowedPerContract: 1 },\n};\nconst kindByValue = new Map([\n    [0x01, exports.FnKinds.init],\n    [0x02, exports.FnKinds.action],\n    [0x03, exports.FnKinds.callback],\n    [0x10, exports.FnKinds.zkSecretInput],\n    [0x11, exports.FnKinds.zkVarInputted],\n    [0x12, exports.FnKinds.zkVarRejected],\n    [0x13, exports.FnKinds.zkComputeComplete],\n    [0x14, exports.FnKinds.zkVarOpened],\n    [0x15, exports.FnKinds.zkUserVarOpened],\n    [0x16, exports.FnKinds.zkAttestationComplete],\n    [0x17, exports.FnKinds.zkSecretInputWithExplicitType],\n    [0x18, exports.FnKinds.zkOnExternalEvent],\n]);\nfunction fromKindId(id) {\n    return kindByValue.get(id);\n}\n//# sourceMappingURL=FnKinds.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcGFyc2VyL0ZuS2luZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLGtCQUFrQjtBQUNsQixlQUFlO0FBQ2YsWUFBWSxrRUFBa0U7QUFDOUUsY0FBYywyRUFBMkU7QUFDekYsZ0JBQWdCLDJFQUEyRTtBQUMzRixxQkFBcUIsMkVBQTJFO0FBQ2hHLHFCQUFxQiwyRUFBMkU7QUFDaEcscUJBQXFCLGtFQUFrRTtBQUN2Rix5QkFBeUIsMkVBQTJFO0FBQ3BHLG1CQUFtQixrRUFBa0U7QUFDckYsdUJBQXVCLGtFQUFrRTtBQUN6Riw2QkFBNkIsa0VBQWtFO0FBQy9GO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLHlCQUF5QixrRUFBa0U7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi9wYXJzZXIvRm5LaW5kcy5qcz80M2QwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GbktpbmRzID0gdm9pZCAwO1xuZXhwb3J0cy5mcm9tS2luZElkID0gZnJvbUtpbmRJZDtcbmV4cG9ydHMuRm5LaW5kcyA9IHtcbiAgICBpbml0OiB7IGtpbmRJZDogMHgwMSwgbWluQWxsb3dlZFBlckNvbnRyYWN0OiAxLCBtYXhBbGxvd2VkUGVyQ29udHJhY3Q6IDEgfSxcbiAgICBhY3Rpb246IHsga2luZElkOiAweDAyLCBtaW5BbGxvd2VkUGVyQ29udHJhY3Q6IDAsIG1heEFsbG93ZWRQZXJDb250cmFjdDogMjE0NzQ4MzY0NyB9LFxuICAgIGNhbGxiYWNrOiB7IGtpbmRJZDogMHgwMywgbWluQWxsb3dlZFBlckNvbnRyYWN0OiAwLCBtYXhBbGxvd2VkUGVyQ29udHJhY3Q6IDIxNDc0ODM2NDcgfSxcbiAgICB6a1NlY3JldElucHV0OiB7IGtpbmRJZDogMHgxMCwgbWluQWxsb3dlZFBlckNvbnRyYWN0OiAwLCBtYXhBbGxvd2VkUGVyQ29udHJhY3Q6IDIxNDc0ODM2NDcgfSxcbiAgICB6a1ZhcklucHV0dGVkOiB7IGtpbmRJZDogMHgxMSwgbWluQWxsb3dlZFBlckNvbnRyYWN0OiAwLCBtYXhBbGxvd2VkUGVyQ29udHJhY3Q6IDIxNDc0ODM2NDcgfSxcbiAgICB6a1ZhclJlamVjdGVkOiB7IGtpbmRJZDogMHgxMiwgbWluQWxsb3dlZFBlckNvbnRyYWN0OiAwLCBtYXhBbGxvd2VkUGVyQ29udHJhY3Q6IDEgfSxcbiAgICB6a0NvbXB1dGVDb21wbGV0ZTogeyBraW5kSWQ6IDB4MTMsIG1pbkFsbG93ZWRQZXJDb250cmFjdDogMCwgbWF4QWxsb3dlZFBlckNvbnRyYWN0OiAyMTQ3NDgzNjQ3IH0sXG4gICAgemtWYXJPcGVuZWQ6IHsga2luZElkOiAweDE0LCBtaW5BbGxvd2VkUGVyQ29udHJhY3Q6IDAsIG1heEFsbG93ZWRQZXJDb250cmFjdDogMSB9LFxuICAgIHprVXNlclZhck9wZW5lZDogeyBraW5kSWQ6IDB4MTUsIG1pbkFsbG93ZWRQZXJDb250cmFjdDogMCwgbWF4QWxsb3dlZFBlckNvbnRyYWN0OiAxIH0sXG4gICAgemtBdHRlc3RhdGlvbkNvbXBsZXRlOiB7IGtpbmRJZDogMHgxNiwgbWluQWxsb3dlZFBlckNvbnRyYWN0OiAwLCBtYXhBbGxvd2VkUGVyQ29udHJhY3Q6IDEgfSxcbiAgICB6a1NlY3JldElucHV0V2l0aEV4cGxpY2l0VHlwZToge1xuICAgICAgICBraW5kSWQ6IDB4MTcsXG4gICAgICAgIG1pbkFsbG93ZWRQZXJDb250cmFjdDogMCxcbiAgICAgICAgbWF4QWxsb3dlZFBlckNvbnRyYWN0OiAyMTQ3NDgzNjQ3LFxuICAgIH0sXG4gICAgemtPbkV4dGVybmFsRXZlbnQ6IHsga2luZElkOiAweDE4LCBtaW5BbGxvd2VkUGVyQ29udHJhY3Q6IDAsIG1heEFsbG93ZWRQZXJDb250cmFjdDogMSB9LFxufTtcbmNvbnN0IGtpbmRCeVZhbHVlID0gbmV3IE1hcChbXG4gICAgWzB4MDEsIGV4cG9ydHMuRm5LaW5kcy5pbml0XSxcbiAgICBbMHgwMiwgZXhwb3J0cy5GbktpbmRzLmFjdGlvbl0sXG4gICAgWzB4MDMsIGV4cG9ydHMuRm5LaW5kcy5jYWxsYmFja10sXG4gICAgWzB4MTAsIGV4cG9ydHMuRm5LaW5kcy56a1NlY3JldElucHV0XSxcbiAgICBbMHgxMSwgZXhwb3J0cy5GbktpbmRzLnprVmFySW5wdXR0ZWRdLFxuICAgIFsweDEyLCBleHBvcnRzLkZuS2luZHMuemtWYXJSZWplY3RlZF0sXG4gICAgWzB4MTMsIGV4cG9ydHMuRm5LaW5kcy56a0NvbXB1dGVDb21wbGV0ZV0sXG4gICAgWzB4MTQsIGV4cG9ydHMuRm5LaW5kcy56a1Zhck9wZW5lZF0sXG4gICAgWzB4MTUsIGV4cG9ydHMuRm5LaW5kcy56a1VzZXJWYXJPcGVuZWRdLFxuICAgIFsweDE2LCBleHBvcnRzLkZuS2luZHMuemtBdHRlc3RhdGlvbkNvbXBsZXRlXSxcbiAgICBbMHgxNywgZXhwb3J0cy5GbktpbmRzLnprU2VjcmV0SW5wdXRXaXRoRXhwbGljaXRUeXBlXSxcbiAgICBbMHgxOCwgZXhwb3J0cy5GbktpbmRzLnprT25FeHRlcm5hbEV2ZW50XSxcbl0pO1xuZnVuY3Rpb24gZnJvbUtpbmRJZChpZCkge1xuICAgIHJldHVybiBraW5kQnlWYWx1ZS5nZXQoaWQpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Rm5LaW5kcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/RustSyntaxPrettyPrinter.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/parser/RustSyntaxPrettyPrinter.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DocBuilder = exports.RustSyntaxPrettyPrinter = void 0;\nconst EnumTypeSpec_1 = __webpack_require__(/*! ../types/EnumTypeSpec */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/EnumTypeSpec.js\");\nconst StructTypeSpec_1 = __webpack_require__(/*! ../types/StructTypeSpec */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/StructTypeSpec.js\");\nconst FnKinds_1 = __webpack_require__(/*! ./FnKinds */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js\");\nconst TypeSpecStringifier_1 = __webpack_require__(/*! ./TypeSpecStringifier */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/TypeSpecStringifier.js\");\nclass RustSyntaxPrettyPrinter {\n    constructor(model) {\n        this.FN_KINDS_WITH_EXPLICIT_SHORTNAME = [\n            FnKinds_1.FnKinds.action,\n            FnKinds_1.FnKinds.callback,\n            FnKinds_1.FnKinds.zkSecretInput,\n            FnKinds_1.FnKinds.zkSecretInputWithExplicitType,\n            FnKinds_1.FnKinds.zkVarInputted,\n            FnKinds_1.FnKinds.zkComputeComplete,\n        ];\n        this.FN_KIND_MACRO_NAMES = new Map([\n            [FnKinds_1.FnKinds.init.kindId, \"init\"],\n            [FnKinds_1.FnKinds.action.kindId, \"action\"],\n            [FnKinds_1.FnKinds.callback.kindId, \"callback\"],\n            [FnKinds_1.FnKinds.zkSecretInput.kindId, \"zk_on_secret_input\"],\n            [FnKinds_1.FnKinds.zkVarInputted.kindId, \"zk_on_variable_inputted\"],\n            [FnKinds_1.FnKinds.zkVarRejected.kindId, \"zk_on_variable_rejected\"],\n            [FnKinds_1.FnKinds.zkComputeComplete.kindId, \"zk_on_compute_complete\"],\n            [FnKinds_1.FnKinds.zkVarOpened.kindId, \"zk_on_variable_opened\"],\n            [FnKinds_1.FnKinds.zkUserVarOpened.kindId, \"zk_on_user_variables_opened\"],\n            [FnKinds_1.FnKinds.zkAttestationComplete.kindId, \"zk_on_attestation_complete\"],\n            [FnKinds_1.FnKinds.zkSecretInputWithExplicitType.kindId, \"zk_on_secret_input_with_explicit_type\"],\n            [FnKinds_1.FnKinds.zkOnExternalEvent.kindId, \"zk_on_external_event\"],\n        ]);\n        this.model = model;\n        this.typeStringifier = new TypeSpecStringifier_1.TypeSpecStringifier(model.contract.namedTypes.map((t) => t.name));\n    }\n    printModel() {\n        const builder = [];\n        const headerBuilder = new DocBuilder(\"//! \", builder, this.typeStringifier);\n        for (const line of this.model.description) {\n            headerBuilder.appendLine(line);\n        }\n        if (this.model.description.length > 0) {\n            headerBuilder.appendLine(\"\\n\\n\");\n        }\n        // Build version information\n        builder.push(\"// Version Binder: \");\n        this.buildVersion(builder, this.model.versionBinder);\n        builder.push(\"// Version Client: \");\n        this.buildVersion(builder, this.model.versionClient);\n        builder.push(\"\\n\");\n        // Build list of struct definition\n        const contract = this.model.contract;\n        const namedTypesCopy = [...contract.namedTypes];\n        namedTypesCopy.splice(contract.stateType.index, 1);\n        namedTypesCopy.sort((a, b) => {\n            return a.name.localeCompare(b.name);\n        });\n        for (const namedTypeSpec of namedTypesCopy) {\n            this.buildNamedDefinition(builder, namedTypeSpec);\n        }\n        this.buildStateDefinition(builder);\n        const functions = [...contract.functions].sort((a, b) => {\n            if (a.kind.kindId != b.kind.kindId) {\n                return this.numberCompare(a.kind.kindId, b.kind.kindId);\n            }\n            else {\n                return a.shortname.compare(b.shortname);\n            }\n        });\n        for (const func of functions) {\n            this.buildFunction(builder, func);\n        }\n        return builder.join(\"\");\n    }\n    numberCompare(a, b) {\n        return a - b;\n    }\n    buildVersion(builder, version) {\n        builder.push(`${version.major}.${version.minor}.${version.patch}\\n`);\n    }\n    printFunction(func) {\n        const builder = [];\n        this.buildFunction(builder, func);\n        return builder.join(\"\");\n    }\n    printStruct(struct) {\n        const builder = [];\n        const stateStruct = this.model.contract.getStateStruct();\n        if (struct === stateStruct) {\n            this.buildStateDefinition(builder);\n        }\n        else {\n            this.buildStructDefinition(builder, struct);\n        }\n        return builder.join(\"\");\n    }\n    buildFunction(builder, func) {\n        var _a;\n        this.buildDocumentationForFn(builder, func, func.doc);\n        builder.push(\"#[\");\n        builder.push(this.fnKindToRustName(func.kind));\n        if (this.FN_KINDS_WITH_EXPLICIT_SHORTNAME.includes(func.kind)) {\n            builder.push(`(shortname = 0x${func.shortname.toString(\"hex\")}`);\n            const type = (_a = func.secretArgument) === null || _a === void 0 ? void 0 : _a.type;\n            // This implicitly means that it is secret input with explicit type\n            if (type !== undefined) {\n                builder.push(', secret_type = \"');\n                this.typeStringifier.stringify(builder, type);\n                builder.push('\"');\n            }\n            builder.push(\")\");\n        }\n        builder.push(\"]\\n\");\n        builder.push(`pub fn ${func.name} (`);\n        if (func.arguments.length > 0) {\n            builder.push(\"\\n\");\n        }\n        for (const arg of func.arguments) {\n            this.buildArgument(builder, arg);\n        }\n        builder.push(\")\\n\");\n    }\n    fnKindToRustName(kind) {\n        const kindName = this.FN_KIND_MACRO_NAMES.get(kind.kindId);\n        return kindName;\n    }\n    buildDocumentationForStruct(builder, structAbi, doc) {\n        const docBuilder = new DocBuilder(\"/// \", builder, this.typeStringifier);\n        docBuilder.appendParagraph(doc.description);\n        docBuilder.appendFields(structAbi.fields, doc.fields);\n    }\n    buildDocumentationForFn(builder, fnAbi, doc) {\n        const docBuilder = new DocBuilder(\"/// \", builder, this.typeStringifier);\n        docBuilder.appendParagraph(doc.description);\n        docBuilder.appendArguments(fnAbi.arguments, doc.arguments);\n        if (doc.returns != null) {\n            docBuilder.appendReturns(doc.returns);\n        }\n    }\n    buildArgument(builder, arg) {\n        builder.push(`    ${arg.name}: `);\n        this.typeStringifier.stringify(builder, arg.type);\n        builder.push(\",\\n\");\n    }\n    buildNamedDefinition(builder, named) {\n        if (named instanceof StructTypeSpec_1.StructTypeSpec && !this.isEnumVariant(named)) {\n            this.buildStructDefinition(builder, named);\n        }\n        else if (named instanceof EnumTypeSpec_1.EnumTypeSpec) {\n            this.buildEnumDefinition(builder, named);\n        }\n    }\n    isEnumVariant(structTypeSpec) {\n        const namedTypeSpecs = this.model.contract.namedTypes;\n        for (const namedTypeSpec of namedTypeSpecs) {\n            if (namedTypeSpec instanceof EnumTypeSpec_1.EnumTypeSpec) {\n                const enumTypeSpec = namedTypeSpec;\n                for (const variant of enumTypeSpec.variants) {\n                    if (this.model.contract.getNamedType(variant.def) === structTypeSpec) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n    buildEnumDefinition(builder, enumTypeSpec) {\n        builder.push(\"enum \" + enumTypeSpec.name + \" {\\n\");\n        for (const variant of enumTypeSpec.variants) {\n            this.buildEnumVariant(builder, variant);\n        }\n        builder.push(\"}\\n\");\n    }\n    buildEnumVariant(builder, variant) {\n        const namedTypeSpec = this.model.contract.getNamedType(variant.def);\n        builder.push(\"    \" + \"#[discriminant(\" + variant.discriminant + \")]\\n\");\n        builder.push(\"    \" + namedTypeSpec.name + \" {\");\n        for (let i = 0; i < namedTypeSpec.fields.length; i++) {\n            const field = namedTypeSpec.fields[i];\n            builder.push(\" \" + field.name + \": \");\n            this.typeStringifier.stringify(builder, field.type);\n            if (i < namedTypeSpec.fields.length - 1) {\n                builder.push(\",\");\n            }\n            else {\n                builder.push(\" \");\n            }\n        }\n        builder.push(\"},\\n\");\n    }\n    buildStateDefinition(builder) {\n        const state = this.model.contract.getStateStruct();\n        this.buildDocumentationForStruct(builder, state, state.doc);\n        builder.push(\"#[state]\\n\");\n        builder.push(`pub struct ${state.name} {\\n`);\n        for (const field of state.fields) {\n            this.buildFields(builder, field);\n        }\n        builder.push(\"}\\n\");\n    }\n    buildStructDefinition(builder, struct) {\n        this.buildDocumentationForStruct(builder, struct, struct.doc);\n        builder.push(`pub struct ${struct.name} {\\n`);\n        for (const field of struct.fields) {\n            this.buildFields(builder, field);\n        }\n        builder.push(\"}\\n\");\n    }\n    buildFields(builder, field) {\n        builder.push(`    ${field.name}: `);\n        this.typeStringifier.stringify(builder, field.type);\n        builder.push(\",\\n\");\n    }\n}\nexports.RustSyntaxPrettyPrinter = RustSyntaxPrettyPrinter;\nclass DocBuilder {\n    constructor(prefix, builder, typeSpecPrinter) {\n        this.prefix = prefix;\n        this.builder = builder;\n        this.typeSpecPrinter = typeSpecPrinter;\n    }\n    appendParagraph(paragraph) {\n        for (const line of paragraph) {\n            this.appendLine(line);\n        }\n        if (paragraph.length > 0) {\n            this.appendLine(\"\");\n        }\n    }\n    appendLine(line) {\n        this.builder.push(this.prefix);\n        this.builder.push(line);\n        this.builder.push(\"\\n\");\n    }\n    appendArguments(args, descriptions) {\n        this.appendGenericParamList(\"# Parameters\", args, descriptions);\n    }\n    appendFields(fields, descriptions) {\n        this.appendGenericParamList(\"### Fields\", fields, descriptions);\n    }\n    appendGenericParamList(sectionHeader, params, paramDescriptions) {\n        if (this.countParamLines(params, paramDescriptions) > 0) {\n            this.appendLine(sectionHeader);\n            this.appendLine(\"\");\n            for (const arg of params) {\n                const description = paramDescriptions.get(arg.name);\n                if (description !== undefined) {\n                    this.appendArgOrField(arg.name, arg.type, description);\n                }\n            }\n            this.appendLine(\"\");\n        }\n    }\n    countParamLines(params, descriptions) {\n        let count = 0;\n        for (const arg of params) {\n            if (descriptions.get(arg.name) !== undefined) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    appendArgOrField(name, type, description) {\n        this.builder.push(...[this.prefix, \"* `\", name, \"`: \"]);\n        this.builder.push(\"[`\");\n        this.typeSpecPrinter.stringify(this.builder, type);\n        this.builder.push(\"`], \");\n        this.builder.push(...[description, \"\\n\"]);\n    }\n    appendReturns(returns) {\n        this.appendLine(\"# Returns:\");\n        this.appendLine(\"\");\n        this.appendLine(returns);\n        this.appendLine(\"\");\n    }\n    build() {\n        return this.builder.join(\"\");\n    }\n}\nexports.DocBuilder = DocBuilder;\n//# sourceMappingURL=RustSyntaxPrettyPrinter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/RustSyntaxPrettyPrinter.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/TypeSpecStringifier.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/parser/TypeSpecStringifier.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypeSpecStringifier = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass TypeSpecStringifier {\n    constructor(namedTypes) {\n        this.namedTypes = namedTypes;\n    }\n    stringify(builder, type) {\n        const typeIndex = type.typeIndex;\n        if (typeIndex === Abi_1.TypeIndex.Named) {\n            this.buildStructRef(builder, type);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Vec) {\n            this.buildVec(builder, type);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Option) {\n            this.buildOption(builder, type);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Map) {\n            this.buildMap(builder, type);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Set) {\n            this.buildSet(builder, type);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.SizedArray) {\n            this.buildSizedArray(builder, type);\n        }\n        else {\n            builder.push(Abi_1.TypeIndex[typeIndex]);\n        }\n    }\n    buildStructRef(builder, type) {\n        builder.push(this.namedTypes[type.index]);\n    }\n    buildVec(builder, type) {\n        builder.push(\"Vec<\");\n        this.stringify(builder, type.valueType);\n        builder.push(\">\");\n    }\n    buildOption(builder, type) {\n        builder.push(\"Option<\");\n        this.stringify(builder, type.valueType);\n        builder.push(\">\");\n    }\n    buildMap(builder, type) {\n        builder.push(\"Map<\");\n        this.stringify(builder, type.keyType);\n        builder.push(\", \");\n        this.stringify(builder, type.valueType);\n        builder.push(\">\");\n    }\n    buildSet(builder, type) {\n        builder.push(\"Set<\");\n        this.stringify(builder, type.valueType);\n        builder.push(\">\");\n    }\n    buildSizedArray(builder, type) {\n        builder.push(\"[\");\n        this.stringify(builder, type.valueType);\n        builder.push(`; ${type.length}]`);\n    }\n}\nexports.TypeSpecStringifier = TypeSpecStringifier;\n//# sourceMappingURL=TypeSpecStringifier.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcGFyc2VyL1R5cGVTcGVjU3RyaW5naWZpZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLGNBQWMsbUJBQU8sQ0FBQyw2R0FBYztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLEVBQUUsWUFBWTtBQUN0QztBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcGFyc2VyL1R5cGVTcGVjU3RyaW5naWZpZXIuanM/MmJiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHlwZVNwZWNTdHJpbmdpZmllciA9IHZvaWQgMDtcbmNvbnN0IEFiaV8xID0gcmVxdWlyZShcIi4uL3R5cGVzL0FiaVwiKTtcbmNsYXNzIFR5cGVTcGVjU3RyaW5naWZpZXIge1xuICAgIGNvbnN0cnVjdG9yKG5hbWVkVHlwZXMpIHtcbiAgICAgICAgdGhpcy5uYW1lZFR5cGVzID0gbmFtZWRUeXBlcztcbiAgICB9XG4gICAgc3RyaW5naWZ5KGJ1aWxkZXIsIHR5cGUpIHtcbiAgICAgICAgY29uc3QgdHlwZUluZGV4ID0gdHlwZS50eXBlSW5kZXg7XG4gICAgICAgIGlmICh0eXBlSW5kZXggPT09IEFiaV8xLlR5cGVJbmRleC5OYW1lZCkge1xuICAgICAgICAgICAgdGhpcy5idWlsZFN0cnVjdFJlZihidWlsZGVyLCB0eXBlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlSW5kZXggPT09IEFiaV8xLlR5cGVJbmRleC5WZWMpIHtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRWZWMoYnVpbGRlciwgdHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZUluZGV4ID09PSBBYmlfMS5UeXBlSW5kZXguT3B0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmJ1aWxkT3B0aW9uKGJ1aWxkZXIsIHR5cGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVJbmRleCA9PT0gQWJpXzEuVHlwZUluZGV4Lk1hcCkge1xuICAgICAgICAgICAgdGhpcy5idWlsZE1hcChidWlsZGVyLCB0eXBlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlSW5kZXggPT09IEFiaV8xLlR5cGVJbmRleC5TZXQpIHtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRTZXQoYnVpbGRlciwgdHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZUluZGV4ID09PSBBYmlfMS5UeXBlSW5kZXguU2l6ZWRBcnJheSkge1xuICAgICAgICAgICAgdGhpcy5idWlsZFNpemVkQXJyYXkoYnVpbGRlciwgdHlwZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goQWJpXzEuVHlwZUluZGV4W3R5cGVJbmRleF0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGJ1aWxkU3RydWN0UmVmKGJ1aWxkZXIsIHR5cGUpIHtcbiAgICAgICAgYnVpbGRlci5wdXNoKHRoaXMubmFtZWRUeXBlc1t0eXBlLmluZGV4XSk7XG4gICAgfVxuICAgIGJ1aWxkVmVjKGJ1aWxkZXIsIHR5cGUpIHtcbiAgICAgICAgYnVpbGRlci5wdXNoKFwiVmVjPFwiKTtcbiAgICAgICAgdGhpcy5zdHJpbmdpZnkoYnVpbGRlciwgdHlwZS52YWx1ZVR5cGUpO1xuICAgICAgICBidWlsZGVyLnB1c2goXCI+XCIpO1xuICAgIH1cbiAgICBidWlsZE9wdGlvbihidWlsZGVyLCB0eXBlKSB7XG4gICAgICAgIGJ1aWxkZXIucHVzaChcIk9wdGlvbjxcIik7XG4gICAgICAgIHRoaXMuc3RyaW5naWZ5KGJ1aWxkZXIsIHR5cGUudmFsdWVUeXBlKTtcbiAgICAgICAgYnVpbGRlci5wdXNoKFwiPlwiKTtcbiAgICB9XG4gICAgYnVpbGRNYXAoYnVpbGRlciwgdHlwZSkge1xuICAgICAgICBidWlsZGVyLnB1c2goXCJNYXA8XCIpO1xuICAgICAgICB0aGlzLnN0cmluZ2lmeShidWlsZGVyLCB0eXBlLmtleVR5cGUpO1xuICAgICAgICBidWlsZGVyLnB1c2goXCIsIFwiKTtcbiAgICAgICAgdGhpcy5zdHJpbmdpZnkoYnVpbGRlciwgdHlwZS52YWx1ZVR5cGUpO1xuICAgICAgICBidWlsZGVyLnB1c2goXCI+XCIpO1xuICAgIH1cbiAgICBidWlsZFNldChidWlsZGVyLCB0eXBlKSB7XG4gICAgICAgIGJ1aWxkZXIucHVzaChcIlNldDxcIik7XG4gICAgICAgIHRoaXMuc3RyaW5naWZ5KGJ1aWxkZXIsIHR5cGUudmFsdWVUeXBlKTtcbiAgICAgICAgYnVpbGRlci5wdXNoKFwiPlwiKTtcbiAgICB9XG4gICAgYnVpbGRTaXplZEFycmF5KGJ1aWxkZXIsIHR5cGUpIHtcbiAgICAgICAgYnVpbGRlci5wdXNoKFwiW1wiKTtcbiAgICAgICAgdGhpcy5zdHJpbmdpZnkoYnVpbGRlciwgdHlwZS52YWx1ZVR5cGUpO1xuICAgICAgICBidWlsZGVyLnB1c2goYDsgJHt0eXBlLmxlbmd0aH1dYCk7XG4gICAgfVxufVxuZXhwb3J0cy5UeXBlU3BlY1N0cmluZ2lmaWVyID0gVHlwZVNwZWNTdHJpbmdpZmllcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVR5cGVTcGVjU3RyaW5naWZpZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/TypeSpecStringifier.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/FnRpcBuilder.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/rpc/FnRpcBuilder.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FnRpcBuilder = void 0;\nconst AbstractBuilder_1 = __webpack_require__(/*! ../builder/AbstractBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AbstractBuilder.js\");\nconst FnRpcProducer_1 = __webpack_require__(/*! ./FnRpcProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/FnRpcProducer.js\");\nconst AbiByteOutput_1 = __webpack_require__(/*! ../abistreams/AbiByteOutput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteOutput.js\");\nclass FnRpcBuilder extends AbstractBuilder_1.AbstractBuilder {\n    constructor(name, contractAbi, kind) {\n        super(contractAbi !== null && contractAbi !== void 0 ? contractAbi : null, \"\", new FnRpcProducer_1.FnRpcProducer(name, contractAbi, kind));\n    }\n    getBytes() {\n        return AbiByteOutput_1.AbiByteOutput.serializeBigEndian((out) => this.getAggregateProducer().write(out));\n    }\n}\nexports.FnRpcBuilder = FnRpcBuilder;\n//# sourceMappingURL=FnRpcBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcnBjL0ZuUnBjQnVpbGRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0I7QUFDcEIsMEJBQTBCLG1CQUFPLENBQUMseUlBQTRCO0FBQzlELHdCQUF3QixtQkFBTyxDQUFDLHdIQUFpQjtBQUNqRCx3QkFBd0IsbUJBQU8sQ0FBQywySUFBNkI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3JwYy9GblJwY0J1aWxkZXIuanM/NjI4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRm5ScGNCdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgQWJzdHJhY3RCdWlsZGVyXzEgPSByZXF1aXJlKFwiLi4vYnVpbGRlci9BYnN0cmFjdEJ1aWxkZXJcIik7XG5jb25zdCBGblJwY1Byb2R1Y2VyXzEgPSByZXF1aXJlKFwiLi9GblJwY1Byb2R1Y2VyXCIpO1xuY29uc3QgQWJpQnl0ZU91dHB1dF8xID0gcmVxdWlyZShcIi4uL2FiaXN0cmVhbXMvQWJpQnl0ZU91dHB1dFwiKTtcbmNsYXNzIEZuUnBjQnVpbGRlciBleHRlbmRzIEFic3RyYWN0QnVpbGRlcl8xLkFic3RyYWN0QnVpbGRlciB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgY29udHJhY3RBYmksIGtpbmQpIHtcbiAgICAgICAgc3VwZXIoY29udHJhY3RBYmkgIT09IG51bGwgJiYgY29udHJhY3RBYmkgIT09IHZvaWQgMCA/IGNvbnRyYWN0QWJpIDogbnVsbCwgXCJcIiwgbmV3IEZuUnBjUHJvZHVjZXJfMS5GblJwY1Byb2R1Y2VyKG5hbWUsIGNvbnRyYWN0QWJpLCBraW5kKSk7XG4gICAgfVxuICAgIGdldEJ5dGVzKCkge1xuICAgICAgICByZXR1cm4gQWJpQnl0ZU91dHB1dF8xLkFiaUJ5dGVPdXRwdXQuc2VyaWFsaXplQmlnRW5kaWFuKChvdXQpID0+IHRoaXMuZ2V0QWdncmVnYXRlUHJvZHVjZXIoKS53cml0ZShvdXQpKTtcbiAgICB9XG59XG5leHBvcnRzLkZuUnBjQnVpbGRlciA9IEZuUnBjQnVpbGRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZuUnBjQnVpbGRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/FnRpcBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/FnRpcProducer.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/rpc/FnRpcProducer.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FnRpcProducer = void 0;\nconst FnKinds_1 = __webpack_require__(/*! ../parser/FnKinds */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js\");\nconst RealBinderInvocationReader_1 = __webpack_require__(/*! ./RealBinderInvocationReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RealBinderInvocationReader.js\");\nclass FnRpcProducer {\n    constructor(name, contractAbi, kind) {\n        this.elements = [];\n        this.contractAbi = contractAbi !== null && contractAbi !== void 0 ? contractAbi : null;\n        if (typeof name === \"string\" && contractAbi !== undefined) {\n            const action = contractAbi.getFunctionByName(name);\n            if (action === undefined) {\n                throw new Error(`Contract must contain action with name ${name}`);\n            }\n            this.action = action;\n            this.shortname = action.shortname;\n        }\n        else {\n            const shortname = name;\n            if (contractAbi === undefined || kind === undefined) {\n                this.action = null;\n                this.shortname = shortname;\n            }\n            else {\n                const action = contractAbi.getFunction(shortname, kind);\n                if (action === undefined) {\n                    throw new Error(`Contract must contain action with shortname ${shortname.toString(\"hex\")} and kind ${kind.kindId}`);\n                }\n                this.action = action;\n                this.shortname = action.shortname;\n            }\n        }\n    }\n    getTypeSpecForElement() {\n        if (this.action == null || this.action.arguments.length === this.elements.length) {\n            return null;\n        }\n        const nextIndex = this.elements.length;\n        return this.action.arguments[nextIndex].type;\n    }\n    addElement(argument) {\n        if (this.action !== null && this.action.arguments.length === this.elements.length) {\n            throw new Error(\"Cannot add more arguments than the action expects.\");\n        }\n        this.elements.push(argument);\n    }\n    write(out) {\n        if (this.contractAbi !== null &&\n            this.action !== null &&\n            this.action.kind === FnKinds_1.FnKinds.action &&\n            this.contractAbi.isZk()) {\n            out.writeU8(RealBinderInvocationReader_1.RealBinderInvocationReader.ZK_OPEN_INVOCATION);\n        }\n        out.writeBytes(this.shortname);\n        for (const element of this.elements) {\n            element.write(out);\n        }\n        this.validate();\n    }\n    validate() {\n        if (this.action !== null && this.elements.length !== this.action.arguments.length) {\n            const missingArgument = this.action.arguments[this.elements.length];\n            throw new Error(`Missing argument '${missingArgument.name}'`);\n        }\n    }\n    getFieldName() {\n        if (this.action !== null && this.action.arguments.length !== this.elements.length) {\n            const nextIndex = this.elements.length;\n            const nextArgument = this.action.arguments[nextIndex];\n            return this.action.name + \"/\" + nextArgument.name;\n        }\n        return \"\";\n    }\n}\nexports.FnRpcProducer = FnRpcProducer;\n//# sourceMappingURL=FnRpcProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcnBjL0ZuUnBjUHJvZHVjZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGtCQUFrQixtQkFBTyxDQUFDLHVIQUFtQjtBQUM3QyxxQ0FBcUMsbUJBQU8sQ0FBQyxrSkFBOEI7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwRUFBMEUsS0FBSztBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1GQUFtRiwyQkFBMkIsV0FBVyxZQUFZO0FBQ3JJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQscUJBQXFCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi9ycGMvRm5ScGNQcm9kdWNlci5qcz82ODE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GblJwY1Byb2R1Y2VyID0gdm9pZCAwO1xuY29uc3QgRm5LaW5kc18xID0gcmVxdWlyZShcIi4uL3BhcnNlci9GbktpbmRzXCIpO1xuY29uc3QgUmVhbEJpbmRlckludm9jYXRpb25SZWFkZXJfMSA9IHJlcXVpcmUoXCIuL1JlYWxCaW5kZXJJbnZvY2F0aW9uUmVhZGVyXCIpO1xuY2xhc3MgRm5ScGNQcm9kdWNlciB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgY29udHJhY3RBYmksIGtpbmQpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50cyA9IFtdO1xuICAgICAgICB0aGlzLmNvbnRyYWN0QWJpID0gY29udHJhY3RBYmkgIT09IG51bGwgJiYgY29udHJhY3RBYmkgIT09IHZvaWQgMCA/IGNvbnRyYWN0QWJpIDogbnVsbDtcbiAgICAgICAgaWYgKHR5cGVvZiBuYW1lID09PSBcInN0cmluZ1wiICYmIGNvbnRyYWN0QWJpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IGFjdGlvbiA9IGNvbnRyYWN0QWJpLmdldEZ1bmN0aW9uQnlOYW1lKG5hbWUpO1xuICAgICAgICAgICAgaWYgKGFjdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb250cmFjdCBtdXN0IGNvbnRhaW4gYWN0aW9uIHdpdGggbmFtZSAke25hbWV9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmFjdGlvbiA9IGFjdGlvbjtcbiAgICAgICAgICAgIHRoaXMuc2hvcnRuYW1lID0gYWN0aW9uLnNob3J0bmFtZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHNob3J0bmFtZSA9IG5hbWU7XG4gICAgICAgICAgICBpZiAoY29udHJhY3RBYmkgPT09IHVuZGVmaW5lZCB8fCBraW5kID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFjdGlvbiA9IG51bGw7XG4gICAgICAgICAgICAgICAgdGhpcy5zaG9ydG5hbWUgPSBzaG9ydG5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBhY3Rpb24gPSBjb250cmFjdEFiaS5nZXRGdW5jdGlvbihzaG9ydG5hbWUsIGtpbmQpO1xuICAgICAgICAgICAgICAgIGlmIChhY3Rpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENvbnRyYWN0IG11c3QgY29udGFpbiBhY3Rpb24gd2l0aCBzaG9ydG5hbWUgJHtzaG9ydG5hbWUudG9TdHJpbmcoXCJoZXhcIil9IGFuZCBraW5kICR7a2luZC5raW5kSWR9YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuYWN0aW9uID0gYWN0aW9uO1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvcnRuYW1lID0gYWN0aW9uLnNob3J0bmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRUeXBlU3BlY0ZvckVsZW1lbnQoKSB7XG4gICAgICAgIGlmICh0aGlzLmFjdGlvbiA9PSBudWxsIHx8IHRoaXMuYWN0aW9uLmFyZ3VtZW50cy5sZW5ndGggPT09IHRoaXMuZWxlbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuZXh0SW5kZXggPSB0aGlzLmVsZW1lbnRzLmxlbmd0aDtcbiAgICAgICAgcmV0dXJuIHRoaXMuYWN0aW9uLmFyZ3VtZW50c1tuZXh0SW5kZXhdLnR5cGU7XG4gICAgfVxuICAgIGFkZEVsZW1lbnQoYXJndW1lbnQpIHtcbiAgICAgICAgaWYgKHRoaXMuYWN0aW9uICE9PSBudWxsICYmIHRoaXMuYWN0aW9uLmFyZ3VtZW50cy5sZW5ndGggPT09IHRoaXMuZWxlbWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYWRkIG1vcmUgYXJndW1lbnRzIHRoYW4gdGhlIGFjdGlvbiBleHBlY3RzLlwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVsZW1lbnRzLnB1c2goYXJndW1lbnQpO1xuICAgIH1cbiAgICB3cml0ZShvdXQpIHtcbiAgICAgICAgaWYgKHRoaXMuY29udHJhY3RBYmkgIT09IG51bGwgJiZcbiAgICAgICAgICAgIHRoaXMuYWN0aW9uICE9PSBudWxsICYmXG4gICAgICAgICAgICB0aGlzLmFjdGlvbi5raW5kID09PSBGbktpbmRzXzEuRm5LaW5kcy5hY3Rpb24gJiZcbiAgICAgICAgICAgIHRoaXMuY29udHJhY3RBYmkuaXNaaygpKSB7XG4gICAgICAgICAgICBvdXQud3JpdGVVOChSZWFsQmluZGVySW52b2NhdGlvblJlYWRlcl8xLlJlYWxCaW5kZXJJbnZvY2F0aW9uUmVhZGVyLlpLX09QRU5fSU5WT0NBVElPTik7XG4gICAgICAgIH1cbiAgICAgICAgb3V0LndyaXRlQnl0ZXModGhpcy5zaG9ydG5hbWUpO1xuICAgICAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgdGhpcy5lbGVtZW50cykge1xuICAgICAgICAgICAgZWxlbWVudC53cml0ZShvdXQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudmFsaWRhdGUoKTtcbiAgICB9XG4gICAgdmFsaWRhdGUoKSB7XG4gICAgICAgIGlmICh0aGlzLmFjdGlvbiAhPT0gbnVsbCAmJiB0aGlzLmVsZW1lbnRzLmxlbmd0aCAhPT0gdGhpcy5hY3Rpb24uYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgbWlzc2luZ0FyZ3VtZW50ID0gdGhpcy5hY3Rpb24uYXJndW1lbnRzW3RoaXMuZWxlbWVudHMubGVuZ3RoXTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTWlzc2luZyBhcmd1bWVudCAnJHttaXNzaW5nQXJndW1lbnQubmFtZX0nYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0RmllbGROYW1lKCkge1xuICAgICAgICBpZiAodGhpcy5hY3Rpb24gIT09IG51bGwgJiYgdGhpcy5hY3Rpb24uYXJndW1lbnRzLmxlbmd0aCAhPT0gdGhpcy5lbGVtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNvbnN0IG5leHRJbmRleCA9IHRoaXMuZWxlbWVudHMubGVuZ3RoO1xuICAgICAgICAgICAgY29uc3QgbmV4dEFyZ3VtZW50ID0gdGhpcy5hY3Rpb24uYXJndW1lbnRzW25leHRJbmRleF07XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5hY3Rpb24ubmFtZSArIFwiL1wiICsgbmV4dEFyZ3VtZW50Lm5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxufVxuZXhwb3J0cy5GblJwY1Byb2R1Y2VyID0gRm5ScGNQcm9kdWNlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZuUnBjUHJvZHVjZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/FnRpcProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/JsonRpcConverter.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/rpc/JsonRpcConverter.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JsonRpcConverter = void 0;\nconst JsonValueConverter_1 = __webpack_require__(/*! ../value/JsonValueConverter */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/JsonValueConverter.js\");\nexports.JsonRpcConverter = {\n    toJson: (rpcValueFn) => {\n        const args = {};\n        rpcValueFn.fnAbi.arguments.forEach((argAbi, index) => {\n            args[argAbi.name] = JsonValueConverter_1.JsonValueConverter.toJson(rpcValueFn.arguments[index]);\n        });\n        return {\n            actionName: rpcValueFn.fnAbi.name,\n            arguments: args,\n        };\n    },\n    toJsonString: (rpcValueFn) => JSON.stringify(exports.JsonRpcConverter.toJson(rpcValueFn), null, 2),\n};\n//# sourceMappingURL=JsonRpcConverter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcnBjL0pzb25ScGNDb252ZXJ0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLDZCQUE2QixtQkFBTyxDQUFDLDJJQUE2QjtBQUNsRSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcnBjL0pzb25ScGNDb252ZXJ0ZXIuanM/Mzk0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSnNvblJwY0NvbnZlcnRlciA9IHZvaWQgMDtcbmNvbnN0IEpzb25WYWx1ZUNvbnZlcnRlcl8xID0gcmVxdWlyZShcIi4uL3ZhbHVlL0pzb25WYWx1ZUNvbnZlcnRlclwiKTtcbmV4cG9ydHMuSnNvblJwY0NvbnZlcnRlciA9IHtcbiAgICB0b0pzb246IChycGNWYWx1ZUZuKSA9PiB7XG4gICAgICAgIGNvbnN0IGFyZ3MgPSB7fTtcbiAgICAgICAgcnBjVmFsdWVGbi5mbkFiaS5hcmd1bWVudHMuZm9yRWFjaCgoYXJnQWJpLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgYXJnc1thcmdBYmkubmFtZV0gPSBKc29uVmFsdWVDb252ZXJ0ZXJfMS5Kc29uVmFsdWVDb252ZXJ0ZXIudG9Kc29uKHJwY1ZhbHVlRm4uYXJndW1lbnRzW2luZGV4XSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWN0aW9uTmFtZTogcnBjVmFsdWVGbi5mbkFiaS5uYW1lLFxuICAgICAgICAgICAgYXJndW1lbnRzOiBhcmdzLFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgdG9Kc29uU3RyaW5nOiAocnBjVmFsdWVGbikgPT4gSlNPTi5zdHJpbmdpZnkoZXhwb3J0cy5Kc29uUnBjQ29udmVydGVyLnRvSnNvbihycGNWYWx1ZUZuKSwgbnVsbCwgMiksXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SnNvblJwY0NvbnZlcnRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/JsonRpcConverter.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RealBinderInvocationReader.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/rpc/RealBinderInvocationReader.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RealBinderInvocationReader = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst RpcValueFn_1 = __webpack_require__(/*! ./RpcValueFn */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcValueFn.js\");\nconst RpcReader_1 = __webpack_require__(/*! ./RpcReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcReader.js\");\nconst FnKinds_1 = __webpack_require__(/*! ../parser/FnKinds */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js\");\nconst ScValueNumber_1 = __webpack_require__(/*! ../value/ScValueNumber */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueNumber.js\");\nconst AbiParser_1 = __webpack_require__(/*! ../parser/AbiParser */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/AbiParser.js\");\nconst RealBinderInvocationDeserialization_1 = __webpack_require__(/*! ../RealBinderInvocationDeserialization */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/RealBinderInvocationDeserialization.js\");\nconst ScValueHash_1 = __webpack_require__(/*! ../value/ScValueHash */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueHash.js\");\nconst ScValuePublicKey_1 = __webpack_require__(/*! ../value/ScValuePublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValuePublicKey.js\");\nconst ScValueVector_1 = __webpack_require__(/*! ../value/ScValueVector */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueVector.js\");\nconst ScValueSignature_1 = __webpack_require__(/*! ../value/ScValueSignature */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSignature.js\");\nconst NumberToHex_1 = __webpack_require__(/*! ../util/NumberToHex */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/util/NumberToHex.js\");\nconst FnAbi_1 = __webpack_require__(/*! ../types/FnAbi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/FnAbi.js\");\nconst ScValueEnum_1 = __webpack_require__(/*! ../value/ScValueEnum */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueEnum.js\");\nconst ScValueStruct_1 = __webpack_require__(/*! ../value/ScValueStruct */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueStruct.js\");\nclass RealBinderInvocationReader {\n    constructor(input, fileAbi, reader) {\n        this.input = input;\n        this.fileAbi = fileAbi;\n        this.reader = reader;\n    }\n    readRpc() {\n        const shortname = this.input.readU8();\n        switch (shortname) {\n            case RealBinderInvocationReader.COMMIT_RESULT_VARIABLE:\n                return this.deserializeCommitResultVariable();\n            case RealBinderInvocationReader.ON_CHAIN_OUTPUT:\n                return this.deserializeOnChainOutput();\n            case RealBinderInvocationReader.UNABLE_TO_CALCULATE:\n                return this.deserializeUnableToCalculate();\n            case RealBinderInvocationReader.OPEN_MASKED_INPUT:\n                return this.deserializeOpenMaskedInput();\n            case RealBinderInvocationReader.ZERO_KNOWLEDGE_INPUT_OFF_CHAIN:\n                return this.deserializeZeroKnowledgeInputOffChain(true);\n            case RealBinderInvocationReader.ZERO_KNOWLEDGE_INPUT_ON_CHAIN:\n                return this.deserializeZeroKnowledgeInputOnChain(true);\n            case RealBinderInvocationReader.REJECT_INPUT:\n                return this.deserializeRejectInput();\n            case RealBinderInvocationReader.ZK_OPEN_INVOCATION:\n                return this.reader.readPublicInvocation();\n            case RealBinderInvocationReader.ADD_ATTESTATION_SIGNATURE:\n                return this.deserializeAddAttestationSignature();\n            case RealBinderInvocationReader.GET_COMPUTATION_DEADLINE:\n                return this.deserializeGetComputationDeadline();\n            case RealBinderInvocationReader.ON_COMPUTE_COMPLETE:\n                return this.deserializeOnComputeComplete();\n            case RealBinderInvocationReader.ON_VARIABLES_OPENED:\n                return this.deserializeOnVariablesOpened();\n            case RealBinderInvocationReader.ON_ATTESTATION_COMPLETE:\n                return this.deserializeOnAttestationComplete();\n            case RealBinderInvocationReader.ON_VARIABLE_INPUTTED:\n                return this.deserializeOnVariableInputted();\n            case RealBinderInvocationReader.ADD_BATCHES:\n                return this.deserializeAddBatches();\n            case RealBinderInvocationReader.EXTEND_ZK_COMPUTATION:\n                return this.deserializeExtendZkComputation();\n            default:\n                throw Error(`Invocation identifier 0x${(0, NumberToHex_1.toHexString)(shortname)} is not supported.`);\n        }\n    }\n    deserializeCommitResultVariable() {\n        const id = this.input.readI64();\n        const list = this.readRemainingAsListOfBytes();\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.COMMIT_RESULT_VARIABLE]), FnKinds_1.FnKinds.action);\n        const invocationArguments = [\n            new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i64, id),\n            new ScValueVector_1.ScValueVector(list),\n        ];\n        return new RpcValueFn_1.RpcValueFn(func, invocationArguments);\n    }\n    deserializeOnChainOutput() {\n        const id = this.input.readI32();\n        const list = this.readRemainingAsListOfBytes();\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.ON_CHAIN_OUTPUT]), FnKinds_1.FnKinds.action);\n        const invocationArguments = [\n            new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, id),\n            new ScValueVector_1.ScValueVector(list),\n        ];\n        return new RpcValueFn_1.RpcValueFn(func, invocationArguments);\n    }\n    deserializeUnableToCalculate() {\n        const blocktime = new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i64, this.input.readI64());\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.UNABLE_TO_CALCULATE]), FnKinds_1.FnKinds.action);\n        const invocationArguments = [blocktime];\n        return new RpcValueFn_1.RpcValueFn(func, invocationArguments);\n    }\n    deserializeOpenMaskedInput() {\n        const id = this.input.readI32();\n        const maskedValue = this.readRemainingAsListOfBytes();\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.OPEN_MASKED_INPUT]), FnKinds_1.FnKinds.action);\n        const invocationArguments = [\n            new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, id),\n            new ScValueVector_1.ScValueVector(maskedValue),\n        ];\n        return new RpcValueFn_1.RpcValueFn(func, invocationArguments);\n    }\n    deserializeZeroKnowledgeInputOffChain(onlyPublic) {\n        const nrOfInputs = this.input.readI32();\n        const invocationArguments = [];\n        const bitlengths = [];\n        for (let i = 0; i < nrOfInputs; i++) {\n            bitlengths.push(new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, this.input.readI32()));\n        }\n        invocationArguments.push(new ScValueVector_1.ScValueVector(bitlengths));\n        invocationArguments.push(new ScValueHash_1.ScValueHash(this.input.readBytes(32)));\n        invocationArguments.push(new ScValueHash_1.ScValueHash(this.input.readBytes(32)));\n        invocationArguments.push(new ScValueHash_1.ScValueHash(this.input.readBytes(32)));\n        invocationArguments.push(new ScValueHash_1.ScValueHash(this.input.readBytes(32)));\n        const action = this.getSecretInputPublicInvocation();\n        if (onlyPublic) {\n            return action;\n        }\n        return new RpcValueFn_1.RpcValueFn(action.fnAbi, invocationArguments.concat(action.arguments));\n    }\n    deserializeZeroKnowledgeInputOnChain(onlyPublic) {\n        const nrOfInputs = this.input.readI32();\n        const invocationArguments = [];\n        const bitLengths = [];\n        for (let i = 0; i < nrOfInputs; i++) {\n            bitLengths.push(new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, this.input.readI32()));\n        }\n        invocationArguments.push(new ScValueVector_1.ScValueVector(bitLengths));\n        invocationArguments.push(new ScValuePublicKey_1.ScValuePublicKey(this.input.readBytes(33)));\n        invocationArguments.push(ScValueVector_1.ScValueVector.fromBytes(this.input.readBytes(this.input.readI32())));\n        const action = this.getSecretInputPublicInvocation();\n        if (onlyPublic) {\n            return action;\n        }\n        return new RpcValueFn_1.RpcValueFn(action.fnAbi, invocationArguments.concat(action.arguments));\n    }\n    getSecretInputPublicInvocation() {\n        const publicInvocation = this.input.readRemaining();\n        try {\n            return new RpcReader_1.RpcReader(publicInvocation, this.fileAbi, FnKinds_1.FnKinds.zkSecretInputWithExplicitType).readPublicInvocation();\n        }\n        catch (e) {\n            return new RpcReader_1.RpcReader(publicInvocation, this.fileAbi, FnKinds_1.FnKinds.zkSecretInput).readPublicInvocation();\n        }\n    }\n    deserializeRejectInput() {\n        const id = new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, this.input.readI32());\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.REJECT_INPUT]), FnKinds_1.FnKinds.action);\n        const invocationArguments = [id];\n        return new RpcValueFn_1.RpcValueFn(func, invocationArguments);\n    }\n    deserializeAddAttestationSignature() {\n        const id = new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, this.input.readI32());\n        const signature = new ScValueSignature_1.ScValueSignature(this.input.readRemaining());\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.ADD_ATTESTATION_SIGNATURE]), FnKinds_1.FnKinds.action);\n        return new RpcValueFn_1.RpcValueFn(func, [id, signature]);\n    }\n    deserializeGetComputationDeadline() {\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.GET_COMPUTATION_DEADLINE]), FnKinds_1.FnKinds.action);\n        return new RpcValueFn_1.RpcValueFn(func, []);\n    }\n    deserializeOnComputeComplete() {\n        const nrOfVariables = this.input.readI32();\n        const variableIds = [];\n        for (let i = 0; i < nrOfVariables; i++) {\n            variableIds.push(new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, this.input.readI32()));\n        }\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.ON_COMPUTE_COMPLETE]), FnKinds_1.FnKinds.action);\n        return new RpcValueFn_1.RpcValueFn(func, [new ScValueVector_1.ScValueVector(variableIds)]);\n    }\n    deserializeOnVariablesOpened() {\n        const numberOfIds = this.input.readI32();\n        const variableIds = [];\n        for (let i = 0; i < numberOfIds; i++) {\n            variableIds.push(new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, this.input.readI32()));\n        }\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.ON_VARIABLES_OPENED]), FnKinds_1.FnKinds.action);\n        return new RpcValueFn_1.RpcValueFn(func, [new ScValueVector_1.ScValueVector(variableIds)]);\n    }\n    deserializeOnAttestationComplete() {\n        const id = this.input.readI32();\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.ON_ATTESTATION_COMPLETE]), FnKinds_1.FnKinds.action);\n        return new RpcValueFn_1.RpcValueFn(func, [new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, id)]);\n    }\n    deserializeOnVariableInputted() {\n        const id = this.input.readI32();\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.ON_VARIABLE_INPUTTED]), FnKinds_1.FnKinds.action);\n        return new RpcValueFn_1.RpcValueFn(func, [new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, id)]);\n    }\n    deserializeAddBatches() {\n        const batchType = this.input.readU8();\n        let enumStruct;\n        if (batchType === 0) {\n            enumStruct = new ScValueStruct_1.ScValueStruct(\"input_mask\", new Map());\n        }\n        else {\n            enumStruct = new ScValueStruct_1.ScValueStruct(\"triple\", new Map());\n        }\n        const batchEnum = new ScValueEnum_1.ScValueEnum(\"BatchType\", enumStruct);\n        const batchId = new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.i32, this.input.readI32());\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.ADD_BATCHES]), FnKinds_1.FnKinds.action);\n        return new RpcValueFn_1.RpcValueFn(func, [batchEnum, batchId]);\n    }\n    deserializeExtendZkComputation() {\n        const msPerGasNumerator = new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.u64, this.input.readU64());\n        const msPerGasDenominator = new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.u64, this.input.readU64());\n        const minExtension = new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.u64, this.input.readU64());\n        const durationInMillis = new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.u64, this.input.readU64());\n        const func = this.getRealBinderInvocation(Buffer.from([RealBinderInvocationReader.EXTEND_ZK_COMPUTATION]), FnKinds_1.FnKinds.action);\n        return new RpcValueFn_1.RpcValueFn(func, [\n            msPerGasNumerator,\n            msPerGasDenominator,\n            minExtension,\n            durationInMillis,\n        ]);\n    }\n    readSecretInput() {\n        switch (this.input.readU8()) {\n            case RealBinderInvocationReader.ZERO_KNOWLEDGE_INPUT_ON_CHAIN:\n                return this.deserializeZeroKnowledgeInputOnChain(false);\n            case RealBinderInvocationReader.ZERO_KNOWLEDGE_INPUT_OFF_CHAIN:\n                return this.deserializeZeroKnowledgeInputOffChain(false);\n            default:\n                throw new Error(\"Invocation was not a secret input invocation.\");\n        }\n    }\n    readRemainingAsListOfBytes() {\n        const remaining = this.input.readRemaining();\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        return Array.from(remaining).map((val, _) => {\n            return new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.u8, val);\n        });\n    }\n    getRealBinderInvocation(shortname, kind) {\n        const func = RealBinderInvocationReader.REAL_BINDER.contract.getFunction(shortname, kind);\n        if (func !== undefined) {\n            return func;\n        }\n        return new FnAbi_1.FnAbi(kind, \"Unknown Invocation\", shortname, []);\n    }\n}\nexports.RealBinderInvocationReader = RealBinderInvocationReader;\nRealBinderInvocationReader.REAL_BINDER = new AbiParser_1.AbiParser(RealBinderInvocationDeserialization_1.REAL_BINDER_ABI).parseAbi();\nRealBinderInvocationReader.COMMIT_RESULT_VARIABLE = 0x00;\nRealBinderInvocationReader.ON_CHAIN_OUTPUT = 0x01;\nRealBinderInvocationReader.UNABLE_TO_CALCULATE = 0x02;\nRealBinderInvocationReader.OPEN_MASKED_INPUT = 0x03;\nRealBinderInvocationReader.ZERO_KNOWLEDGE_INPUT_OFF_CHAIN = 0x04;\nRealBinderInvocationReader.ZERO_KNOWLEDGE_INPUT_ON_CHAIN = 0x05;\nRealBinderInvocationReader.REJECT_INPUT = 0x06;\nRealBinderInvocationReader.ZK_OPEN_INVOCATION = 0x09;\nRealBinderInvocationReader.ADD_ATTESTATION_SIGNATURE = 0x0a;\nRealBinderInvocationReader.GET_COMPUTATION_DEADLINE = 0x0b;\nRealBinderInvocationReader.ON_COMPUTE_COMPLETE = 0x0c;\nRealBinderInvocationReader.ON_VARIABLES_OPENED = 0x0d;\nRealBinderInvocationReader.ON_ATTESTATION_COMPLETE = 0x0e;\nRealBinderInvocationReader.ON_VARIABLE_INPUTTED = 0x0f;\nRealBinderInvocationReader.ADD_BATCHES = 0x12;\nRealBinderInvocationReader.EXTEND_ZK_COMPUTATION = 0x13;\n//# sourceMappingURL=RealBinderInvocationReader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RealBinderInvocationReader.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcReader.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcReader.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RpcReader = void 0;\nconst AbiByteInput_1 = __webpack_require__(/*! ../abistreams/AbiByteInput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteInput.js\");\nconst AbstractReader_1 = __webpack_require__(/*! ../AbstractReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/AbstractReader.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nconst RpcValueFn_1 = __webpack_require__(/*! ./RpcValueFn */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcValueFn.js\");\nconst RealBinderInvocationReader_1 = __webpack_require__(/*! ./RealBinderInvocationReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RealBinderInvocationReader.js\");\nclass RpcReader extends AbstractReader_1.AbstractReader {\n    constructor(input, fileAbi, kind) {\n        let byteInput;\n        if (\"length\" in input) {\n            byteInput = new bitmanipulation_ts_1.BigEndianByteInput(input);\n        }\n        else {\n            byteInput = new bitmanipulation_ts_1.BigEndianByteInput(input.readRemaining());\n        }\n        super(new AbiByteInput_1.AbiByteInput(byteInput), fileAbi.contract.namedTypes);\n        this.fileAbi = fileAbi;\n        this.kind = kind;\n    }\n    readRpc() {\n        if (this.fileAbi.contract.isZk()) {\n            const realBinderReader = new RealBinderInvocationReader_1.RealBinderInvocationReader(this.input, this.fileAbi, this);\n            return realBinderReader.readRpc();\n        }\n        else {\n            return this.readPublicInvocation();\n        }\n    }\n    readSecretInputRpc() {\n        if (this.fileAbi.contract.isZk()) {\n            const realBinderReader = new RealBinderInvocationReader_1.RealBinderInvocationReader(this.input, this.fileAbi, this);\n            return realBinderReader.readSecretInput();\n        }\n        else {\n            throw Error(\"Cannot read Secret input for non zk contracts\");\n        }\n    }\n    readPublicInvocation() {\n        const shortname = this.readShortname();\n        const action = this.fileAbi.contract.getFunction(shortname, this.kind);\n        if (action === undefined) {\n            throw Error(`No action with shortname ${shortname.toString(\"hex\")}`);\n        }\n        return new RpcValueFn_1.RpcValueFn(action, action.arguments.map((arg) => this.readGeneric(arg.type)));\n    }\n    parseLeb128() {\n        const bufferWriter = new bitmanipulation_ts_1.BigEndianByteOutput();\n        for (let i = 0; i < 5; i++) {\n            const currentByte = this.input.readU8();\n            bufferWriter.writeU8(currentByte);\n            if (currentByte < 128) {\n                return bufferWriter.toBuffer();\n            }\n        }\n        throw new Error(\"Invalid LEB128 sequence, RPC header must be a valid 32-bit LEB128 encoded int (max 5 bytes)\");\n    }\n    readMap() {\n        throw new Error(\"Type Map is not supported in rpc\");\n    }\n    readSet() {\n        throw new Error(\"Type Set is not supported in rpc\");\n    }\n    readAvlTreeMap() {\n        throw new Error(\"Type AvlTreeMap is not supported in rpc\");\n    }\n    readShortname() {\n        let shortname;\n        if (this.fileAbi.format().shortnameType === Abi_1.ShortnameType.leb128) {\n            shortname = this.parseLeb128();\n        }\n        else {\n            shortname = this.input.readBytes(this.fileAbi.format().shortnameLength);\n        }\n        return shortname;\n    }\n}\nexports.RpcReader = RpcReader;\n//# sourceMappingURL=RpcReader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcnBjL1JwY1JlYWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakIsdUJBQXVCLG1CQUFPLENBQUMseUlBQTRCO0FBQzNELHlCQUF5QixtQkFBTyxDQUFDLHVIQUFtQjtBQUNwRCxjQUFjLG1CQUFPLENBQUMsNkdBQWM7QUFDcEMsNkJBQTZCLG1CQUFPLENBQUMsaUlBQW1DO0FBQ3hFLHFCQUFxQixtQkFBTyxDQUFDLGtIQUFjO0FBQzNDLHFDQUFxQyxtQkFBTyxDQUFDLGtKQUE4QjtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELDBCQUEwQjtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLE9BQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi9ycGMvUnBjUmVhZGVyLmpzP2IzYTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJwY1JlYWRlciA9IHZvaWQgMDtcbmNvbnN0IEFiaUJ5dGVJbnB1dF8xID0gcmVxdWlyZShcIi4uL2FiaXN0cmVhbXMvQWJpQnl0ZUlucHV0XCIpO1xuY29uc3QgQWJzdHJhY3RSZWFkZXJfMSA9IHJlcXVpcmUoXCIuLi9BYnN0cmFjdFJlYWRlclwiKTtcbmNvbnN0IEFiaV8xID0gcmVxdWlyZShcIi4uL3R5cGVzL0FiaVwiKTtcbmNvbnN0IGJpdG1hbmlwdWxhdGlvbl90c18xID0gcmVxdWlyZShcIkBzZWNhdGEtcHVibGljL2JpdG1hbmlwdWxhdGlvbi10c1wiKTtcbmNvbnN0IFJwY1ZhbHVlRm5fMSA9IHJlcXVpcmUoXCIuL1JwY1ZhbHVlRm5cIik7XG5jb25zdCBSZWFsQmluZGVySW52b2NhdGlvblJlYWRlcl8xID0gcmVxdWlyZShcIi4vUmVhbEJpbmRlckludm9jYXRpb25SZWFkZXJcIik7XG5jbGFzcyBScGNSZWFkZXIgZXh0ZW5kcyBBYnN0cmFjdFJlYWRlcl8xLkFic3RyYWN0UmVhZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCwgZmlsZUFiaSwga2luZCkge1xuICAgICAgICBsZXQgYnl0ZUlucHV0O1xuICAgICAgICBpZiAoXCJsZW5ndGhcIiBpbiBpbnB1dCkge1xuICAgICAgICAgICAgYnl0ZUlucHV0ID0gbmV3IGJpdG1hbmlwdWxhdGlvbl90c18xLkJpZ0VuZGlhbkJ5dGVJbnB1dChpbnB1dCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBieXRlSW5wdXQgPSBuZXcgYml0bWFuaXB1bGF0aW9uX3RzXzEuQmlnRW5kaWFuQnl0ZUlucHV0KGlucHV0LnJlYWRSZW1haW5pbmcoKSk7XG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIobmV3IEFiaUJ5dGVJbnB1dF8xLkFiaUJ5dGVJbnB1dChieXRlSW5wdXQpLCBmaWxlQWJpLmNvbnRyYWN0Lm5hbWVkVHlwZXMpO1xuICAgICAgICB0aGlzLmZpbGVBYmkgPSBmaWxlQWJpO1xuICAgICAgICB0aGlzLmtpbmQgPSBraW5kO1xuICAgIH1cbiAgICByZWFkUnBjKCkge1xuICAgICAgICBpZiAodGhpcy5maWxlQWJpLmNvbnRyYWN0LmlzWmsoKSkge1xuICAgICAgICAgICAgY29uc3QgcmVhbEJpbmRlclJlYWRlciA9IG5ldyBSZWFsQmluZGVySW52b2NhdGlvblJlYWRlcl8xLlJlYWxCaW5kZXJJbnZvY2F0aW9uUmVhZGVyKHRoaXMuaW5wdXQsIHRoaXMuZmlsZUFiaSwgdGhpcyk7XG4gICAgICAgICAgICByZXR1cm4gcmVhbEJpbmRlclJlYWRlci5yZWFkUnBjKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZWFkUHVibGljSW52b2NhdGlvbigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlYWRTZWNyZXRJbnB1dFJwYygpIHtcbiAgICAgICAgaWYgKHRoaXMuZmlsZUFiaS5jb250cmFjdC5pc1prKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlYWxCaW5kZXJSZWFkZXIgPSBuZXcgUmVhbEJpbmRlckludm9jYXRpb25SZWFkZXJfMS5SZWFsQmluZGVySW52b2NhdGlvblJlYWRlcih0aGlzLmlucHV0LCB0aGlzLmZpbGVBYmksIHRoaXMpO1xuICAgICAgICAgICAgcmV0dXJuIHJlYWxCaW5kZXJSZWFkZXIucmVhZFNlY3JldElucHV0KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIkNhbm5vdCByZWFkIFNlY3JldCBpbnB1dCBmb3Igbm9uIHprIGNvbnRyYWN0c1wiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZWFkUHVibGljSW52b2NhdGlvbigpIHtcbiAgICAgICAgY29uc3Qgc2hvcnRuYW1lID0gdGhpcy5yZWFkU2hvcnRuYW1lKCk7XG4gICAgICAgIGNvbnN0IGFjdGlvbiA9IHRoaXMuZmlsZUFiaS5jb250cmFjdC5nZXRGdW5jdGlvbihzaG9ydG5hbWUsIHRoaXMua2luZCk7XG4gICAgICAgIGlmIChhY3Rpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYE5vIGFjdGlvbiB3aXRoIHNob3J0bmFtZSAke3Nob3J0bmFtZS50b1N0cmluZyhcImhleFwiKX1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFJwY1ZhbHVlRm5fMS5ScGNWYWx1ZUZuKGFjdGlvbiwgYWN0aW9uLmFyZ3VtZW50cy5tYXAoKGFyZykgPT4gdGhpcy5yZWFkR2VuZXJpYyhhcmcudHlwZSkpKTtcbiAgICB9XG4gICAgcGFyc2VMZWIxMjgoKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlcldyaXRlciA9IG5ldyBiaXRtYW5pcHVsYXRpb25fdHNfMS5CaWdFbmRpYW5CeXRlT3V0cHV0KCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNTsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50Qnl0ZSA9IHRoaXMuaW5wdXQucmVhZFU4KCk7XG4gICAgICAgICAgICBidWZmZXJXcml0ZXIud3JpdGVVOChjdXJyZW50Qnl0ZSk7XG4gICAgICAgICAgICBpZiAoY3VycmVudEJ5dGUgPCAxMjgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYnVmZmVyV3JpdGVyLnRvQnVmZmVyKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBMRUIxMjggc2VxdWVuY2UsIFJQQyBoZWFkZXIgbXVzdCBiZSBhIHZhbGlkIDMyLWJpdCBMRUIxMjggZW5jb2RlZCBpbnQgKG1heCA1IGJ5dGVzKVwiKTtcbiAgICB9XG4gICAgcmVhZE1hcCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZSBNYXAgaXMgbm90IHN1cHBvcnRlZCBpbiBycGNcIik7XG4gICAgfVxuICAgIHJlYWRTZXQoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlR5cGUgU2V0IGlzIG5vdCBzdXBwb3J0ZWQgaW4gcnBjXCIpO1xuICAgIH1cbiAgICByZWFkQXZsVHJlZU1hcCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZSBBdmxUcmVlTWFwIGlzIG5vdCBzdXBwb3J0ZWQgaW4gcnBjXCIpO1xuICAgIH1cbiAgICByZWFkU2hvcnRuYW1lKCkge1xuICAgICAgICBsZXQgc2hvcnRuYW1lO1xuICAgICAgICBpZiAodGhpcy5maWxlQWJpLmZvcm1hdCgpLnNob3J0bmFtZVR5cGUgPT09IEFiaV8xLlNob3J0bmFtZVR5cGUubGViMTI4KSB7XG4gICAgICAgICAgICBzaG9ydG5hbWUgPSB0aGlzLnBhcnNlTGViMTI4KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzaG9ydG5hbWUgPSB0aGlzLmlucHV0LnJlYWRCeXRlcyh0aGlzLmZpbGVBYmkuZm9ybWF0KCkuc2hvcnRuYW1lTGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2hvcnRuYW1lO1xuICAgIH1cbn1cbmV4cG9ydHMuUnBjUmVhZGVyID0gUnBjUmVhZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UnBjUmVhZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcReader.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcValueFn.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcValueFn.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RpcValueFn = void 0;\nclass RpcValueFn {\n    constructor(fnAbi, argumentValues) {\n        this.fnAbi = fnAbi;\n        this.arguments = argumentValues;\n    }\n    size() {\n        return this.arguments.length;\n    }\n    get(index) {\n        return this.arguments[index];\n    }\n}\nexports.RpcValueFn = RpcValueFn;\n//# sourceMappingURL=RpcValueFn.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vcnBjL1JwY1ZhbHVlRm4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3JwYy9ScGNWYWx1ZUZuLmpzP2MwYmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlJwY1ZhbHVlRm4gPSB2b2lkIDA7XG5jbGFzcyBScGNWYWx1ZUZuIHtcbiAgICBjb25zdHJ1Y3RvcihmbkFiaSwgYXJndW1lbnRWYWx1ZXMpIHtcbiAgICAgICAgdGhpcy5mbkFiaSA9IGZuQWJpO1xuICAgICAgICB0aGlzLmFyZ3VtZW50cyA9IGFyZ3VtZW50VmFsdWVzO1xuICAgIH1cbiAgICBzaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hcmd1bWVudHMubGVuZ3RoO1xuICAgIH1cbiAgICBnZXQoaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXJndW1lbnRzW2luZGV4XTtcbiAgICB9XG59XG5leHBvcnRzLlJwY1ZhbHVlRm4gPSBScGNWYWx1ZUZuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UnBjVmFsdWVGbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/rpc/RpcValueFn.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/RustSyntaxStatePrinter.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/state/RustSyntaxStatePrinter.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RustSyntaxStatePrinter = void 0;\nconst ScValueStruct_1 = __webpack_require__(/*! ../value/ScValueStruct */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueStruct.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass RustSyntaxStatePrinter {\n    static printState(state) {\n        const builder = [];\n        builder.push(\"#[state]\\n\");\n        builder.push(state.name + \" {\\n\");\n        state.fieldsMap.forEach((value, fieldname) => {\n            this.buildField(builder, fieldname, value, 1);\n            builder.push(\",\\n\");\n        });\n        builder.push(\"}\");\n        return builder.join(\"\");\n    }\n    static buildIndent(builder, indentLevel) {\n        builder.push(\"    \".repeat(indentLevel));\n    }\n    static buildField(builder, fieldName, stateValue, indentLevel) {\n        this.buildIndent(builder, indentLevel);\n        builder.push(fieldName + \": \");\n        this.buildStateValue(builder, stateValue, indentLevel);\n    }\n    static buildStateValue(builder, stateValue, indentLevel) {\n        const typeIndex = stateValue.getType();\n        if (typeIndex === Abi_1.TypeIndex.Named) {\n            this.buildNamed(builder, stateValue, indentLevel);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Vec) {\n            this.buildVec(builder, stateValue.vecValue(), indentLevel);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Option) {\n            this.buildOption(builder, stateValue.optionValue(), indentLevel);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Map) {\n            this.buildMap(builder, stateValue.mapValue(), indentLevel);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Set) {\n            this.buildSet(builder, stateValue.setValue(), indentLevel);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.SizedArray) {\n            this.buildArray(builder, stateValue.arrayValue(), indentLevel);\n        }\n        else if (typeIndex === Abi_1.TypeIndex.bool) {\n            builder.push(\"\" + stateValue.boolValue());\n        }\n        else if (typeIndex === Abi_1.TypeIndex.Address) {\n            builder.push('\"');\n            builder.push(stateValue.addressValue().value.toString(\"hex\"));\n            builder.push('\"');\n        }\n        else if (typeIndex === Abi_1.TypeIndex.String) {\n            builder.push('\"');\n            builder.push(stateValue.stringValue());\n            builder.push('\".to_string()');\n        }\n        else {\n            builder.push(stateValue.asBN().toString());\n            builder.push(Abi_1.TypeIndex[typeIndex]);\n        }\n    }\n    static buildNamed(builder, value, indentLevel) {\n        if (value instanceof ScValueStruct_1.ScValueStruct) {\n            this.buildStruct(builder, value.structValue(), indentLevel);\n        }\n        else {\n            this.buildEnum(builder, value.enumValue(), indentLevel);\n        }\n    }\n    static buildEnum(builder, enumValue, indentLevel) {\n        this.buildStruct(builder, enumValue.item, indentLevel);\n    }\n    static buildStruct(builder, struct, indentLevel) {\n        builder.push(struct.name);\n        builder.push(\" {\");\n        const ite = struct.fieldsMap.entries();\n        let kv = ite.next();\n        while (kv.done === false) {\n            const [k, v] = kv.value;\n            builder.push(\"\\n\");\n            this.buildField(builder, k, v, indentLevel + 1);\n            kv = ite.next();\n            if (kv.done === false) {\n                builder.push(\",\");\n            }\n        }\n        builder.push(\"\\n\");\n        this.buildIndent(builder, indentLevel);\n        builder.push(\"}\");\n    }\n    static buildVec(builder, value, indentLevel) {\n        builder.push(\"vec![\");\n        this.buildArrayInternal(builder, value, indentLevel);\n        builder.push(\"]\");\n    }\n    static buildSet(builder, value, indentLevel) {\n        builder.push(\"BTreeSet::from([\");\n        this.buildArrayInternal(builder, value, indentLevel);\n        builder.push(\"])\");\n    }\n    static buildArray(builder, value, indentLevel) {\n        builder.push(\"[\");\n        this.buildArrayInternal(builder, value, indentLevel);\n        builder.push(\"]\");\n    }\n    static buildArrayInternal(builder, vec, indentLevel) {\n        const vecIndentLevel = indentLevel + 1;\n        for (let i = 0; i < vec.size(); i++) {\n            builder.push(\"\\n\");\n            this.buildIndent(builder, vecIndentLevel);\n            this.buildStateValue(builder, vec.get(i), vecIndentLevel);\n            if (i !== vec.size() - 1) {\n                builder.push(\",\");\n            }\n        }\n        builder.push(\"\\n\");\n        this.buildIndent(builder, indentLevel);\n    }\n    static buildOption(builder, option, indentLevel) {\n        if (option.innerValue !== null) {\n            builder.push(\"Some(\");\n            this.buildStateValue(builder, option.innerValue, indentLevel);\n            builder.push(\")\");\n        }\n        else {\n            builder.push(\"None\");\n        }\n    }\n    static buildMap(builder, map, indentLevel) {\n        builder.push(\"BTreeMap::from([\");\n        const ite = map.map.entries();\n        let kv = ite.next();\n        const mapIndentLevel = indentLevel + 1;\n        while (kv.done === false) {\n            const [k, v] = kv.value;\n            builder.push(\"\\n\");\n            this.buildIndent(builder, mapIndentLevel);\n            builder.push(\"(\");\n            this.buildStateValue(builder, k, mapIndentLevel);\n            builder.push(\", \");\n            this.buildStateValue(builder, v, mapIndentLevel);\n            builder.push(\")\");\n            kv = ite.next();\n            if (kv.done === false) {\n                builder.push(\",\");\n            }\n        }\n        builder.push(\"\\n\");\n        this.buildIndent(builder, indentLevel);\n        builder.push(\"])\");\n    }\n}\nexports.RustSyntaxStatePrinter = RustSyntaxStatePrinter;\n//# sourceMappingURL=RustSyntaxStatePrinter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vc3RhdGUvUnVzdFN5bnRheFN0YXRlUHJpbnRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUIsd0JBQXdCLG1CQUFPLENBQUMsaUlBQXdCO0FBQ3hELGNBQWMsbUJBQU8sQ0FBQyw2R0FBYztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3N0YXRlL1J1c3RTeW50YXhTdGF0ZVByaW50ZXIuanM/MGYwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUnVzdFN5bnRheFN0YXRlUHJpbnRlciA9IHZvaWQgMDtcbmNvbnN0IFNjVmFsdWVTdHJ1Y3RfMSA9IHJlcXVpcmUoXCIuLi92YWx1ZS9TY1ZhbHVlU3RydWN0XCIpO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY2xhc3MgUnVzdFN5bnRheFN0YXRlUHJpbnRlciB7XG4gICAgc3RhdGljIHByaW50U3RhdGUoc3RhdGUpIHtcbiAgICAgICAgY29uc3QgYnVpbGRlciA9IFtdO1xuICAgICAgICBidWlsZGVyLnB1c2goXCIjW3N0YXRlXVxcblwiKTtcbiAgICAgICAgYnVpbGRlci5wdXNoKHN0YXRlLm5hbWUgKyBcIiB7XFxuXCIpO1xuICAgICAgICBzdGF0ZS5maWVsZHNNYXAuZm9yRWFjaCgodmFsdWUsIGZpZWxkbmFtZSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5idWlsZEZpZWxkKGJ1aWxkZXIsIGZpZWxkbmFtZSwgdmFsdWUsIDEpO1xuICAgICAgICAgICAgYnVpbGRlci5wdXNoKFwiLFxcblwiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGJ1aWxkZXIucHVzaChcIn1cIik7XG4gICAgICAgIHJldHVybiBidWlsZGVyLmpvaW4oXCJcIik7XG4gICAgfVxuICAgIHN0YXRpYyBidWlsZEluZGVudChidWlsZGVyLCBpbmRlbnRMZXZlbCkge1xuICAgICAgICBidWlsZGVyLnB1c2goXCIgICAgXCIucmVwZWF0KGluZGVudExldmVsKSk7XG4gICAgfVxuICAgIHN0YXRpYyBidWlsZEZpZWxkKGJ1aWxkZXIsIGZpZWxkTmFtZSwgc3RhdGVWYWx1ZSwgaW5kZW50TGV2ZWwpIHtcbiAgICAgICAgdGhpcy5idWlsZEluZGVudChidWlsZGVyLCBpbmRlbnRMZXZlbCk7XG4gICAgICAgIGJ1aWxkZXIucHVzaChmaWVsZE5hbWUgKyBcIjogXCIpO1xuICAgICAgICB0aGlzLmJ1aWxkU3RhdGVWYWx1ZShidWlsZGVyLCBzdGF0ZVZhbHVlLCBpbmRlbnRMZXZlbCk7XG4gICAgfVxuICAgIHN0YXRpYyBidWlsZFN0YXRlVmFsdWUoYnVpbGRlciwgc3RhdGVWYWx1ZSwgaW5kZW50TGV2ZWwpIHtcbiAgICAgICAgY29uc3QgdHlwZUluZGV4ID0gc3RhdGVWYWx1ZS5nZXRUeXBlKCk7XG4gICAgICAgIGlmICh0eXBlSW5kZXggPT09IEFiaV8xLlR5cGVJbmRleC5OYW1lZCkge1xuICAgICAgICAgICAgdGhpcy5idWlsZE5hbWVkKGJ1aWxkZXIsIHN0YXRlVmFsdWUsIGluZGVudExldmVsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlSW5kZXggPT09IEFiaV8xLlR5cGVJbmRleC5WZWMpIHtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRWZWMoYnVpbGRlciwgc3RhdGVWYWx1ZS52ZWNWYWx1ZSgpLCBpbmRlbnRMZXZlbCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZUluZGV4ID09PSBBYmlfMS5UeXBlSW5kZXguT3B0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmJ1aWxkT3B0aW9uKGJ1aWxkZXIsIHN0YXRlVmFsdWUub3B0aW9uVmFsdWUoKSwgaW5kZW50TGV2ZWwpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVJbmRleCA9PT0gQWJpXzEuVHlwZUluZGV4Lk1hcCkge1xuICAgICAgICAgICAgdGhpcy5idWlsZE1hcChidWlsZGVyLCBzdGF0ZVZhbHVlLm1hcFZhbHVlKCksIGluZGVudExldmVsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlSW5kZXggPT09IEFiaV8xLlR5cGVJbmRleC5TZXQpIHtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRTZXQoYnVpbGRlciwgc3RhdGVWYWx1ZS5zZXRWYWx1ZSgpLCBpbmRlbnRMZXZlbCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZUluZGV4ID09PSBBYmlfMS5UeXBlSW5kZXguU2l6ZWRBcnJheSkge1xuICAgICAgICAgICAgdGhpcy5idWlsZEFycmF5KGJ1aWxkZXIsIHN0YXRlVmFsdWUuYXJyYXlWYWx1ZSgpLCBpbmRlbnRMZXZlbCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZUluZGV4ID09PSBBYmlfMS5UeXBlSW5kZXguYm9vbCkge1xuICAgICAgICAgICAgYnVpbGRlci5wdXNoKFwiXCIgKyBzdGF0ZVZhbHVlLmJvb2xWYWx1ZSgpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlSW5kZXggPT09IEFiaV8xLlR5cGVJbmRleC5BZGRyZXNzKSB7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goJ1wiJyk7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goc3RhdGVWYWx1ZS5hZGRyZXNzVmFsdWUoKS52YWx1ZS50b1N0cmluZyhcImhleFwiKSk7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goJ1wiJyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZUluZGV4ID09PSBBYmlfMS5UeXBlSW5kZXguU3RyaW5nKSB7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goJ1wiJyk7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goc3RhdGVWYWx1ZS5zdHJpbmdWYWx1ZSgpKTtcbiAgICAgICAgICAgIGJ1aWxkZXIucHVzaCgnXCIudG9fc3RyaW5nKCknKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGJ1aWxkZXIucHVzaChzdGF0ZVZhbHVlLmFzQk4oKS50b1N0cmluZygpKTtcbiAgICAgICAgICAgIGJ1aWxkZXIucHVzaChBYmlfMS5UeXBlSW5kZXhbdHlwZUluZGV4XSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGJ1aWxkTmFtZWQoYnVpbGRlciwgdmFsdWUsIGluZGVudExldmVsKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFNjVmFsdWVTdHJ1Y3RfMS5TY1ZhbHVlU3RydWN0KSB7XG4gICAgICAgICAgICB0aGlzLmJ1aWxkU3RydWN0KGJ1aWxkZXIsIHZhbHVlLnN0cnVjdFZhbHVlKCksIGluZGVudExldmVsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRFbnVtKGJ1aWxkZXIsIHZhbHVlLmVudW1WYWx1ZSgpLCBpbmRlbnRMZXZlbCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGJ1aWxkRW51bShidWlsZGVyLCBlbnVtVmFsdWUsIGluZGVudExldmVsKSB7XG4gICAgICAgIHRoaXMuYnVpbGRTdHJ1Y3QoYnVpbGRlciwgZW51bVZhbHVlLml0ZW0sIGluZGVudExldmVsKTtcbiAgICB9XG4gICAgc3RhdGljIGJ1aWxkU3RydWN0KGJ1aWxkZXIsIHN0cnVjdCwgaW5kZW50TGV2ZWwpIHtcbiAgICAgICAgYnVpbGRlci5wdXNoKHN0cnVjdC5uYW1lKTtcbiAgICAgICAgYnVpbGRlci5wdXNoKFwiIHtcIik7XG4gICAgICAgIGNvbnN0IGl0ZSA9IHN0cnVjdC5maWVsZHNNYXAuZW50cmllcygpO1xuICAgICAgICBsZXQga3YgPSBpdGUubmV4dCgpO1xuICAgICAgICB3aGlsZSAoa3YuZG9uZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGNvbnN0IFtrLCB2XSA9IGt2LnZhbHVlO1xuICAgICAgICAgICAgYnVpbGRlci5wdXNoKFwiXFxuXCIpO1xuICAgICAgICAgICAgdGhpcy5idWlsZEZpZWxkKGJ1aWxkZXIsIGssIHYsIGluZGVudExldmVsICsgMSk7XG4gICAgICAgICAgICBrdiA9IGl0ZS5uZXh0KCk7XG4gICAgICAgICAgICBpZiAoa3YuZG9uZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBidWlsZGVyLnB1c2goXCIsXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGJ1aWxkZXIucHVzaChcIlxcblwiKTtcbiAgICAgICAgdGhpcy5idWlsZEluZGVudChidWlsZGVyLCBpbmRlbnRMZXZlbCk7XG4gICAgICAgIGJ1aWxkZXIucHVzaChcIn1cIik7XG4gICAgfVxuICAgIHN0YXRpYyBidWlsZFZlYyhidWlsZGVyLCB2YWx1ZSwgaW5kZW50TGV2ZWwpIHtcbiAgICAgICAgYnVpbGRlci5wdXNoKFwidmVjIVtcIik7XG4gICAgICAgIHRoaXMuYnVpbGRBcnJheUludGVybmFsKGJ1aWxkZXIsIHZhbHVlLCBpbmRlbnRMZXZlbCk7XG4gICAgICAgIGJ1aWxkZXIucHVzaChcIl1cIik7XG4gICAgfVxuICAgIHN0YXRpYyBidWlsZFNldChidWlsZGVyLCB2YWx1ZSwgaW5kZW50TGV2ZWwpIHtcbiAgICAgICAgYnVpbGRlci5wdXNoKFwiQlRyZWVTZXQ6OmZyb20oW1wiKTtcbiAgICAgICAgdGhpcy5idWlsZEFycmF5SW50ZXJuYWwoYnVpbGRlciwgdmFsdWUsIGluZGVudExldmVsKTtcbiAgICAgICAgYnVpbGRlci5wdXNoKFwiXSlcIik7XG4gICAgfVxuICAgIHN0YXRpYyBidWlsZEFycmF5KGJ1aWxkZXIsIHZhbHVlLCBpbmRlbnRMZXZlbCkge1xuICAgICAgICBidWlsZGVyLnB1c2goXCJbXCIpO1xuICAgICAgICB0aGlzLmJ1aWxkQXJyYXlJbnRlcm5hbChidWlsZGVyLCB2YWx1ZSwgaW5kZW50TGV2ZWwpO1xuICAgICAgICBidWlsZGVyLnB1c2goXCJdXCIpO1xuICAgIH1cbiAgICBzdGF0aWMgYnVpbGRBcnJheUludGVybmFsKGJ1aWxkZXIsIHZlYywgaW5kZW50TGV2ZWwpIHtcbiAgICAgICAgY29uc3QgdmVjSW5kZW50TGV2ZWwgPSBpbmRlbnRMZXZlbCArIDE7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmVjLnNpemUoKTsgaSsrKSB7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goXCJcXG5cIik7XG4gICAgICAgICAgICB0aGlzLmJ1aWxkSW5kZW50KGJ1aWxkZXIsIHZlY0luZGVudExldmVsKTtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRTdGF0ZVZhbHVlKGJ1aWxkZXIsIHZlYy5nZXQoaSksIHZlY0luZGVudExldmVsKTtcbiAgICAgICAgICAgIGlmIChpICE9PSB2ZWMuc2l6ZSgpIC0gMSkge1xuICAgICAgICAgICAgICAgIGJ1aWxkZXIucHVzaChcIixcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYnVpbGRlci5wdXNoKFwiXFxuXCIpO1xuICAgICAgICB0aGlzLmJ1aWxkSW5kZW50KGJ1aWxkZXIsIGluZGVudExldmVsKTtcbiAgICB9XG4gICAgc3RhdGljIGJ1aWxkT3B0aW9uKGJ1aWxkZXIsIG9wdGlvbiwgaW5kZW50TGV2ZWwpIHtcbiAgICAgICAgaWYgKG9wdGlvbi5pbm5lclZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goXCJTb21lKFwiKTtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRTdGF0ZVZhbHVlKGJ1aWxkZXIsIG9wdGlvbi5pbm5lclZhbHVlLCBpbmRlbnRMZXZlbCk7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goXCIpXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYnVpbGRlci5wdXNoKFwiTm9uZVwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgYnVpbGRNYXAoYnVpbGRlciwgbWFwLCBpbmRlbnRMZXZlbCkge1xuICAgICAgICBidWlsZGVyLnB1c2goXCJCVHJlZU1hcDo6ZnJvbShbXCIpO1xuICAgICAgICBjb25zdCBpdGUgPSBtYXAubWFwLmVudHJpZXMoKTtcbiAgICAgICAgbGV0IGt2ID0gaXRlLm5leHQoKTtcbiAgICAgICAgY29uc3QgbWFwSW5kZW50TGV2ZWwgPSBpbmRlbnRMZXZlbCArIDE7XG4gICAgICAgIHdoaWxlIChrdi5kb25lID09PSBmYWxzZSkge1xuICAgICAgICAgICAgY29uc3QgW2ssIHZdID0ga3YudmFsdWU7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goXCJcXG5cIik7XG4gICAgICAgICAgICB0aGlzLmJ1aWxkSW5kZW50KGJ1aWxkZXIsIG1hcEluZGVudExldmVsKTtcbiAgICAgICAgICAgIGJ1aWxkZXIucHVzaChcIihcIik7XG4gICAgICAgICAgICB0aGlzLmJ1aWxkU3RhdGVWYWx1ZShidWlsZGVyLCBrLCBtYXBJbmRlbnRMZXZlbCk7XG4gICAgICAgICAgICBidWlsZGVyLnB1c2goXCIsIFwiKTtcbiAgICAgICAgICAgIHRoaXMuYnVpbGRTdGF0ZVZhbHVlKGJ1aWxkZXIsIHYsIG1hcEluZGVudExldmVsKTtcbiAgICAgICAgICAgIGJ1aWxkZXIucHVzaChcIilcIik7XG4gICAgICAgICAgICBrdiA9IGl0ZS5uZXh0KCk7XG4gICAgICAgICAgICBpZiAoa3YuZG9uZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBidWlsZGVyLnB1c2goXCIsXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGJ1aWxkZXIucHVzaChcIlxcblwiKTtcbiAgICAgICAgdGhpcy5idWlsZEluZGVudChidWlsZGVyLCBpbmRlbnRMZXZlbCk7XG4gICAgICAgIGJ1aWxkZXIucHVzaChcIl0pXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuUnVzdFN5bnRheFN0YXRlUHJpbnRlciA9IFJ1c3RTeW50YXhTdGF0ZVByaW50ZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SdXN0U3ludGF4U3RhdGVQcmludGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/RustSyntaxStatePrinter.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/StateBuilder.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/state/StateBuilder.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StateBuilder = void 0;\nconst AbstractBuilder_1 = __webpack_require__(/*! ../builder/AbstractBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AbstractBuilder.js\");\nconst StructProducer_1 = __webpack_require__(/*! ../builder/StructProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/StructProducer.js\");\nconst AbiByteOutput_1 = __webpack_require__(/*! ../abistreams/AbiByteOutput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteOutput.js\");\nclass StateBuilder extends AbstractBuilder_1.AbstractBuilder {\n    constructor(contractAbi) {\n        var _a;\n        super(contractAbi, \"\", new StructProducer_1.StructProducer((_a = contractAbi === null || contractAbi === void 0 ? void 0 : contractAbi.getStateStruct()) !== null && _a !== void 0 ? _a : null, \"root\"));\n    }\n    getBytes() {\n        return AbiByteOutput_1.AbiByteOutput.serializeLittleEndian((out) => this.getAggregateProducer().write(out));\n    }\n}\nexports.StateBuilder = StateBuilder;\n//# sourceMappingURL=StateBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vc3RhdGUvU3RhdGVCdWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQiwwQkFBMEIsbUJBQU8sQ0FBQyx5SUFBNEI7QUFDOUQseUJBQXlCLG1CQUFPLENBQUMsdUlBQTJCO0FBQzVELHdCQUF3QixtQkFBTyxDQUFDLDJJQUE2QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi9zdGF0ZS9TdGF0ZUJ1aWxkZXIuanM/MTFjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3RhdGVCdWlsZGVyID0gdm9pZCAwO1xuY29uc3QgQWJzdHJhY3RCdWlsZGVyXzEgPSByZXF1aXJlKFwiLi4vYnVpbGRlci9BYnN0cmFjdEJ1aWxkZXJcIik7XG5jb25zdCBTdHJ1Y3RQcm9kdWNlcl8xID0gcmVxdWlyZShcIi4uL2J1aWxkZXIvU3RydWN0UHJvZHVjZXJcIik7XG5jb25zdCBBYmlCeXRlT3V0cHV0XzEgPSByZXF1aXJlKFwiLi4vYWJpc3RyZWFtcy9BYmlCeXRlT3V0cHV0XCIpO1xuY2xhc3MgU3RhdGVCdWlsZGVyIGV4dGVuZHMgQWJzdHJhY3RCdWlsZGVyXzEuQWJzdHJhY3RCdWlsZGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb250cmFjdEFiaSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHN1cGVyKGNvbnRyYWN0QWJpLCBcIlwiLCBuZXcgU3RydWN0UHJvZHVjZXJfMS5TdHJ1Y3RQcm9kdWNlcigoX2EgPSBjb250cmFjdEFiaSA9PT0gbnVsbCB8fCBjb250cmFjdEFiaSA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29udHJhY3RBYmkuZ2V0U3RhdGVTdHJ1Y3QoKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbnVsbCwgXCJyb290XCIpKTtcbiAgICB9XG4gICAgZ2V0Qnl0ZXMoKSB7XG4gICAgICAgIHJldHVybiBBYmlCeXRlT3V0cHV0XzEuQWJpQnl0ZU91dHB1dC5zZXJpYWxpemVMaXR0bGVFbmRpYW4oKG91dCkgPT4gdGhpcy5nZXRBZ2dyZWdhdGVQcm9kdWNlcigpLndyaXRlKG91dCkpO1xuICAgIH1cbn1cbmV4cG9ydHMuU3RhdGVCdWlsZGVyID0gU3RhdGVCdWlsZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RhdGVCdWlsZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/StateBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/StateReader.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/state/StateReader.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StateReader = void 0;\nconst AbiByteInput_1 = __webpack_require__(/*! ../abistreams/AbiByteInput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteInput.js\");\nconst AbstractReader_1 = __webpack_require__(/*! ../AbstractReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/AbstractReader.js\");\nconst HashMap_1 = __webpack_require__(/*! ../HashMap */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/HashMap.js\");\nconst ContractAbi_1 = __webpack_require__(/*! ../parser/ContractAbi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/ContractAbi.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nconst ScValueMap_1 = __webpack_require__(/*! ../value/ScValueMap */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueMap.js\");\nconst ScValueSet_1 = __webpack_require__(/*! ../value/ScValueSet */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSet.js\");\nconst ScValueAvlTreeMap_1 = __webpack_require__(/*! ../value/ScValueAvlTreeMap */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAvlTreeMap.js\");\nclass StateReader extends AbstractReader_1.AbstractReader {\n    constructor(input, contract, avlTrees) {\n        let byteInput;\n        if (\"length\" in input) {\n            byteInput = new bitmanipulation_ts_1.LittleEndianByteInput(input);\n        }\n        else {\n            byteInput = new bitmanipulation_ts_1.LittleEndianByteInput(input.readRemaining());\n        }\n        super(new AbiByteInput_1.AbiByteInput(byteInput), contract.namedTypes);\n        this.contract = contract;\n        if (Buffer.isBuffer(avlTrees)) {\n            this.avlTrees = StateReader.readAvlTrees(avlTrees);\n        }\n        else {\n            this.avlTrees = avlTrees;\n        }\n    }\n    readSet(spec) {\n        const length = this.input.readU32();\n        const vec = [];\n        for (let i = 0; i < length; i++) {\n            vec.push(this.readGeneric(spec.valueType));\n        }\n        return new ScValueSet_1.ScValueSet(vec);\n    }\n    readMap(spec) {\n        const stateMap = new HashMap_1.HashMap();\n        const length = this.input.readU32();\n        for (let i = 0; i < length; i++) {\n            const key = this.readGeneric(spec.keyType);\n            const value = this.readGeneric(spec.valueType);\n            stateMap.set(key, value);\n        }\n        return new ScValueMap_1.ScValueMap(stateMap);\n    }\n    readAvlTreeMap(typeSpec) {\n        const treeId = this.input.readI32();\n        if (this.avlTrees === undefined) {\n            return new ScValueAvlTreeMap_1.ScValueAvlTreeMap(treeId, null);\n        }\n        const tree = this.avlTrees.get(treeId);\n        if (tree === undefined) {\n            throw new Error(`Tried to read Avl Tree Map with tree id ${treeId}, but it didn't exist`);\n        }\n        const map = new HashMap_1.HashMap();\n        tree.forEach(([keyBytes, valueBytes]) => {\n            const key = new StateReader(keyBytes, this.contract, this.avlTrees).readGeneric(typeSpec.keyType);\n            const value = new StateReader(valueBytes, this.contract, this.avlTrees).readGeneric(typeSpec.valueType);\n            map.set(key, value);\n        });\n        return new ScValueAvlTreeMap_1.ScValueAvlTreeMap(treeId, map);\n    }\n    readState() {\n        const structRef = this.contract.stateType;\n        const typeSpec = this.namedTypes[structRef.index];\n        return this.readStruct(typeSpec);\n    }\n    readStateValue(spec) {\n        return this.readGeneric(spec);\n    }\n    static readAvlTrees(avlTrees) {\n        const type = {\n            typeIndex: Abi_1.TypeIndex.Map,\n            keyType: { typeIndex: Abi_1.TypeIndex.Option, valueType: { typeIndex: Abi_1.TypeIndex.i32 } },\n            valueType: {\n                typeIndex: Abi_1.TypeIndex.Option,\n                valueType: {\n                    typeIndex: Abi_1.TypeIndex.Option,\n                    valueType: {\n                        typeIndex: Abi_1.TypeIndex.Map,\n                        keyType: {\n                            typeIndex: Abi_1.TypeIndex.Option,\n                            valueType: {\n                                typeIndex: Abi_1.TypeIndex.Option,\n                                valueType: { typeIndex: Abi_1.TypeIndex.Vec, valueType: { typeIndex: Abi_1.TypeIndex.u8 } },\n                            },\n                        },\n                        valueType: {\n                            typeIndex: Abi_1.TypeIndex.Option,\n                            valueType: { typeIndex: Abi_1.TypeIndex.Vec, valueType: { typeIndex: Abi_1.TypeIndex.u8 } },\n                        },\n                    },\n                },\n            },\n        };\n        const contract = new ContractAbi_1.ContractAbi([], [], { typeIndex: Abi_1.TypeIndex.i32 });\n        const treeValue = new StateReader(avlTrees, contract).readGeneric(type);\n        const map = new Map();\n        /* eslint-disable @typescript-eslint/no-non-null-assertion */\n        treeValue\n            .mapValue()\n            .map.forEach((value, key) => map.set(key.optionValue().innerValue.asNumber(), StateReader.convertSingleTree(value)));\n        return map;\n    }\n    static convertSingleTree(singleTree) {\n        const list = [];\n        singleTree\n            .optionValue()\n            .innerValue.optionValue()\n            .innerValue.mapValue()\n            .map.forEach((value, key) => list.push([\n            key.optionValue().innerValue.optionValue().innerValue.vecU8Value(),\n            value.optionValue().innerValue.vecU8Value(),\n        ]));\n        return list;\n    }\n}\nexports.StateReader = StateReader;\n//# sourceMappingURL=StateReader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/state/StateReader.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/transaction/TransactionBuilder.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/transaction/TransactionBuilder.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TransactionBuilder = void 0;\nconst AbstractBuilder_1 = __webpack_require__(/*! ../builder/AbstractBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AbstractBuilder.js\");\nconst AbiParser_1 = __webpack_require__(/*! ../parser/AbiParser */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/AbiParser.js\");\nconst TransactionAndEventDeserialization_1 = __webpack_require__(/*! ../TransactionAndEventDeserialization */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/TransactionAndEventDeserialization.js\");\nconst StructProducer_1 = __webpack_require__(/*! ../builder/StructProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/StructProducer.js\");\nconst AbiByteOutput_1 = __webpack_require__(/*! ../abistreams/AbiByteOutput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteOutput.js\");\nclass TransactionBuilder extends AbstractBuilder_1.AbstractBuilder {\n    constructor(contractAbi, aggregateProducer) {\n        super(contractAbi, \"\", aggregateProducer);\n    }\n    static createTransactionBuilder() {\n        const transactionAbi = new AbiParser_1.AbiParser(TransactionAndEventDeserialization_1.TRANSACTION_AND_EVENT_ABI).parseAbi().contract;\n        const signedTransaction = transactionAbi.namedTypes.find((namedType) => namedType.name === \"SignedTransaction\");\n        return new TransactionBuilder(transactionAbi, new StructProducer_1.StructProducer(signedTransaction, \"root\"));\n    }\n    static createEventBuilder() {\n        const transactionAbi = new AbiParser_1.AbiParser(TransactionAndEventDeserialization_1.TRANSACTION_AND_EVENT_ABI).parseAbi().contract;\n        const signedTransaction = transactionAbi.namedTypes.find((namedType) => namedType.name === \"ExecutableEvent\");\n        return new TransactionBuilder(transactionAbi, new StructProducer_1.StructProducer(signedTransaction, \"root\"));\n    }\n    getBytes() {\n        return AbiByteOutput_1.AbiByteOutput.serializeBigEndian((out) => this.getAggregateProducer().write(out));\n    }\n}\nexports.TransactionBuilder = TransactionBuilder;\n//# sourceMappingURL=TransactionBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHJhbnNhY3Rpb24vVHJhbnNhY3Rpb25CdWlsZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQiwwQkFBMEIsbUJBQU8sQ0FBQyx5SUFBNEI7QUFDOUQsb0JBQW9CLG1CQUFPLENBQUMsMkhBQXFCO0FBQ2pELDZDQUE2QyxtQkFBTyxDQUFDLCtKQUF1QztBQUM1Rix5QkFBeUIsbUJBQU8sQ0FBQyx1SUFBMkI7QUFDNUQsd0JBQXdCLG1CQUFPLENBQUMsMklBQTZCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3RyYW5zYWN0aW9uL1RyYW5zYWN0aW9uQnVpbGRlci5qcz8xZDhkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UcmFuc2FjdGlvbkJ1aWxkZXIgPSB2b2lkIDA7XG5jb25zdCBBYnN0cmFjdEJ1aWxkZXJfMSA9IHJlcXVpcmUoXCIuLi9idWlsZGVyL0Fic3RyYWN0QnVpbGRlclwiKTtcbmNvbnN0IEFiaVBhcnNlcl8xID0gcmVxdWlyZShcIi4uL3BhcnNlci9BYmlQYXJzZXJcIik7XG5jb25zdCBUcmFuc2FjdGlvbkFuZEV2ZW50RGVzZXJpYWxpemF0aW9uXzEgPSByZXF1aXJlKFwiLi4vVHJhbnNhY3Rpb25BbmRFdmVudERlc2VyaWFsaXphdGlvblwiKTtcbmNvbnN0IFN0cnVjdFByb2R1Y2VyXzEgPSByZXF1aXJlKFwiLi4vYnVpbGRlci9TdHJ1Y3RQcm9kdWNlclwiKTtcbmNvbnN0IEFiaUJ5dGVPdXRwdXRfMSA9IHJlcXVpcmUoXCIuLi9hYmlzdHJlYW1zL0FiaUJ5dGVPdXRwdXRcIik7XG5jbGFzcyBUcmFuc2FjdGlvbkJ1aWxkZXIgZXh0ZW5kcyBBYnN0cmFjdEJ1aWxkZXJfMS5BYnN0cmFjdEJ1aWxkZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbnRyYWN0QWJpLCBhZ2dyZWdhdGVQcm9kdWNlcikge1xuICAgICAgICBzdXBlcihjb250cmFjdEFiaSwgXCJcIiwgYWdncmVnYXRlUHJvZHVjZXIpO1xuICAgIH1cbiAgICBzdGF0aWMgY3JlYXRlVHJhbnNhY3Rpb25CdWlsZGVyKCkge1xuICAgICAgICBjb25zdCB0cmFuc2FjdGlvbkFiaSA9IG5ldyBBYmlQYXJzZXJfMS5BYmlQYXJzZXIoVHJhbnNhY3Rpb25BbmRFdmVudERlc2VyaWFsaXphdGlvbl8xLlRSQU5TQUNUSU9OX0FORF9FVkVOVF9BQkkpLnBhcnNlQWJpKCkuY29udHJhY3Q7XG4gICAgICAgIGNvbnN0IHNpZ25lZFRyYW5zYWN0aW9uID0gdHJhbnNhY3Rpb25BYmkubmFtZWRUeXBlcy5maW5kKChuYW1lZFR5cGUpID0+IG5hbWVkVHlwZS5uYW1lID09PSBcIlNpZ25lZFRyYW5zYWN0aW9uXCIpO1xuICAgICAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uQnVpbGRlcih0cmFuc2FjdGlvbkFiaSwgbmV3IFN0cnVjdFByb2R1Y2VyXzEuU3RydWN0UHJvZHVjZXIoc2lnbmVkVHJhbnNhY3Rpb24sIFwicm9vdFwiKSk7XG4gICAgfVxuICAgIHN0YXRpYyBjcmVhdGVFdmVudEJ1aWxkZXIoKSB7XG4gICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uQWJpID0gbmV3IEFiaVBhcnNlcl8xLkFiaVBhcnNlcihUcmFuc2FjdGlvbkFuZEV2ZW50RGVzZXJpYWxpemF0aW9uXzEuVFJBTlNBQ1RJT05fQU5EX0VWRU5UX0FCSSkucGFyc2VBYmkoKS5jb250cmFjdDtcbiAgICAgICAgY29uc3Qgc2lnbmVkVHJhbnNhY3Rpb24gPSB0cmFuc2FjdGlvbkFiaS5uYW1lZFR5cGVzLmZpbmQoKG5hbWVkVHlwZSkgPT4gbmFtZWRUeXBlLm5hbWUgPT09IFwiRXhlY3V0YWJsZUV2ZW50XCIpO1xuICAgICAgICByZXR1cm4gbmV3IFRyYW5zYWN0aW9uQnVpbGRlcih0cmFuc2FjdGlvbkFiaSwgbmV3IFN0cnVjdFByb2R1Y2VyXzEuU3RydWN0UHJvZHVjZXIoc2lnbmVkVHJhbnNhY3Rpb24sIFwicm9vdFwiKSk7XG4gICAgfVxuICAgIGdldEJ5dGVzKCkge1xuICAgICAgICByZXR1cm4gQWJpQnl0ZU91dHB1dF8xLkFiaUJ5dGVPdXRwdXQuc2VyaWFsaXplQmlnRW5kaWFuKChvdXQpID0+IHRoaXMuZ2V0QWdncmVnYXRlUHJvZHVjZXIoKS53cml0ZShvdXQpKTtcbiAgICB9XG59XG5leHBvcnRzLlRyYW5zYWN0aW9uQnVpbGRlciA9IFRyYW5zYWN0aW9uQnVpbGRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYW5zYWN0aW9uQnVpbGRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/transaction/TransactionBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/transaction/TransactionReader.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/transaction/TransactionReader.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TransactionReader = void 0;\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nconst AbiByteInput_1 = __webpack_require__(/*! ../abistreams/AbiByteInput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiByteInput.js\");\nconst AbstractReader_1 = __webpack_require__(/*! ../AbstractReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/AbstractReader.js\");\nconst AbiParser_1 = __webpack_require__(/*! ../parser/AbiParser */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/AbiParser.js\");\nconst TransactionAndEventDeserialization_1 = __webpack_require__(/*! ../TransactionAndEventDeserialization */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/TransactionAndEventDeserialization.js\");\nclass TransactionReader extends AbstractReader_1.AbstractReader {\n    constructor(input, contract) {\n        let byteInput;\n        if (\"length\" in input) {\n            byteInput = new bitmanipulation_ts_1.BigEndianByteInput(input);\n        }\n        else {\n            byteInput = new bitmanipulation_ts_1.BigEndianByteInput(input.readRemaining());\n        }\n        super(new AbiByteInput_1.AbiByteInput(byteInput), contract.namedTypes);\n        this.contract = contract;\n    }\n    readMap() {\n        throw new Error(\"Type Map is not supported in rpc\");\n    }\n    readSet() {\n        throw new Error(\"Type Set is not supported in rpc\");\n    }\n    readAvlTreeMap() {\n        throw new Error(\"Type AvlTreeMap is not supported in rpc\");\n    }\n    checkAllBytesRead() {\n        const remaining = this.input.readRemaining();\n        if (remaining.length != 0) {\n            throw new Error(\"The input wasn't fully read, \" + remaining.length + \" remaining bytes.\");\n        }\n    }\n    static deserializeEventPayload(payload) {\n        const reader = new TransactionReader(payload, TransactionReader.CONTRACT_ABI);\n        const executableEvent = reader.contract.namedTypes.find((namedType) => namedType.name === \"ExecutableEvent\");\n        const res = reader.readStruct(executableEvent);\n        reader.checkAllBytesRead();\n        return res;\n    }\n    static deserializeTransactionPayload(payload) {\n        const reader = new TransactionReader(payload, TransactionReader.CONTRACT_ABI);\n        const signedTransaction = reader.contract.namedTypes.find((namedType) => namedType.name === \"SignedTransaction\");\n        const res = reader.readStruct(signedTransaction);\n        reader.checkAllBytesRead();\n        return res;\n    }\n    static getContractAbi() {\n        return this.CONTRACT_ABI;\n    }\n}\nexports.TransactionReader = TransactionReader;\nTransactionReader.CONTRACT_ABI = new AbiParser_1.AbiParser(TransactionAndEventDeserialization_1.TRANSACTION_AND_EVENT_ABI).parseAbi()\n    .contract;\n//# sourceMappingURL=TransactionReader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHJhbnNhY3Rpb24vVHJhbnNhY3Rpb25SZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCLDZCQUE2QixtQkFBTyxDQUFDLGlJQUFtQztBQUN4RSx1QkFBdUIsbUJBQU8sQ0FBQyx5SUFBNEI7QUFDM0QseUJBQXlCLG1CQUFPLENBQUMsdUhBQW1CO0FBQ3BELG9CQUFvQixtQkFBTyxDQUFDLDJIQUFxQjtBQUNqRCw2Q0FBNkMsbUJBQU8sQ0FBQywrSkFBdUM7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3RyYW5zYWN0aW9uL1RyYW5zYWN0aW9uUmVhZGVyLmpzPzVmN2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYW5zYWN0aW9uUmVhZGVyID0gdm9pZCAwO1xuY29uc3QgYml0bWFuaXB1bGF0aW9uX3RzXzEgPSByZXF1aXJlKFwiQHNlY2F0YS1wdWJsaWMvYml0bWFuaXB1bGF0aW9uLXRzXCIpO1xuY29uc3QgQWJpQnl0ZUlucHV0XzEgPSByZXF1aXJlKFwiLi4vYWJpc3RyZWFtcy9BYmlCeXRlSW5wdXRcIik7XG5jb25zdCBBYnN0cmFjdFJlYWRlcl8xID0gcmVxdWlyZShcIi4uL0Fic3RyYWN0UmVhZGVyXCIpO1xuY29uc3QgQWJpUGFyc2VyXzEgPSByZXF1aXJlKFwiLi4vcGFyc2VyL0FiaVBhcnNlclwiKTtcbmNvbnN0IFRyYW5zYWN0aW9uQW5kRXZlbnREZXNlcmlhbGl6YXRpb25fMSA9IHJlcXVpcmUoXCIuLi9UcmFuc2FjdGlvbkFuZEV2ZW50RGVzZXJpYWxpemF0aW9uXCIpO1xuY2xhc3MgVHJhbnNhY3Rpb25SZWFkZXIgZXh0ZW5kcyBBYnN0cmFjdFJlYWRlcl8xLkFic3RyYWN0UmVhZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCwgY29udHJhY3QpIHtcbiAgICAgICAgbGV0IGJ5dGVJbnB1dDtcbiAgICAgICAgaWYgKFwibGVuZ3RoXCIgaW4gaW5wdXQpIHtcbiAgICAgICAgICAgIGJ5dGVJbnB1dCA9IG5ldyBiaXRtYW5pcHVsYXRpb25fdHNfMS5CaWdFbmRpYW5CeXRlSW5wdXQoaW5wdXQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYnl0ZUlucHV0ID0gbmV3IGJpdG1hbmlwdWxhdGlvbl90c18xLkJpZ0VuZGlhbkJ5dGVJbnB1dChpbnB1dC5yZWFkUmVtYWluaW5nKCkpO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKG5ldyBBYmlCeXRlSW5wdXRfMS5BYmlCeXRlSW5wdXQoYnl0ZUlucHV0KSwgY29udHJhY3QubmFtZWRUeXBlcyk7XG4gICAgICAgIHRoaXMuY29udHJhY3QgPSBjb250cmFjdDtcbiAgICB9XG4gICAgcmVhZE1hcCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZSBNYXAgaXMgbm90IHN1cHBvcnRlZCBpbiBycGNcIik7XG4gICAgfVxuICAgIHJlYWRTZXQoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlR5cGUgU2V0IGlzIG5vdCBzdXBwb3J0ZWQgaW4gcnBjXCIpO1xuICAgIH1cbiAgICByZWFkQXZsVHJlZU1hcCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZSBBdmxUcmVlTWFwIGlzIG5vdCBzdXBwb3J0ZWQgaW4gcnBjXCIpO1xuICAgIH1cbiAgICBjaGVja0FsbEJ5dGVzUmVhZCgpIHtcbiAgICAgICAgY29uc3QgcmVtYWluaW5nID0gdGhpcy5pbnB1dC5yZWFkUmVtYWluaW5nKCk7XG4gICAgICAgIGlmIChyZW1haW5pbmcubGVuZ3RoICE9IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBpbnB1dCB3YXNuJ3QgZnVsbHkgcmVhZCwgXCIgKyByZW1haW5pbmcubGVuZ3RoICsgXCIgcmVtYWluaW5nIGJ5dGVzLlwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgZGVzZXJpYWxpemVFdmVudFBheWxvYWQocGF5bG9hZCkge1xuICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgVHJhbnNhY3Rpb25SZWFkZXIocGF5bG9hZCwgVHJhbnNhY3Rpb25SZWFkZXIuQ09OVFJBQ1RfQUJJKTtcbiAgICAgICAgY29uc3QgZXhlY3V0YWJsZUV2ZW50ID0gcmVhZGVyLmNvbnRyYWN0Lm5hbWVkVHlwZXMuZmluZCgobmFtZWRUeXBlKSA9PiBuYW1lZFR5cGUubmFtZSA9PT0gXCJFeGVjdXRhYmxlRXZlbnRcIik7XG4gICAgICAgIGNvbnN0IHJlcyA9IHJlYWRlci5yZWFkU3RydWN0KGV4ZWN1dGFibGVFdmVudCk7XG4gICAgICAgIHJlYWRlci5jaGVja0FsbEJ5dGVzUmVhZCgpO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBzdGF0aWMgZGVzZXJpYWxpemVUcmFuc2FjdGlvblBheWxvYWQocGF5bG9hZCkge1xuICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgVHJhbnNhY3Rpb25SZWFkZXIocGF5bG9hZCwgVHJhbnNhY3Rpb25SZWFkZXIuQ09OVFJBQ1RfQUJJKTtcbiAgICAgICAgY29uc3Qgc2lnbmVkVHJhbnNhY3Rpb24gPSByZWFkZXIuY29udHJhY3QubmFtZWRUeXBlcy5maW5kKChuYW1lZFR5cGUpID0+IG5hbWVkVHlwZS5uYW1lID09PSBcIlNpZ25lZFRyYW5zYWN0aW9uXCIpO1xuICAgICAgICBjb25zdCByZXMgPSByZWFkZXIucmVhZFN0cnVjdChzaWduZWRUcmFuc2FjdGlvbik7XG4gICAgICAgIHJlYWRlci5jaGVja0FsbEJ5dGVzUmVhZCgpO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0Q29udHJhY3RBYmkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLkNPTlRSQUNUX0FCSTtcbiAgICB9XG59XG5leHBvcnRzLlRyYW5zYWN0aW9uUmVhZGVyID0gVHJhbnNhY3Rpb25SZWFkZXI7XG5UcmFuc2FjdGlvblJlYWRlci5DT05UUkFDVF9BQkkgPSBuZXcgQWJpUGFyc2VyXzEuQWJpUGFyc2VyKFRyYW5zYWN0aW9uQW5kRXZlbnREZXNlcmlhbGl6YXRpb25fMS5UUkFOU0FDVElPTl9BTkRfRVZFTlRfQUJJKS5wYXJzZUFiaSgpXG4gICAgLmNvbnRyYWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VHJhbnNhY3Rpb25SZWFkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/transaction/TransactionReader.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TypeIndex = exports.NamedTypeIndex = exports.TypeAndFunctionOrder = exports.NamedTypesFormat = exports.FunctionFormat = exports.ShortnameType = exports.NamedTypeSpec = void 0;\nclass NamedTypeSpec {\n    constructor(name) {\n        this.name = name;\n    }\n}\nexports.NamedTypeSpec = NamedTypeSpec;\nvar ShortnameType;\n(function (ShortnameType) {\n    ShortnameType[ShortnameType[\"leb128\"] = 0] = \"leb128\";\n    ShortnameType[ShortnameType[\"hash\"] = 1] = \"hash\";\n})(ShortnameType || (exports.ShortnameType = ShortnameType = {}));\nvar FunctionFormat;\n(function (FunctionFormat) {\n    FunctionFormat[FunctionFormat[\"InitSeparately\"] = 0] = \"InitSeparately\";\n    FunctionFormat[FunctionFormat[\"FnKind\"] = 1] = \"FnKind\";\n})(FunctionFormat || (exports.FunctionFormat = FunctionFormat = {}));\nvar NamedTypesFormat;\n(function (NamedTypesFormat) {\n    NamedTypesFormat[NamedTypesFormat[\"OnlyStructs\"] = 1] = \"OnlyStructs\";\n    NamedTypesFormat[NamedTypesFormat[\"StructsAndEnum\"] = 2] = \"StructsAndEnum\";\n})(NamedTypesFormat || (exports.NamedTypesFormat = NamedTypesFormat = {}));\nvar TypeAndFunctionOrder;\n(function (TypeAndFunctionOrder) {\n    TypeAndFunctionOrder[TypeAndFunctionOrder[\"Unordered\"] = 0] = \"Unordered\";\n    TypeAndFunctionOrder[TypeAndFunctionOrder[\"DepthFirst\"] = 1] = \"DepthFirst\";\n})(TypeAndFunctionOrder || (exports.TypeAndFunctionOrder = TypeAndFunctionOrder = {}));\nvar NamedTypeIndex;\n(function (NamedTypeIndex) {\n    NamedTypeIndex[NamedTypeIndex[\"Struct\"] = 1] = \"Struct\";\n    NamedTypeIndex[NamedTypeIndex[\"Enum\"] = 2] = \"Enum\";\n})(NamedTypeIndex || (exports.NamedTypeIndex = NamedTypeIndex = {}));\nvar TypeIndex;\n(function (TypeIndex) {\n    TypeIndex[TypeIndex[\"Named\"] = 0] = \"Named\";\n    TypeIndex[TypeIndex[\"u8\"] = 1] = \"u8\";\n    TypeIndex[TypeIndex[\"u16\"] = 2] = \"u16\";\n    TypeIndex[TypeIndex[\"u32\"] = 3] = \"u32\";\n    TypeIndex[TypeIndex[\"u64\"] = 4] = \"u64\";\n    TypeIndex[TypeIndex[\"u128\"] = 5] = \"u128\";\n    TypeIndex[TypeIndex[\"i8\"] = 6] = \"i8\";\n    TypeIndex[TypeIndex[\"i16\"] = 7] = \"i16\";\n    TypeIndex[TypeIndex[\"i32\"] = 8] = \"i32\";\n    TypeIndex[TypeIndex[\"i64\"] = 9] = \"i64\";\n    TypeIndex[TypeIndex[\"i128\"] = 10] = \"i128\";\n    TypeIndex[TypeIndex[\"String\"] = 11] = \"String\";\n    TypeIndex[TypeIndex[\"bool\"] = 12] = \"bool\";\n    TypeIndex[TypeIndex[\"Address\"] = 13] = \"Address\";\n    TypeIndex[TypeIndex[\"Vec\"] = 14] = \"Vec\";\n    TypeIndex[TypeIndex[\"Map\"] = 15] = \"Map\";\n    TypeIndex[TypeIndex[\"Set\"] = 16] = \"Set\";\n    /** Deprecated. Producers should not emit this type index. Prefer {@link TypeIndex.SizedArray}. */\n    TypeIndex[TypeIndex[\"SizedByteArray\"] = 17] = \"SizedByteArray\";\n    TypeIndex[TypeIndex[\"Option\"] = 18] = \"Option\";\n    TypeIndex[TypeIndex[\"Hash\"] = 19] = \"Hash\";\n    TypeIndex[TypeIndex[\"PublicKey\"] = 20] = \"PublicKey\";\n    TypeIndex[TypeIndex[\"Signature\"] = 21] = \"Signature\";\n    TypeIndex[TypeIndex[\"BlsPublicKey\"] = 22] = \"BlsPublicKey\";\n    TypeIndex[TypeIndex[\"BlsSignature\"] = 23] = \"BlsSignature\";\n    TypeIndex[TypeIndex[\"u256\"] = 24] = \"u256\";\n    TypeIndex[TypeIndex[\"AvlTreeMap\"] = 25] = \"AvlTreeMap\";\n    TypeIndex[TypeIndex[\"SizedArray\"] = 26] = \"SizedArray\";\n})(TypeIndex || (exports.TypeIndex = TypeIndex = {}));\n//# sourceMappingURL=Abi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvQWJpLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLHNCQUFzQixHQUFHLDRCQUE0QixHQUFHLHdCQUF3QixHQUFHLHNCQUFzQixHQUFHLHFCQUFxQixHQUFHLHFCQUFxQjtBQUM3SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvQkFBb0IscUJBQXFCLHFCQUFxQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUJBQXFCLHNCQUFzQixzQkFBc0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHVCQUF1Qix3QkFBd0Isd0JBQXdCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywyQkFBMkIsNEJBQTRCLDRCQUE0QjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMscUJBQXFCLHNCQUFzQixzQkFBc0I7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RUFBdUUsMkJBQTJCO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQkFBZ0IsaUJBQWlCLGlCQUFpQjtBQUNuRCIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3R5cGVzL0FiaS5qcz9kNzY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UeXBlSW5kZXggPSBleHBvcnRzLk5hbWVkVHlwZUluZGV4ID0gZXhwb3J0cy5UeXBlQW5kRnVuY3Rpb25PcmRlciA9IGV4cG9ydHMuTmFtZWRUeXBlc0Zvcm1hdCA9IGV4cG9ydHMuRnVuY3Rpb25Gb3JtYXQgPSBleHBvcnRzLlNob3J0bmFtZVR5cGUgPSBleHBvcnRzLk5hbWVkVHlwZVNwZWMgPSB2b2lkIDA7XG5jbGFzcyBOYW1lZFR5cGVTcGVjIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgfVxufVxuZXhwb3J0cy5OYW1lZFR5cGVTcGVjID0gTmFtZWRUeXBlU3BlYztcbnZhciBTaG9ydG5hbWVUeXBlO1xuKGZ1bmN0aW9uIChTaG9ydG5hbWVUeXBlKSB7XG4gICAgU2hvcnRuYW1lVHlwZVtTaG9ydG5hbWVUeXBlW1wibGViMTI4XCJdID0gMF0gPSBcImxlYjEyOFwiO1xuICAgIFNob3J0bmFtZVR5cGVbU2hvcnRuYW1lVHlwZVtcImhhc2hcIl0gPSAxXSA9IFwiaGFzaFwiO1xufSkoU2hvcnRuYW1lVHlwZSB8fCAoZXhwb3J0cy5TaG9ydG5hbWVUeXBlID0gU2hvcnRuYW1lVHlwZSA9IHt9KSk7XG52YXIgRnVuY3Rpb25Gb3JtYXQ7XG4oZnVuY3Rpb24gKEZ1bmN0aW9uRm9ybWF0KSB7XG4gICAgRnVuY3Rpb25Gb3JtYXRbRnVuY3Rpb25Gb3JtYXRbXCJJbml0U2VwYXJhdGVseVwiXSA9IDBdID0gXCJJbml0U2VwYXJhdGVseVwiO1xuICAgIEZ1bmN0aW9uRm9ybWF0W0Z1bmN0aW9uRm9ybWF0W1wiRm5LaW5kXCJdID0gMV0gPSBcIkZuS2luZFwiO1xufSkoRnVuY3Rpb25Gb3JtYXQgfHwgKGV4cG9ydHMuRnVuY3Rpb25Gb3JtYXQgPSBGdW5jdGlvbkZvcm1hdCA9IHt9KSk7XG52YXIgTmFtZWRUeXBlc0Zvcm1hdDtcbihmdW5jdGlvbiAoTmFtZWRUeXBlc0Zvcm1hdCkge1xuICAgIE5hbWVkVHlwZXNGb3JtYXRbTmFtZWRUeXBlc0Zvcm1hdFtcIk9ubHlTdHJ1Y3RzXCJdID0gMV0gPSBcIk9ubHlTdHJ1Y3RzXCI7XG4gICAgTmFtZWRUeXBlc0Zvcm1hdFtOYW1lZFR5cGVzRm9ybWF0W1wiU3RydWN0c0FuZEVudW1cIl0gPSAyXSA9IFwiU3RydWN0c0FuZEVudW1cIjtcbn0pKE5hbWVkVHlwZXNGb3JtYXQgfHwgKGV4cG9ydHMuTmFtZWRUeXBlc0Zvcm1hdCA9IE5hbWVkVHlwZXNGb3JtYXQgPSB7fSkpO1xudmFyIFR5cGVBbmRGdW5jdGlvbk9yZGVyO1xuKGZ1bmN0aW9uIChUeXBlQW5kRnVuY3Rpb25PcmRlcikge1xuICAgIFR5cGVBbmRGdW5jdGlvbk9yZGVyW1R5cGVBbmRGdW5jdGlvbk9yZGVyW1wiVW5vcmRlcmVkXCJdID0gMF0gPSBcIlVub3JkZXJlZFwiO1xuICAgIFR5cGVBbmRGdW5jdGlvbk9yZGVyW1R5cGVBbmRGdW5jdGlvbk9yZGVyW1wiRGVwdGhGaXJzdFwiXSA9IDFdID0gXCJEZXB0aEZpcnN0XCI7XG59KShUeXBlQW5kRnVuY3Rpb25PcmRlciB8fCAoZXhwb3J0cy5UeXBlQW5kRnVuY3Rpb25PcmRlciA9IFR5cGVBbmRGdW5jdGlvbk9yZGVyID0ge30pKTtcbnZhciBOYW1lZFR5cGVJbmRleDtcbihmdW5jdGlvbiAoTmFtZWRUeXBlSW5kZXgpIHtcbiAgICBOYW1lZFR5cGVJbmRleFtOYW1lZFR5cGVJbmRleFtcIlN0cnVjdFwiXSA9IDFdID0gXCJTdHJ1Y3RcIjtcbiAgICBOYW1lZFR5cGVJbmRleFtOYW1lZFR5cGVJbmRleFtcIkVudW1cIl0gPSAyXSA9IFwiRW51bVwiO1xufSkoTmFtZWRUeXBlSW5kZXggfHwgKGV4cG9ydHMuTmFtZWRUeXBlSW5kZXggPSBOYW1lZFR5cGVJbmRleCA9IHt9KSk7XG52YXIgVHlwZUluZGV4O1xuKGZ1bmN0aW9uIChUeXBlSW5kZXgpIHtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1wiTmFtZWRcIl0gPSAwXSA9IFwiTmFtZWRcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1widThcIl0gPSAxXSA9IFwidThcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1widTE2XCJdID0gMl0gPSBcInUxNlwiO1xuICAgIFR5cGVJbmRleFtUeXBlSW5kZXhbXCJ1MzJcIl0gPSAzXSA9IFwidTMyXCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcInU2NFwiXSA9IDRdID0gXCJ1NjRcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1widTEyOFwiXSA9IDVdID0gXCJ1MTI4XCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcImk4XCJdID0gNl0gPSBcImk4XCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcImkxNlwiXSA9IDddID0gXCJpMTZcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1wiaTMyXCJdID0gOF0gPSBcImkzMlwiO1xuICAgIFR5cGVJbmRleFtUeXBlSW5kZXhbXCJpNjRcIl0gPSA5XSA9IFwiaTY0XCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcImkxMjhcIl0gPSAxMF0gPSBcImkxMjhcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1wiU3RyaW5nXCJdID0gMTFdID0gXCJTdHJpbmdcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1wiYm9vbFwiXSA9IDEyXSA9IFwiYm9vbFwiO1xuICAgIFR5cGVJbmRleFtUeXBlSW5kZXhbXCJBZGRyZXNzXCJdID0gMTNdID0gXCJBZGRyZXNzXCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcIlZlY1wiXSA9IDE0XSA9IFwiVmVjXCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcIk1hcFwiXSA9IDE1XSA9IFwiTWFwXCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcIlNldFwiXSA9IDE2XSA9IFwiU2V0XCI7XG4gICAgLyoqIERlcHJlY2F0ZWQuIFByb2R1Y2VycyBzaG91bGQgbm90IGVtaXQgdGhpcyB0eXBlIGluZGV4LiBQcmVmZXIge0BsaW5rIFR5cGVJbmRleC5TaXplZEFycmF5fS4gKi9cbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1wiU2l6ZWRCeXRlQXJyYXlcIl0gPSAxN10gPSBcIlNpemVkQnl0ZUFycmF5XCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcIk9wdGlvblwiXSA9IDE4XSA9IFwiT3B0aW9uXCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcIkhhc2hcIl0gPSAxOV0gPSBcIkhhc2hcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1wiUHVibGljS2V5XCJdID0gMjBdID0gXCJQdWJsaWNLZXlcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1wiU2lnbmF0dXJlXCJdID0gMjFdID0gXCJTaWduYXR1cmVcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1wiQmxzUHVibGljS2V5XCJdID0gMjJdID0gXCJCbHNQdWJsaWNLZXlcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1wiQmxzU2lnbmF0dXJlXCJdID0gMjNdID0gXCJCbHNTaWduYXR1cmVcIjtcbiAgICBUeXBlSW5kZXhbVHlwZUluZGV4W1widTI1NlwiXSA9IDI0XSA9IFwidTI1NlwiO1xuICAgIFR5cGVJbmRleFtUeXBlSW5kZXhbXCJBdmxUcmVlTWFwXCJdID0gMjVdID0gXCJBdmxUcmVlTWFwXCI7XG4gICAgVHlwZUluZGV4W1R5cGVJbmRleFtcIlNpemVkQXJyYXlcIl0gPSAyNl0gPSBcIlNpemVkQXJyYXlcIjtcbn0pKFR5cGVJbmRleCB8fCAoZXhwb3J0cy5UeXBlSW5kZXggPSBUeXBlSW5kZXggPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWJpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/AbiVersion.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/types/AbiVersion.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbiVersion = void 0;\nclass AbiVersion {\n    constructor(major, minor, patch) {\n        this.major = major;\n        this.minor = minor;\n        this.patch = patch;\n    }\n    toString() {\n        return `${this.major}.${this.minor}.${this.patch}`;\n    }\n    withZeroPatch() {\n        return new AbiVersion(this.major, this.minor, 0);\n    }\n    static parseFromString(stringVersion) {\n        const pattern = /^(\\d+)\\.(\\d+)\\.(\\d+)$/;\n        const matches = stringVersion.match(pattern);\n        if (pattern.test(stringVersion) && matches !== null) {\n            const major = parseInt(matches[1]);\n            const minor = parseInt(matches[2]);\n            const patch = parseInt(matches[3]);\n            return new AbiVersion(major, minor, patch);\n        }\n        else {\n            throw new Error(\"Invalid version: \" + stringVersion);\n        }\n    }\n}\nexports.AbiVersion = AbiVersion;\n//# sourceMappingURL=AbiVersion.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvQWJpVmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsV0FBVyxHQUFHLFdBQVcsR0FBRyxXQUFXO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3R5cGVzL0FiaVZlcnNpb24uanM/MjA1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWJpVmVyc2lvbiA9IHZvaWQgMDtcbmNsYXNzIEFiaVZlcnNpb24ge1xuICAgIGNvbnN0cnVjdG9yKG1ham9yLCBtaW5vciwgcGF0Y2gpIHtcbiAgICAgICAgdGhpcy5tYWpvciA9IG1ham9yO1xuICAgICAgICB0aGlzLm1pbm9yID0gbWlub3I7XG4gICAgICAgIHRoaXMucGF0Y2ggPSBwYXRjaDtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLm1ham9yfS4ke3RoaXMubWlub3J9LiR7dGhpcy5wYXRjaH1gO1xuICAgIH1cbiAgICB3aXRoWmVyb1BhdGNoKCkge1xuICAgICAgICByZXR1cm4gbmV3IEFiaVZlcnNpb24odGhpcy5tYWpvciwgdGhpcy5taW5vciwgMCk7XG4gICAgfVxuICAgIHN0YXRpYyBwYXJzZUZyb21TdHJpbmcoc3RyaW5nVmVyc2lvbikge1xuICAgICAgICBjb25zdCBwYXR0ZXJuID0gL14oXFxkKylcXC4oXFxkKylcXC4oXFxkKykkLztcbiAgICAgICAgY29uc3QgbWF0Y2hlcyA9IHN0cmluZ1ZlcnNpb24ubWF0Y2gocGF0dGVybik7XG4gICAgICAgIGlmIChwYXR0ZXJuLnRlc3Qoc3RyaW5nVmVyc2lvbikgJiYgbWF0Y2hlcyAhPT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgbWFqb3IgPSBwYXJzZUludChtYXRjaGVzWzFdKTtcbiAgICAgICAgICAgIGNvbnN0IG1pbm9yID0gcGFyc2VJbnQobWF0Y2hlc1syXSk7XG4gICAgICAgICAgICBjb25zdCBwYXRjaCA9IHBhcnNlSW50KG1hdGNoZXNbM10pO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBBYmlWZXJzaW9uKG1ham9yLCBtaW5vciwgcGF0Y2gpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB2ZXJzaW9uOiBcIiArIHN0cmluZ1ZlcnNpb24pO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5BYmlWZXJzaW9uID0gQWJpVmVyc2lvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFiaVZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/AbiVersion.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/DocumentationFunction.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/types/DocumentationFunction.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DocumentationFunction = void 0;\nclass DocumentationFunction {\n    constructor(description, args, returns) {\n        this.description = description;\n        this.arguments = args;\n        this.returns = returns;\n    }\n    static empty() {\n        return new DocumentationFunction([], new Map(), null);\n    }\n}\nexports.DocumentationFunction = DocumentationFunction;\n//# sourceMappingURL=DocumentationFunction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvRG9jdW1lbnRhdGlvbkZ1bmN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3R5cGVzL0RvY3VtZW50YXRpb25GdW5jdGlvbi5qcz9hMTg5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Eb2N1bWVudGF0aW9uRnVuY3Rpb24gPSB2b2lkIDA7XG5jbGFzcyBEb2N1bWVudGF0aW9uRnVuY3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yKGRlc2NyaXB0aW9uLCBhcmdzLCByZXR1cm5zKSB7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy5hcmd1bWVudHMgPSBhcmdzO1xuICAgICAgICB0aGlzLnJldHVybnMgPSByZXR1cm5zO1xuICAgIH1cbiAgICBzdGF0aWMgZW1wdHkoKSB7XG4gICAgICAgIHJldHVybiBuZXcgRG9jdW1lbnRhdGlvbkZ1bmN0aW9uKFtdLCBuZXcgTWFwKCksIG51bGwpO1xuICAgIH1cbn1cbmV4cG9ydHMuRG9jdW1lbnRhdGlvbkZ1bmN0aW9uID0gRG9jdW1lbnRhdGlvbkZ1bmN0aW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RG9jdW1lbnRhdGlvbkZ1bmN0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/DocumentationFunction.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/DocumentationNamedType.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/types/DocumentationNamedType.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DocumentationNamedType = void 0;\nclass DocumentationNamedType {\n    constructor(description, fields) {\n        this.description = description;\n        this.fields = fields;\n    }\n    static empty() {\n        return new DocumentationNamedType([], new Map());\n    }\n}\nexports.DocumentationNamedType = DocumentationNamedType;\n//# sourceMappingURL=DocumentationNamedType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvRG9jdW1lbnRhdGlvbk5hbWVkVHlwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvRG9jdW1lbnRhdGlvbk5hbWVkVHlwZS5qcz9jODBhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Eb2N1bWVudGF0aW9uTmFtZWRUeXBlID0gdm9pZCAwO1xuY2xhc3MgRG9jdW1lbnRhdGlvbk5hbWVkVHlwZSB7XG4gICAgY29uc3RydWN0b3IoZGVzY3JpcHRpb24sIGZpZWxkcykge1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgICAgIHRoaXMuZmllbGRzID0gZmllbGRzO1xuICAgIH1cbiAgICBzdGF0aWMgZW1wdHkoKSB7XG4gICAgICAgIHJldHVybiBuZXcgRG9jdW1lbnRhdGlvbk5hbWVkVHlwZShbXSwgbmV3IE1hcCgpKTtcbiAgICB9XG59XG5leHBvcnRzLkRvY3VtZW50YXRpb25OYW1lZFR5cGUgPSBEb2N1bWVudGF0aW9uTmFtZWRUeXBlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RG9jdW1lbnRhdGlvbk5hbWVkVHlwZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/DocumentationNamedType.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/EnumTypeSpec.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/types/EnumTypeSpec.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EnumTypeSpec = void 0;\nconst Abi_1 = __webpack_require__(/*! ./Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass EnumTypeSpec extends Abi_1.NamedTypeSpec {\n    constructor(name, variants) {\n        super(name);\n        this.variants = variants;\n    }\n    variant(discriminant) {\n        var _a;\n        return (_a = this.variants.find((variant) => variant.discriminant === discriminant)) !== null && _a !== void 0 ? _a : null;\n    }\n}\nexports.EnumTypeSpec = EnumTypeSpec;\n//# sourceMappingURL=EnumTypeSpec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvRW51bVR5cGVTcGVjLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixjQUFjLG1CQUFPLENBQUMsc0dBQU87QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi90eXBlcy9FbnVtVHlwZVNwZWMuanM/NDQ5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRW51bVR5cGVTcGVjID0gdm9pZCAwO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi9BYmlcIik7XG5jbGFzcyBFbnVtVHlwZVNwZWMgZXh0ZW5kcyBBYmlfMS5OYW1lZFR5cGVTcGVjIHtcbiAgICBjb25zdHJ1Y3RvcihuYW1lLCB2YXJpYW50cykge1xuICAgICAgICBzdXBlcihuYW1lKTtcbiAgICAgICAgdGhpcy52YXJpYW50cyA9IHZhcmlhbnRzO1xuICAgIH1cbiAgICB2YXJpYW50KGRpc2NyaW1pbmFudCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiAoX2EgPSB0aGlzLnZhcmlhbnRzLmZpbmQoKHZhcmlhbnQpID0+IHZhcmlhbnQuZGlzY3JpbWluYW50ID09PSBkaXNjcmltaW5hbnQpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsO1xuICAgIH1cbn1cbmV4cG9ydHMuRW51bVR5cGVTcGVjID0gRW51bVR5cGVTcGVjO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW51bVR5cGVTcGVjLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/EnumTypeSpec.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/FileAbi.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/types/FileAbi.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FileAbi = void 0;\nconst Configuration_1 = __webpack_require__(/*! ../parser/Configuration */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/Configuration.js\");\nclass FileAbi {\n    constructor(header, versionBinder, versionClient, shortnameLength, contract, description) {\n        this.header = header;\n        this.description = description !== null && description !== void 0 ? description : [];\n        this.versionBinder = versionBinder;\n        this.versionClient = versionClient;\n        this.shortnameLength = shortnameLength;\n        this.contract = contract;\n    }\n    format() {\n        return Configuration_1.Configuration.fromClientVersion(this.versionClient, this.shortnameLength);\n    }\n}\nexports.FileAbi = FileAbi;\n//# sourceMappingURL=FileAbi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvRmlsZUFiaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2Ysd0JBQXdCLG1CQUFPLENBQUMsbUlBQXlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvRmlsZUFiaS5qcz80YmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaWxlQWJpID0gdm9pZCAwO1xuY29uc3QgQ29uZmlndXJhdGlvbl8xID0gcmVxdWlyZShcIi4uL3BhcnNlci9Db25maWd1cmF0aW9uXCIpO1xuY2xhc3MgRmlsZUFiaSB7XG4gICAgY29uc3RydWN0b3IoaGVhZGVyLCB2ZXJzaW9uQmluZGVyLCB2ZXJzaW9uQ2xpZW50LCBzaG9ydG5hbWVMZW5ndGgsIGNvbnRyYWN0LCBkZXNjcmlwdGlvbikge1xuICAgICAgICB0aGlzLmhlYWRlciA9IGhlYWRlcjtcbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uICE9PSBudWxsICYmIGRlc2NyaXB0aW9uICE9PSB2b2lkIDAgPyBkZXNjcmlwdGlvbiA6IFtdO1xuICAgICAgICB0aGlzLnZlcnNpb25CaW5kZXIgPSB2ZXJzaW9uQmluZGVyO1xuICAgICAgICB0aGlzLnZlcnNpb25DbGllbnQgPSB2ZXJzaW9uQ2xpZW50O1xuICAgICAgICB0aGlzLnNob3J0bmFtZUxlbmd0aCA9IHNob3J0bmFtZUxlbmd0aDtcbiAgICAgICAgdGhpcy5jb250cmFjdCA9IGNvbnRyYWN0O1xuICAgIH1cbiAgICBmb3JtYXQoKSB7XG4gICAgICAgIHJldHVybiBDb25maWd1cmF0aW9uXzEuQ29uZmlndXJhdGlvbi5mcm9tQ2xpZW50VmVyc2lvbih0aGlzLnZlcnNpb25DbGllbnQsIHRoaXMuc2hvcnRuYW1lTGVuZ3RoKTtcbiAgICB9XG59XG5leHBvcnRzLkZpbGVBYmkgPSBGaWxlQWJpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RmlsZUFiaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/FileAbi.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/FnAbi.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/types/FnAbi.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FnAbi = void 0;\nconst DocumentationFunction_1 = __webpack_require__(/*! ./DocumentationFunction */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/DocumentationFunction.js\");\nclass FnAbi {\n    constructor(kind, name, shortname, args, secretArgument, doc) {\n        this.kind = kind;\n        this.name = name;\n        this.shortname = shortname;\n        this.arguments = args;\n        this.secretArgument = secretArgument !== null && secretArgument !== void 0 ? secretArgument : undefined;\n        this.doc = doc !== null && doc !== void 0 ? doc : DocumentationFunction_1.DocumentationFunction.empty();\n    }\n}\nexports.FnAbi = FnAbi;\n//# sourceMappingURL=FnAbi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvRm5BYmkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLGdDQUFnQyxtQkFBTyxDQUFDLDBJQUF5QjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3R5cGVzL0ZuQWJpLmpzP2U0MmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZuQWJpID0gdm9pZCAwO1xuY29uc3QgRG9jdW1lbnRhdGlvbkZ1bmN0aW9uXzEgPSByZXF1aXJlKFwiLi9Eb2N1bWVudGF0aW9uRnVuY3Rpb25cIik7XG5jbGFzcyBGbkFiaSB7XG4gICAgY29uc3RydWN0b3Ioa2luZCwgbmFtZSwgc2hvcnRuYW1lLCBhcmdzLCBzZWNyZXRBcmd1bWVudCwgZG9jKSB7XG4gICAgICAgIHRoaXMua2luZCA9IGtpbmQ7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuc2hvcnRuYW1lID0gc2hvcnRuYW1lO1xuICAgICAgICB0aGlzLmFyZ3VtZW50cyA9IGFyZ3M7XG4gICAgICAgIHRoaXMuc2VjcmV0QXJndW1lbnQgPSBzZWNyZXRBcmd1bWVudCAhPT0gbnVsbCAmJiBzZWNyZXRBcmd1bWVudCAhPT0gdm9pZCAwID8gc2VjcmV0QXJndW1lbnQgOiB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuZG9jID0gZG9jICE9PSBudWxsICYmIGRvYyAhPT0gdm9pZCAwID8gZG9jIDogRG9jdW1lbnRhdGlvbkZ1bmN0aW9uXzEuRG9jdW1lbnRhdGlvbkZ1bmN0aW9uLmVtcHR5KCk7XG4gICAgfVxufVxuZXhwb3J0cy5GbkFiaSA9IEZuQWJpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Rm5BYmkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/FnAbi.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/StructTypeSpec.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/types/StructTypeSpec.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StructTypeSpec = void 0;\nconst Abi_1 = __webpack_require__(/*! ./Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst DocumentationNamedType_1 = __webpack_require__(/*! ./DocumentationNamedType */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/DocumentationNamedType.js\");\nclass StructTypeSpec extends Abi_1.NamedTypeSpec {\n    constructor(name, fields, doc) {\n        super(name);\n        this.fields = fields;\n        this.doc = doc !== null && doc !== void 0 ? doc : DocumentationNamedType_1.DocumentationNamedType.empty();\n    }\n    getFieldByName(name) {\n        return this.fields.find((f) => f.name === name);\n    }\n}\nexports.StructTypeSpec = StructTypeSpec;\n//# sourceMappingURL=StructTypeSpec.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdHlwZXMvU3RydWN0VHlwZVNwZWMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGNBQWMsbUJBQU8sQ0FBQyxzR0FBTztBQUM3QixpQ0FBaUMsbUJBQU8sQ0FBQyw0SUFBMEI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi90eXBlcy9TdHJ1Y3RUeXBlU3BlYy5qcz8xYTE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdHJ1Y3RUeXBlU3BlYyA9IHZvaWQgMDtcbmNvbnN0IEFiaV8xID0gcmVxdWlyZShcIi4vQWJpXCIpO1xuY29uc3QgRG9jdW1lbnRhdGlvbk5hbWVkVHlwZV8xID0gcmVxdWlyZShcIi4vRG9jdW1lbnRhdGlvbk5hbWVkVHlwZVwiKTtcbmNsYXNzIFN0cnVjdFR5cGVTcGVjIGV4dGVuZHMgQWJpXzEuTmFtZWRUeXBlU3BlYyB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgZmllbGRzLCBkb2MpIHtcbiAgICAgICAgc3VwZXIobmFtZSk7XG4gICAgICAgIHRoaXMuZmllbGRzID0gZmllbGRzO1xuICAgICAgICB0aGlzLmRvYyA9IGRvYyAhPT0gbnVsbCAmJiBkb2MgIT09IHZvaWQgMCA/IGRvYyA6IERvY3VtZW50YXRpb25OYW1lZFR5cGVfMS5Eb2N1bWVudGF0aW9uTmFtZWRUeXBlLmVtcHR5KCk7XG4gICAgfVxuICAgIGdldEZpZWxkQnlOYW1lKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmllbGRzLmZpbmQoKGYpID0+IGYubmFtZSA9PT0gbmFtZSk7XG4gICAgfVxufVxuZXhwb3J0cy5TdHJ1Y3RUeXBlU3BlYyA9IFN0cnVjdFR5cGVTcGVjO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RydWN0VHlwZVNwZWMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/StructTypeSpec.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/util/BufferUtil.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/util/BufferUtil.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashBuffer = void 0;\nexports.hashBuffers = hashBuffers;\nconst hash_js_1 = __webpack_require__(/*! hash.js */ \"(action-browser)/./node_modules/hash.js/lib/hash.js\");\nfunction hashBuffers(buffers) {\n    const hash = (0, hash_js_1.sha256)();\n    for (const buffer of buffers) {\n        hash.update(buffer);\n    }\n    return Buffer.from(hash.digest());\n}\nconst hashBuffer = (buffer) => {\n    return hashBuffers([buffer]);\n};\nexports.hashBuffer = hashBuffer;\n//# sourceMappingURL=BufferUtil.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdXRpbC9CdWZmZXJVdGlsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIsa0JBQWtCLG1CQUFPLENBQUMsb0VBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL0J1ZmZlclV0aWwuanM/ZmNiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaGFzaEJ1ZmZlciA9IHZvaWQgMDtcbmV4cG9ydHMuaGFzaEJ1ZmZlcnMgPSBoYXNoQnVmZmVycztcbmNvbnN0IGhhc2hfanNfMSA9IHJlcXVpcmUoXCJoYXNoLmpzXCIpO1xuZnVuY3Rpb24gaGFzaEJ1ZmZlcnMoYnVmZmVycykge1xuICAgIGNvbnN0IGhhc2ggPSAoMCwgaGFzaF9qc18xLnNoYTI1NikoKTtcbiAgICBmb3IgKGNvbnN0IGJ1ZmZlciBvZiBidWZmZXJzKSB7XG4gICAgICAgIGhhc2gudXBkYXRlKGJ1ZmZlcik7XG4gICAgfVxuICAgIHJldHVybiBCdWZmZXIuZnJvbShoYXNoLmRpZ2VzdCgpKTtcbn1cbmNvbnN0IGhhc2hCdWZmZXIgPSAoYnVmZmVyKSA9PiB7XG4gICAgcmV0dXJuIGhhc2hCdWZmZXJzKFtidWZmZXJdKTtcbn07XG5leHBvcnRzLmhhc2hCdWZmZXIgPSBoYXNoQnVmZmVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnVmZmVyVXRpbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/util/BufferUtil.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/util/NumberToHex.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/util/NumberToHex.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toHexString = toHexString;\nfunction toHexString(num) {\n    let hex = num.toString(16);\n    if (hex.length % 2 != 0) {\n        hex = \"0\" + hex;\n    }\n    return hex;\n}\n//# sourceMappingURL=NumberToHex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdXRpbC9OdW1iZXJUb0hleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3V0aWwvTnVtYmVyVG9IZXguanM/YTEwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudG9IZXhTdHJpbmcgPSB0b0hleFN0cmluZztcbmZ1bmN0aW9uIHRvSGV4U3RyaW5nKG51bSkge1xuICAgIGxldCBoZXggPSBudW0udG9TdHJpbmcoMTYpO1xuICAgIGlmIChoZXgubGVuZ3RoICUgMiAhPSAwKSB7XG4gICAgICAgIGhleCA9IFwiMFwiICsgaGV4O1xuICAgIH1cbiAgICByZXR1cm4gaGV4O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TnVtYmVyVG9IZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/util/NumberToHex.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/JsonValueConverter.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/JsonValueConverter.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JsonValueConverter = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValueMap_1 = __webpack_require__(/*! ./ScValueMap */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueMap.js\");\nconst ScValueStruct_1 = __webpack_require__(/*! ./ScValueStruct */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueStruct.js\");\n// The maximum number of bytes shown when displaying Vec<u8>\nconst MAX_BYTES_SHOWN = 256;\nexports.JsonValueConverter = {\n    toJson: (scValue) => toJson(scValue),\n    toJsonString: (scValue) => JSON.stringify(toJson(scValue), null, 2),\n};\nfunction toJson(scValue) {\n    const typeIndex = scValue.getType();\n    if (typeIndex === Abi_1.TypeIndex.Named) {\n        if (scValue instanceof ScValueStruct_1.ScValueStruct) {\n            return toJsonStruct(scValue.structValue());\n        }\n        else {\n            return toJsonEnum(scValue.enumValue());\n        }\n    }\n    else if (typeIndex === Abi_1.TypeIndex.Vec) {\n        return toJsonVec(scValue.vecValue());\n    }\n    else if (typeIndex === Abi_1.TypeIndex.Option) {\n        return toJsonOption(scValue.optionValue());\n    }\n    else if (typeIndex === Abi_1.TypeIndex.Map) {\n        return toJsonMap(scValue.mapValue());\n    }\n    else if (typeIndex === Abi_1.TypeIndex.Set) {\n        return toJsonSet(scValue.setValue());\n    }\n    else if (typeIndex === Abi_1.TypeIndex.AvlTreeMap) {\n        return toJsonAvlTreeMap(scValue.avlTreeMapValue());\n    }\n    else if (typeIndex === Abi_1.TypeIndex.SizedArray) {\n        return toJsonArray(scValue.arrayValue());\n    }\n    else if (typeIndex === Abi_1.TypeIndex.bool) {\n        return scValue.boolValue();\n    }\n    else if (typeIndex === Abi_1.TypeIndex.Address) {\n        return scValue.addressValue().value.toString(\"hex\");\n    }\n    else if (typeIndex === Abi_1.TypeIndex.String) {\n        return scValue.stringValue();\n    }\n    else if (typeIndex === Abi_1.TypeIndex.Hash) {\n        return scValue.hashValue().value.toString(\"hex\");\n    }\n    else if (typeIndex === Abi_1.TypeIndex.PublicKey) {\n        return scValue.publicKeyValue().value.toString(\"hex\");\n    }\n    else if (typeIndex === Abi_1.TypeIndex.Signature) {\n        return scValue.signatureValue().value.toString(\"hex\");\n    }\n    else if (typeIndex === Abi_1.TypeIndex.BlsPublicKey) {\n        return scValue.blsPublicKeyValue().value.toString(\"hex\");\n    }\n    else if (typeIndex === Abi_1.TypeIndex.BlsSignature) {\n        return scValue.blsSignatureValue().value.toString(\"hex\");\n    }\n    else {\n        try {\n            return scValue.asNumber();\n        }\n        catch (_) {\n            return scValue.asBN().toString();\n        }\n    }\n}\nfunction toJsonStruct(scValueStruct) {\n    const map = scValueStruct.fieldsMap;\n    const result = {};\n    map.forEach((v, k) => {\n        result[k] = toJson(v);\n    });\n    return result;\n}\nfunction toJsonEnum(scValueEnum) {\n    const scValueStruct = scValueEnum.item;\n    const map = scValueStruct.fieldsMap;\n    const result = {};\n    result[\"@type\"] = scValueStruct.name;\n    map.forEach((v, k) => {\n        result[k] = toJson(v);\n    });\n    return result;\n}\nfunction toJsonVec(scValueVector) {\n    if (scValueVector.size() !== 0 && scValueVector.get(0).getType() === Abi_1.TypeIndex.u8) {\n        if (scValueVector.size() > MAX_BYTES_SHOWN) {\n            const values = scValueVector\n                .values()\n                .slice(0, MAX_BYTES_SHOWN)\n                .map((v) => v.asNumber());\n            return Buffer.from(values).toString(\"hex\") + \"...\";\n        }\n        else {\n            return Buffer.from(scValueVector.values().map((v) => v.asNumber())).toString(\"hex\");\n        }\n    }\n    return scValueVector.values().map((v) => toJson(v));\n}\nfunction toJsonOption(scValueOption) {\n    if (scValueOption.isSome() && scValueOption.innerValue !== null) {\n        return { isSome: true, innerValue: toJson(scValueOption.innerValue) };\n    }\n    else {\n        return { isSome: false };\n    }\n}\nfunction toJsonMap(scValueMap) {\n    const result = [];\n    scValueMap.map.forEach((v, k) => {\n        result.push({ key: toJson(k), value: toJson(v) });\n    });\n    return result;\n}\nfunction toJsonSet(scValueSet) {\n    return scValueSet.values.map((v) => toJson(v));\n}\nfunction toJsonAvlTreeMap(scValueAvlTreeMap) {\n    if (scValueAvlTreeMap.map == null) {\n        return { treeId: scValueAvlTreeMap.treeId };\n    }\n    else {\n        return {\n            treeId: scValueAvlTreeMap.treeId,\n            map: toJsonMap(new ScValueMap_1.ScValueMap(scValueAvlTreeMap.map)),\n        };\n    }\n}\nfunction toJsonArray(scValueArray) {\n    if (scValueArray.size() !== 0 && scValueArray.get(0).getType() === Abi_1.TypeIndex.u8) {\n        const bytes = scValueArray.vecU8Value();\n        return bytes.toString(\"hex\");\n    }\n    else {\n        return scValueArray.values().map((v) => toJson(v));\n    }\n}\n//# sourceMappingURL=JsonValueConverter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/JsonValueConverter.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValue = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass ScValue {\n    typeName() {\n        return Abi_1.TypeIndex[this.getType()];\n    }\n    structValue() {\n        throw new Error(`Cannot read Struct for type: ${this.typeName()}`);\n    }\n    vecValue() {\n        throw new Error(`Cannot read Vector for type: ${this.typeName()}`);\n    }\n    setValue() {\n        throw new Error(`Cannot read Set for type: ${this.typeName()}`);\n    }\n    optionValue() {\n        throw new Error(`Cannot read Option for type: ${this.typeName()}`);\n    }\n    addressValue() {\n        throw new Error(`Cannot read Address for type: ${this.typeName()}`);\n    }\n    hashValue() {\n        throw new Error(`Cannot read Hash for type: ${this.typeName()}`);\n    }\n    publicKeyValue() {\n        throw new Error(`Cannot read PublicKey for type: ${this.typeName()}`);\n    }\n    signatureValue() {\n        throw new Error(`Cannot read Signature for type: ${this.typeName()}`);\n    }\n    blsPublicKeyValue() {\n        throw new Error(`Cannot read BlsPublicKey for type: ${this.typeName()}`);\n    }\n    blsSignatureValue() {\n        throw new Error(`Cannot read BlsSignature for type: ${this.typeName()}`);\n    }\n    mapValue() {\n        throw new Error(`Cannot read Map for type: ${this.typeName()}`);\n    }\n    enumValue() {\n        throw new Error(`Cannot read Enum for type: ${this.typeName()}`);\n    }\n    vecU8Value() {\n        throw new Error(`Cannot read Vec u8 for type: ${this.typeName()}`);\n    }\n    boolValue() {\n        throw new Error(`Cannot read bool for type: ${this.typeName()}`);\n    }\n    stringValue() {\n        throw new Error(`Cannot read String for type: ${this.typeName()}`);\n    }\n    asNumber() {\n        throw new Error(`Cannot read integer for type: ${this.typeName()}`);\n    }\n    asBN() {\n        throw new Error(`Cannot read BN for type: ${this.typeName()}`);\n    }\n    avlTreeMapValue() {\n        throw new Error(`Cannot read AvlTreeMap for type: ${this.typeName()}`);\n    }\n    arrayValue() {\n        throw new Error(`Cannot read array for type: ${this.typeName()}`);\n    }\n}\nexports.ScValue = ScValue;\n//# sourceMappingURL=ScValue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsZ0JBQWdCO0FBQ3hFO0FBQ0E7QUFDQSx3REFBd0QsZ0JBQWdCO0FBQ3hFO0FBQ0E7QUFDQSxxREFBcUQsZ0JBQWdCO0FBQ3JFO0FBQ0E7QUFDQSx3REFBd0QsZ0JBQWdCO0FBQ3hFO0FBQ0E7QUFDQSx5REFBeUQsZ0JBQWdCO0FBQ3pFO0FBQ0E7QUFDQSxzREFBc0QsZ0JBQWdCO0FBQ3RFO0FBQ0E7QUFDQSwyREFBMkQsZ0JBQWdCO0FBQzNFO0FBQ0E7QUFDQSwyREFBMkQsZ0JBQWdCO0FBQzNFO0FBQ0E7QUFDQSw4REFBOEQsZ0JBQWdCO0FBQzlFO0FBQ0E7QUFDQSw4REFBOEQsZ0JBQWdCO0FBQzlFO0FBQ0E7QUFDQSxxREFBcUQsZ0JBQWdCO0FBQ3JFO0FBQ0E7QUFDQSxzREFBc0QsZ0JBQWdCO0FBQ3RFO0FBQ0E7QUFDQSx3REFBd0QsZ0JBQWdCO0FBQ3hFO0FBQ0E7QUFDQSxzREFBc0QsZ0JBQWdCO0FBQ3RFO0FBQ0E7QUFDQSx3REFBd0QsZ0JBQWdCO0FBQ3hFO0FBQ0E7QUFDQSx5REFBeUQsZ0JBQWdCO0FBQ3pFO0FBQ0E7QUFDQSxvREFBb0QsZ0JBQWdCO0FBQ3BFO0FBQ0E7QUFDQSw0REFBNEQsZ0JBQWdCO0FBQzVFO0FBQ0E7QUFDQSx1REFBdUQsZ0JBQWdCO0FBQ3ZFO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi92YWx1ZS9TY1ZhbHVlLmpzP2JjNjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjVmFsdWUgPSB2b2lkIDA7XG5jb25zdCBBYmlfMSA9IHJlcXVpcmUoXCIuLi90eXBlcy9BYmlcIik7XG5jbGFzcyBTY1ZhbHVlIHtcbiAgICB0eXBlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIEFiaV8xLlR5cGVJbmRleFt0aGlzLmdldFR5cGUoKV07XG4gICAgfVxuICAgIHN0cnVjdFZhbHVlKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCByZWFkIFN0cnVjdCBmb3IgdHlwZTogJHt0aGlzLnR5cGVOYW1lKCl9YCk7XG4gICAgfVxuICAgIHZlY1ZhbHVlKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCByZWFkIFZlY3RvciBmb3IgdHlwZTogJHt0aGlzLnR5cGVOYW1lKCl9YCk7XG4gICAgfVxuICAgIHNldFZhbHVlKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCByZWFkIFNldCBmb3IgdHlwZTogJHt0aGlzLnR5cGVOYW1lKCl9YCk7XG4gICAgfVxuICAgIG9wdGlvblZhbHVlKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCByZWFkIE9wdGlvbiBmb3IgdHlwZTogJHt0aGlzLnR5cGVOYW1lKCl9YCk7XG4gICAgfVxuICAgIGFkZHJlc3NWYWx1ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBBZGRyZXNzIGZvciB0eXBlOiAke3RoaXMudHlwZU5hbWUoKX1gKTtcbiAgICB9XG4gICAgaGFzaFZhbHVlKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCByZWFkIEhhc2ggZm9yIHR5cGU6ICR7dGhpcy50eXBlTmFtZSgpfWApO1xuICAgIH1cbiAgICBwdWJsaWNLZXlWYWx1ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBQdWJsaWNLZXkgZm9yIHR5cGU6ICR7dGhpcy50eXBlTmFtZSgpfWApO1xuICAgIH1cbiAgICBzaWduYXR1cmVWYWx1ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBTaWduYXR1cmUgZm9yIHR5cGU6ICR7dGhpcy50eXBlTmFtZSgpfWApO1xuICAgIH1cbiAgICBibHNQdWJsaWNLZXlWYWx1ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBCbHNQdWJsaWNLZXkgZm9yIHR5cGU6ICR7dGhpcy50eXBlTmFtZSgpfWApO1xuICAgIH1cbiAgICBibHNTaWduYXR1cmVWYWx1ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBCbHNTaWduYXR1cmUgZm9yIHR5cGU6ICR7dGhpcy50eXBlTmFtZSgpfWApO1xuICAgIH1cbiAgICBtYXBWYWx1ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBNYXAgZm9yIHR5cGU6ICR7dGhpcy50eXBlTmFtZSgpfWApO1xuICAgIH1cbiAgICBlbnVtVmFsdWUoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IHJlYWQgRW51bSBmb3IgdHlwZTogJHt0aGlzLnR5cGVOYW1lKCl9YCk7XG4gICAgfVxuICAgIHZlY1U4VmFsdWUoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IHJlYWQgVmVjIHU4IGZvciB0eXBlOiAke3RoaXMudHlwZU5hbWUoKX1gKTtcbiAgICB9XG4gICAgYm9vbFZhbHVlKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCByZWFkIGJvb2wgZm9yIHR5cGU6ICR7dGhpcy50eXBlTmFtZSgpfWApO1xuICAgIH1cbiAgICBzdHJpbmdWYWx1ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBTdHJpbmcgZm9yIHR5cGU6ICR7dGhpcy50eXBlTmFtZSgpfWApO1xuICAgIH1cbiAgICBhc051bWJlcigpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBpbnRlZ2VyIGZvciB0eXBlOiAke3RoaXMudHlwZU5hbWUoKX1gKTtcbiAgICB9XG4gICAgYXNCTigpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBCTiBmb3IgdHlwZTogJHt0aGlzLnR5cGVOYW1lKCl9YCk7XG4gICAgfVxuICAgIGF2bFRyZWVNYXBWYWx1ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBBdmxUcmVlTWFwIGZvciB0eXBlOiAke3RoaXMudHlwZU5hbWUoKX1gKTtcbiAgICB9XG4gICAgYXJyYXlWYWx1ZSgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgcmVhZCBhcnJheSBmb3IgdHlwZTogJHt0aGlzLnR5cGVOYW1lKCl9YCk7XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlID0gU2NWYWx1ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAddress.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAddress.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueAddress = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nclass ScValueAddress extends ScValue_1.ScValue {\n    constructor(value) {\n        super();\n        if (value.length !== ScValueAddress.ADDRESS_LENGTH) {\n            throw new Error(`Address expects exactly ${ScValueAddress.ADDRESS_LENGTH} bytes, but found ${value.length}`);\n        }\n        this.value = value;\n    }\n    getType() {\n        return Abi_1.TypeIndex.Address;\n    }\n    addressValue() {\n        return this;\n    }\n}\nexports.ScValueAddress = ScValueAddress;\nScValueAddress.ADDRESS_LENGTH = 21;\n//# sourceMappingURL=ScValueAddress.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUFkZHJlc3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLGNBQWMsbUJBQU8sQ0FBQyw2R0FBYztBQUNwQyxrQkFBa0IsbUJBQU8sQ0FBQyw4R0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCwrQkFBK0IsbUJBQW1CLGFBQWE7QUFDdEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3ZhbHVlL1NjVmFsdWVBZGRyZXNzLmpzPzQ2NDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjVmFsdWVBZGRyZXNzID0gdm9pZCAwO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY29uc3QgU2NWYWx1ZV8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZVwiKTtcbmNsYXNzIFNjVmFsdWVBZGRyZXNzIGV4dGVuZHMgU2NWYWx1ZV8xLlNjVmFsdWUge1xuICAgIGNvbnN0cnVjdG9yKHZhbHVlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggIT09IFNjVmFsdWVBZGRyZXNzLkFERFJFU1NfTEVOR1RIKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEFkZHJlc3MgZXhwZWN0cyBleGFjdGx5ICR7U2NWYWx1ZUFkZHJlc3MuQUREUkVTU19MRU5HVEh9IGJ5dGVzLCBidXQgZm91bmQgJHt2YWx1ZS5sZW5ndGh9YCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gQWJpXzEuVHlwZUluZGV4LkFkZHJlc3M7XG4gICAgfVxuICAgIGFkZHJlc3NWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlQWRkcmVzcyA9IFNjVmFsdWVBZGRyZXNzO1xuU2NWYWx1ZUFkZHJlc3MuQUREUkVTU19MRU5HVEggPSAyMTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVBZGRyZXNzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAddress.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueArray.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueArray.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueArray = void 0;\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValueNumber_1 = __webpack_require__(/*! ./ScValueNumber */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueNumber.js\");\nclass ScValueArray extends ScValue_1.ScValue {\n    constructor(values) {\n        super();\n        this.vals = values;\n    }\n    static fromBytes(bytes) {\n        const elements = [];\n        for (const byte of bytes) {\n            elements.push(new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.u8, byte));\n        }\n        return new ScValueArray(elements);\n    }\n    size() {\n        return this.vals.length;\n    }\n    isEmpty() {\n        return this.vals.length === 0;\n    }\n    get(index) {\n        return this.vals[index];\n    }\n    getType() {\n        return Abi_1.TypeIndex.SizedArray;\n    }\n    arrayValue() {\n        return this;\n    }\n    values() {\n        return this.vals;\n    }\n    vecU8Value() {\n        if (this.size() === 0) {\n            return Buffer.from([]);\n        }\n        else if (this.get(0).getType() !== Abi_1.TypeIndex.u8) {\n            throw new Error(\"Cannot read SizedArray u8 for current type\");\n        }\n        else {\n            return Buffer.from(this.vals.map((sc) => sc.asNumber()));\n        }\n    }\n}\nexports.ScValueArray = ScValueArray;\n//# sourceMappingURL=ScValueArray.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUFycmF5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixrQkFBa0IsbUJBQU8sQ0FBQyw4R0FBVztBQUNyQyxjQUFjLG1CQUFPLENBQUMsNkdBQWM7QUFDcEMsd0JBQXdCLG1CQUFPLENBQUMsMEhBQWlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3ZhbHVlL1NjVmFsdWVBcnJheS5qcz80NzE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY1ZhbHVlQXJyYXkgPSB2b2lkIDA7XG5jb25zdCBTY1ZhbHVlXzEgPSByZXF1aXJlKFwiLi9TY1ZhbHVlXCIpO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY29uc3QgU2NWYWx1ZU51bWJlcl8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZU51bWJlclwiKTtcbmNsYXNzIFNjVmFsdWVBcnJheSBleHRlbmRzIFNjVmFsdWVfMS5TY1ZhbHVlIHtcbiAgICBjb25zdHJ1Y3Rvcih2YWx1ZXMpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy52YWxzID0gdmFsdWVzO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUJ5dGVzKGJ5dGVzKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnRzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgYnl0ZSBvZiBieXRlcykge1xuICAgICAgICAgICAgZWxlbWVudHMucHVzaChuZXcgU2NWYWx1ZU51bWJlcl8xLlNjVmFsdWVOdW1iZXIoQWJpXzEuVHlwZUluZGV4LnU4LCBieXRlKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBTY1ZhbHVlQXJyYXkoZWxlbWVudHMpO1xuICAgIH1cbiAgICBzaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWxzLmxlbmd0aDtcbiAgICB9XG4gICAgaXNFbXB0eSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFscy5sZW5ndGggPT09IDA7XG4gICAgfVxuICAgIGdldChpbmRleCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWxzW2luZGV4XTtcbiAgICB9XG4gICAgZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIEFiaV8xLlR5cGVJbmRleC5TaXplZEFycmF5O1xuICAgIH1cbiAgICBhcnJheVZhbHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgdmFsdWVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWxzO1xuICAgIH1cbiAgICB2ZWNVOFZhbHVlKCkge1xuICAgICAgICBpZiAodGhpcy5zaXplKCkgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShbXSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5nZXQoMCkuZ2V0VHlwZSgpICE9PSBBYmlfMS5UeXBlSW5kZXgudTgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCByZWFkIFNpemVkQXJyYXkgdTggZm9yIGN1cnJlbnQgdHlwZVwiKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbSh0aGlzLnZhbHMubWFwKChzYykgPT4gc2MuYXNOdW1iZXIoKSkpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlQXJyYXkgPSBTY1ZhbHVlQXJyYXk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TY1ZhbHVlQXJyYXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueArray.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAvlTreeMap.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAvlTreeMap.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueAvlTreeMap = void 0;\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass ScValueAvlTreeMap extends ScValue_1.ScValue {\n    constructor(treeId, map) {\n        super();\n        this.treeId = treeId;\n        this.map = map;\n    }\n    getType() {\n        return Abi_1.TypeIndex.AvlTreeMap;\n    }\n    mapKeysValues(keyMapper, valueMapper) {\n        if (this.map != null) {\n            return new Map([...this.map].map(([key, value]) => [keyMapper(key), valueMapper(value)]));\n        }\n    }\n    avlTreeMapValue() {\n        return this;\n    }\n}\nexports.ScValueAvlTreeMap = ScValueAvlTreeMap;\n//# sourceMappingURL=ScValueAvlTreeMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUF2bFRyZWVNYXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCLGtCQUFrQixtQkFBTyxDQUFDLDhHQUFXO0FBQ3JDLGNBQWMsbUJBQU8sQ0FBQyw2R0FBYztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi92YWx1ZS9TY1ZhbHVlQXZsVHJlZU1hcC5qcz80ZjkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY1ZhbHVlQXZsVHJlZU1hcCA9IHZvaWQgMDtcbmNvbnN0IFNjVmFsdWVfMSA9IHJlcXVpcmUoXCIuL1NjVmFsdWVcIik7XG5jb25zdCBBYmlfMSA9IHJlcXVpcmUoXCIuLi90eXBlcy9BYmlcIik7XG5jbGFzcyBTY1ZhbHVlQXZsVHJlZU1hcCBleHRlbmRzIFNjVmFsdWVfMS5TY1ZhbHVlIHtcbiAgICBjb25zdHJ1Y3Rvcih0cmVlSWQsIG1hcCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnRyZWVJZCA9IHRyZWVJZDtcbiAgICAgICAgdGhpcy5tYXAgPSBtYXA7XG4gICAgfVxuICAgIGdldFR5cGUoKSB7XG4gICAgICAgIHJldHVybiBBYmlfMS5UeXBlSW5kZXguQXZsVHJlZU1hcDtcbiAgICB9XG4gICAgbWFwS2V5c1ZhbHVlcyhrZXlNYXBwZXIsIHZhbHVlTWFwcGVyKSB7XG4gICAgICAgIGlmICh0aGlzLm1hcCAhPSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IE1hcChbLi4udGhpcy5tYXBdLm1hcCgoW2tleSwgdmFsdWVdKSA9PiBba2V5TWFwcGVyKGtleSksIHZhbHVlTWFwcGVyKHZhbHVlKV0pKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhdmxUcmVlTWFwVmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cbmV4cG9ydHMuU2NWYWx1ZUF2bFRyZWVNYXAgPSBTY1ZhbHVlQXZsVHJlZU1hcDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVBdmxUcmVlTWFwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueAvlTreeMap.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsPublicKey.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsPublicKey.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueBlsPublicKey = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nclass ScValueBlsPublicKey extends ScValue_1.ScValue {\n    constructor(value) {\n        super();\n        if (value.length !== ScValueBlsPublicKey.BLS_PUBLIC_KEY_LENGTH) {\n            throw new Error(`BlsPublicKey expects exactly ${ScValueBlsPublicKey.BLS_PUBLIC_KEY_LENGTH} bytes, but found ${value.length}`);\n        }\n        this.value = value;\n    }\n    getType() {\n        return Abi_1.TypeIndex.BlsPublicKey;\n    }\n    blsPublicKeyValue() {\n        return this;\n    }\n}\nexports.ScValueBlsPublicKey = ScValueBlsPublicKey;\nScValueBlsPublicKey.BLS_PUBLIC_KEY_LENGTH = 96;\n//# sourceMappingURL=ScValueBlsPublicKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUJsc1B1YmxpY0tleS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDLGtCQUFrQixtQkFBTyxDQUFDLDhHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELDJDQUEyQyxtQkFBbUIsYUFBYTtBQUN2STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUJsc1B1YmxpY0tleS5qcz9mYmM0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY1ZhbHVlQmxzUHVibGljS2V5ID0gdm9pZCAwO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY29uc3QgU2NWYWx1ZV8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZVwiKTtcbmNsYXNzIFNjVmFsdWVCbHNQdWJsaWNLZXkgZXh0ZW5kcyBTY1ZhbHVlXzEuU2NWYWx1ZSB7XG4gICAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCAhPT0gU2NWYWx1ZUJsc1B1YmxpY0tleS5CTFNfUFVCTElDX0tFWV9MRU5HVEgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQmxzUHVibGljS2V5IGV4cGVjdHMgZXhhY3RseSAke1NjVmFsdWVCbHNQdWJsaWNLZXkuQkxTX1BVQkxJQ19LRVlfTEVOR1RIfSBieXRlcywgYnV0IGZvdW5kICR7dmFsdWUubGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIEFiaV8xLlR5cGVJbmRleC5CbHNQdWJsaWNLZXk7XG4gICAgfVxuICAgIGJsc1B1YmxpY0tleVZhbHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5leHBvcnRzLlNjVmFsdWVCbHNQdWJsaWNLZXkgPSBTY1ZhbHVlQmxzUHVibGljS2V5O1xuU2NWYWx1ZUJsc1B1YmxpY0tleS5CTFNfUFVCTElDX0tFWV9MRU5HVEggPSA5Njtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVCbHNQdWJsaWNLZXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsPublicKey.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsSignature.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsSignature.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueBlsSignature = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nclass ScValueBlsSignature extends ScValue_1.ScValue {\n    constructor(value) {\n        super();\n        if (value.length !== ScValueBlsSignature.BLS_SIGNATURE_LENGTH) {\n            throw new Error(`BlsSignature expects exactly ${ScValueBlsSignature.BLS_SIGNATURE_LENGTH} bytes, but found ${value.length}`);\n        }\n        this.value = value;\n    }\n    getType() {\n        return Abi_1.TypeIndex.BlsSignature;\n    }\n    blsSignatureValue() {\n        return this;\n    }\n}\nexports.ScValueBlsSignature = ScValueBlsSignature;\nScValueBlsSignature.BLS_SIGNATURE_LENGTH = 48;\n//# sourceMappingURL=ScValueBlsSignature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUJsc1NpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDLGtCQUFrQixtQkFBTyxDQUFDLDhHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELDBDQUEwQyxtQkFBbUIsYUFBYTtBQUN0STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUJsc1NpZ25hdHVyZS5qcz9iZDA0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY1ZhbHVlQmxzU2lnbmF0dXJlID0gdm9pZCAwO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY29uc3QgU2NWYWx1ZV8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZVwiKTtcbmNsYXNzIFNjVmFsdWVCbHNTaWduYXR1cmUgZXh0ZW5kcyBTY1ZhbHVlXzEuU2NWYWx1ZSB7XG4gICAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCAhPT0gU2NWYWx1ZUJsc1NpZ25hdHVyZS5CTFNfU0lHTkFUVVJFX0xFTkdUSCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBCbHNTaWduYXR1cmUgZXhwZWN0cyBleGFjdGx5ICR7U2NWYWx1ZUJsc1NpZ25hdHVyZS5CTFNfU0lHTkFUVVJFX0xFTkdUSH0gYnl0ZXMsIGJ1dCBmb3VuZCAke3ZhbHVlLmxlbmd0aH1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgfVxuICAgIGdldFR5cGUoKSB7XG4gICAgICAgIHJldHVybiBBYmlfMS5UeXBlSW5kZXguQmxzU2lnbmF0dXJlO1xuICAgIH1cbiAgICBibHNTaWduYXR1cmVWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlQmxzU2lnbmF0dXJlID0gU2NWYWx1ZUJsc1NpZ25hdHVyZTtcblNjVmFsdWVCbHNTaWduYXR1cmUuQkxTX1NJR05BVFVSRV9MRU5HVEggPSA0ODtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVCbHNTaWduYXR1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBlsSignature.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBool.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBool.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueBool = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nclass ScValueBool extends ScValue_1.ScValue {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    getType() {\n        return Abi_1.TypeIndex.bool;\n    }\n    boolValue() {\n        return this.value;\n    }\n}\nexports.ScValueBool = ScValueBool;\n//# sourceMappingURL=ScValueBool.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUJvb2wuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLGNBQWMsbUJBQU8sQ0FBQyw2R0FBYztBQUNwQyxrQkFBa0IsbUJBQU8sQ0FBQyw4R0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi92YWx1ZS9TY1ZhbHVlQm9vbC5qcz85NTZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY1ZhbHVlQm9vbCA9IHZvaWQgMDtcbmNvbnN0IEFiaV8xID0gcmVxdWlyZShcIi4uL3R5cGVzL0FiaVwiKTtcbmNvbnN0IFNjVmFsdWVfMSA9IHJlcXVpcmUoXCIuL1NjVmFsdWVcIik7XG5jbGFzcyBTY1ZhbHVlQm9vbCBleHRlbmRzIFNjVmFsdWVfMS5TY1ZhbHVlIHtcbiAgICBjb25zdHJ1Y3Rvcih2YWx1ZSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgfVxuICAgIGdldFR5cGUoKSB7XG4gICAgICAgIHJldHVybiBBYmlfMS5UeXBlSW5kZXguYm9vbDtcbiAgICB9XG4gICAgYm9vbFZhbHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9XG59XG5leHBvcnRzLlNjVmFsdWVCb29sID0gU2NWYWx1ZUJvb2w7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TY1ZhbHVlQm9vbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueBool.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueEnum.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueEnum.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueEnum = void 0;\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass ScValueEnum extends ScValue_1.ScValue {\n    constructor(name, item) {\n        super();\n        this.name = name;\n        this.item = item;\n    }\n    enumValue() {\n        return this;\n    }\n    getType() {\n        return Abi_1.TypeIndex.Named;\n    }\n}\nexports.ScValueEnum = ScValueEnum;\n//# sourceMappingURL=ScValueEnum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUVudW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLGtCQUFrQixtQkFBTyxDQUFDLDhHQUFXO0FBQ3JDLGNBQWMsbUJBQU8sQ0FBQyw2R0FBYztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3ZhbHVlL1NjVmFsdWVFbnVtLmpzPzgxZTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjVmFsdWVFbnVtID0gdm9pZCAwO1xuY29uc3QgU2NWYWx1ZV8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZVwiKTtcbmNvbnN0IEFiaV8xID0gcmVxdWlyZShcIi4uL3R5cGVzL0FiaVwiKTtcbmNsYXNzIFNjVmFsdWVFbnVtIGV4dGVuZHMgU2NWYWx1ZV8xLlNjVmFsdWUge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGl0ZW0pIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5pdGVtID0gaXRlbTtcbiAgICB9XG4gICAgZW51bVZhbHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIEFiaV8xLlR5cGVJbmRleC5OYW1lZDtcbiAgICB9XG59XG5leHBvcnRzLlNjVmFsdWVFbnVtID0gU2NWYWx1ZUVudW07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TY1ZhbHVlRW51bS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueEnum.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueHash.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueHash.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueHash = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nclass ScValueHash extends ScValue_1.ScValue {\n    constructor(value) {\n        super();\n        if (value.length !== ScValueHash.HASH_LENGTH) {\n            throw new Error(`Hash expects exactly ${ScValueHash.HASH_LENGTH} bytes, but found ${value.length}`);\n        }\n        this.value = value;\n    }\n    getType() {\n        return Abi_1.TypeIndex.Hash;\n    }\n    hashValue() {\n        return this;\n    }\n}\nexports.ScValueHash = ScValueHash;\nScValueHash.HASH_LENGTH = 32;\n//# sourceMappingURL=ScValueHash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZUhhc2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLGNBQWMsbUJBQU8sQ0FBQyw2R0FBYztBQUNwQyxrQkFBa0IsbUJBQU8sQ0FBQyw4R0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCx5QkFBeUIsbUJBQW1CLGFBQWE7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3ZhbHVlL1NjVmFsdWVIYXNoLmpzPzI1MzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjVmFsdWVIYXNoID0gdm9pZCAwO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY29uc3QgU2NWYWx1ZV8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZVwiKTtcbmNsYXNzIFNjVmFsdWVIYXNoIGV4dGVuZHMgU2NWYWx1ZV8xLlNjVmFsdWUge1xuICAgIGNvbnN0cnVjdG9yKHZhbHVlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIGlmICh2YWx1ZS5sZW5ndGggIT09IFNjVmFsdWVIYXNoLkhBU0hfTEVOR1RIKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEhhc2ggZXhwZWN0cyBleGFjdGx5ICR7U2NWYWx1ZUhhc2guSEFTSF9MRU5HVEh9IGJ5dGVzLCBidXQgZm91bmQgJHt2YWx1ZS5sZW5ndGh9YCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gQWJpXzEuVHlwZUluZGV4Lkhhc2g7XG4gICAgfVxuICAgIGhhc2hWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlSGFzaCA9IFNjVmFsdWVIYXNoO1xuU2NWYWx1ZUhhc2guSEFTSF9MRU5HVEggPSAzMjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVIYXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueHash.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueMap.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueMap.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueMap = void 0;\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass ScValueMap extends ScValue_1.ScValue {\n    constructor(map) {\n        super();\n        this.map = map;\n    }\n    mapValue() {\n        return this;\n    }\n    getType() {\n        return Abi_1.TypeIndex.Map;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    size() {\n        return this.map.size;\n    }\n    isEmpty() {\n        return this.size() === 0;\n    }\n}\nexports.ScValueMap = ScValueMap;\n//# sourceMappingURL=ScValueMap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZU1hcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsa0JBQWtCLG1CQUFPLENBQUMsOEdBQVc7QUFDckMsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3ZhbHVlL1NjVmFsdWVNYXAuanM/NDhhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2NWYWx1ZU1hcCA9IHZvaWQgMDtcbmNvbnN0IFNjVmFsdWVfMSA9IHJlcXVpcmUoXCIuL1NjVmFsdWVcIik7XG5jb25zdCBBYmlfMSA9IHJlcXVpcmUoXCIuLi90eXBlcy9BYmlcIik7XG5jbGFzcyBTY1ZhbHVlTWFwIGV4dGVuZHMgU2NWYWx1ZV8xLlNjVmFsdWUge1xuICAgIGNvbnN0cnVjdG9yKG1hcCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLm1hcCA9IG1hcDtcbiAgICB9XG4gICAgbWFwVmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBnZXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gQWJpXzEuVHlwZUluZGV4Lk1hcDtcbiAgICB9XG4gICAgZ2V0KGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAuZ2V0KGtleSk7XG4gICAgfVxuICAgIHNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5zaXplO1xuICAgIH1cbiAgICBpc0VtcHR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaXplKCkgPT09IDA7XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlTWFwID0gU2NWYWx1ZU1hcDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVNYXAuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueMap.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueNumber.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueNumber.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueNumber = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(action-browser)/./node_modules/bn.js/lib/bn.js\"));\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nclass ScValueNumber extends ScValue_1.ScValue {\n    constructor(type, value) {\n        super();\n        this.type = type;\n        this.number = value;\n    }\n    getType() {\n        return this.type;\n    }\n    asNumber() {\n        if (typeof this.number === \"number\") {\n            return this.number;\n        }\n        else {\n            throw new Error(`Cannot read integer for type: ${this.typeName()}`);\n        }\n    }\n    asBN() {\n        if (typeof this.number === \"number\") {\n            return new bn_js_1.default(this.number);\n        }\n        else {\n            return this.number;\n        }\n    }\n}\nexports.ScValueNumber = ScValueNumber;\n//# sourceMappingURL=ScValueNumber.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZU51bWJlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixnQ0FBZ0MsbUJBQU8sQ0FBQyw4REFBTztBQUMvQyxrQkFBa0IsbUJBQU8sQ0FBQyw4R0FBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGdCQUFnQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZU51bWJlci5qcz8yM2E2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY1ZhbHVlTnVtYmVyID0gdm9pZCAwO1xuY29uc3QgYm5fanNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYm4uanNcIikpO1xuY29uc3QgU2NWYWx1ZV8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZVwiKTtcbmNsYXNzIFNjVmFsdWVOdW1iZXIgZXh0ZW5kcyBTY1ZhbHVlXzEuU2NWYWx1ZSB7XG4gICAgY29uc3RydWN0b3IodHlwZSwgdmFsdWUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5udW1iZXIgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHlwZTtcbiAgICB9XG4gICAgYXNOdW1iZXIoKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5udW1iZXIgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm51bWJlcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IHJlYWQgaW50ZWdlciBmb3IgdHlwZTogJHt0aGlzLnR5cGVOYW1lKCl9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXNCTigpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm51bWJlciA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBibl9qc18xLmRlZmF1bHQodGhpcy5udW1iZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMubnVtYmVyO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlTnVtYmVyID0gU2NWYWx1ZU51bWJlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVOdW1iZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueNumber.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueOption.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueOption.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueOption = void 0;\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass ScValueOption extends ScValue_1.ScValue {\n    constructor(innerValue) {\n        super();\n        this.innerValue = innerValue;\n    }\n    optionValue() {\n        return this;\n    }\n    isSome() {\n        return this.innerValue !== null;\n    }\n    getType() {\n        return Abi_1.TypeIndex.Option;\n    }\n    valueOrUndefined(callback) {\n        if (this.innerValue != null) {\n            return callback(this.innerValue);\n        }\n    }\n}\nexports.ScValueOption = ScValueOption;\n//# sourceMappingURL=ScValueOption.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZU9wdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsa0JBQWtCLG1CQUFPLENBQUMsOEdBQVc7QUFDckMsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi92YWx1ZS9TY1ZhbHVlT3B0aW9uLmpzPzU2ZjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjVmFsdWVPcHRpb24gPSB2b2lkIDA7XG5jb25zdCBTY1ZhbHVlXzEgPSByZXF1aXJlKFwiLi9TY1ZhbHVlXCIpO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY2xhc3MgU2NWYWx1ZU9wdGlvbiBleHRlbmRzIFNjVmFsdWVfMS5TY1ZhbHVlIHtcbiAgICBjb25zdHJ1Y3Rvcihpbm5lclZhbHVlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuaW5uZXJWYWx1ZSA9IGlubmVyVmFsdWU7XG4gICAgfVxuICAgIG9wdGlvblZhbHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgaXNTb21lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbm5lclZhbHVlICE9PSBudWxsO1xuICAgIH1cbiAgICBnZXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gQWJpXzEuVHlwZUluZGV4Lk9wdGlvbjtcbiAgICB9XG4gICAgdmFsdWVPclVuZGVmaW5lZChjYWxsYmFjaykge1xuICAgICAgICBpZiAodGhpcy5pbm5lclZhbHVlICE9IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayh0aGlzLmlubmVyVmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlT3B0aW9uID0gU2NWYWx1ZU9wdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVPcHRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueOption.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValuePublicKey.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValuePublicKey.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValuePublicKey = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nclass ScValuePublicKey extends ScValue_1.ScValue {\n    constructor(value) {\n        super();\n        if (value.length !== ScValuePublicKey.PUBLIC_KEY_LENGTH) {\n            throw new Error(`PublicKey expects exactly ${ScValuePublicKey.PUBLIC_KEY_LENGTH} bytes, but found ${value.length}`);\n        }\n        this.value = value;\n    }\n    getType() {\n        return Abi_1.TypeIndex.PublicKey;\n    }\n    publicKeyValue() {\n        return this;\n    }\n}\nexports.ScValuePublicKey = ScValuePublicKey;\nScValuePublicKey.PUBLIC_KEY_LENGTH = 33;\n//# sourceMappingURL=ScValuePublicKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZVB1YmxpY0tleS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDLGtCQUFrQixtQkFBTyxDQUFDLDhHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELG9DQUFvQyxtQkFBbUIsYUFBYTtBQUM3SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZVB1YmxpY0tleS5qcz82NzY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY1ZhbHVlUHVibGljS2V5ID0gdm9pZCAwO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY29uc3QgU2NWYWx1ZV8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZVwiKTtcbmNsYXNzIFNjVmFsdWVQdWJsaWNLZXkgZXh0ZW5kcyBTY1ZhbHVlXzEuU2NWYWx1ZSB7XG4gICAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCAhPT0gU2NWYWx1ZVB1YmxpY0tleS5QVUJMSUNfS0VZX0xFTkdUSCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQdWJsaWNLZXkgZXhwZWN0cyBleGFjdGx5ICR7U2NWYWx1ZVB1YmxpY0tleS5QVUJMSUNfS0VZX0xFTkdUSH0gYnl0ZXMsIGJ1dCBmb3VuZCAke3ZhbHVlLmxlbmd0aH1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgfVxuICAgIGdldFR5cGUoKSB7XG4gICAgICAgIHJldHVybiBBYmlfMS5UeXBlSW5kZXguUHVibGljS2V5O1xuICAgIH1cbiAgICBwdWJsaWNLZXlWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlUHVibGljS2V5ID0gU2NWYWx1ZVB1YmxpY0tleTtcblNjVmFsdWVQdWJsaWNLZXkuUFVCTElDX0tFWV9MRU5HVEggPSAzMztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVQdWJsaWNLZXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValuePublicKey.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSet.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSet.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueSet = void 0;\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass ScValueSet extends ScValue_1.ScValue {\n    constructor(values) {\n        super();\n        this.values = values;\n    }\n    size() {\n        return this.values.length;\n    }\n    isEmpty() {\n        return this.values.length === 0;\n    }\n    get(index) {\n        return this.values[index];\n    }\n    getType() {\n        return Abi_1.TypeIndex.Set;\n    }\n    setValue() {\n        return this;\n    }\n}\nexports.ScValueSet = ScValueSet;\n//# sourceMappingURL=ScValueSet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZVNldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsa0JBQWtCLG1CQUFPLENBQUMsOEdBQVc7QUFDckMsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3ZhbHVlL1NjVmFsdWVTZXQuanM/YjY0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2NWYWx1ZVNldCA9IHZvaWQgMDtcbmNvbnN0IFNjVmFsdWVfMSA9IHJlcXVpcmUoXCIuL1NjVmFsdWVcIik7XG5jb25zdCBBYmlfMSA9IHJlcXVpcmUoXCIuLi90eXBlcy9BYmlcIik7XG5jbGFzcyBTY1ZhbHVlU2V0IGV4dGVuZHMgU2NWYWx1ZV8xLlNjVmFsdWUge1xuICAgIGNvbnN0cnVjdG9yKHZhbHVlcykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnZhbHVlcyA9IHZhbHVlcztcbiAgICB9XG4gICAgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWVzLmxlbmd0aDtcbiAgICB9XG4gICAgaXNFbXB0eSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWVzLmxlbmd0aCA9PT0gMDtcbiAgICB9XG4gICAgZ2V0KGluZGV4KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlc1tpbmRleF07XG4gICAgfVxuICAgIGdldFR5cGUoKSB7XG4gICAgICAgIHJldHVybiBBYmlfMS5UeXBlSW5kZXguU2V0O1xuICAgIH1cbiAgICBzZXRWYWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxufVxuZXhwb3J0cy5TY1ZhbHVlU2V0ID0gU2NWYWx1ZVNldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVTZXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSet.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSignature.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSignature.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueSignature = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nclass ScValueSignature extends ScValue_1.ScValue {\n    constructor(value) {\n        super();\n        if (value.length !== ScValueSignature.SIGNATURE_LENGTH) {\n            throw new Error(`Signature expects exactly ${ScValueSignature.SIGNATURE_LENGTH} bytes, but found ${value.length}`);\n        }\n        this.value = value;\n    }\n    getType() {\n        return Abi_1.TypeIndex.Signature;\n    }\n    signatureValue() {\n        return this;\n    }\n}\nexports.ScValueSignature = ScValueSignature;\nScValueSignature.SIGNATURE_LENGTH = 65;\n//# sourceMappingURL=ScValueSignature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZVNpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDLGtCQUFrQixtQkFBTyxDQUFDLDhHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELG1DQUFtQyxtQkFBbUIsYUFBYTtBQUM1SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZVNpZ25hdHVyZS5qcz9kZmJiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY1ZhbHVlU2lnbmF0dXJlID0gdm9pZCAwO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY29uc3QgU2NWYWx1ZV8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZVwiKTtcbmNsYXNzIFNjVmFsdWVTaWduYXR1cmUgZXh0ZW5kcyBTY1ZhbHVlXzEuU2NWYWx1ZSB7XG4gICAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKHZhbHVlLmxlbmd0aCAhPT0gU2NWYWx1ZVNpZ25hdHVyZS5TSUdOQVRVUkVfTEVOR1RIKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFNpZ25hdHVyZSBleHBlY3RzIGV4YWN0bHkgJHtTY1ZhbHVlU2lnbmF0dXJlLlNJR05BVFVSRV9MRU5HVEh9IGJ5dGVzLCBidXQgZm91bmQgJHt2YWx1ZS5sZW5ndGh9YCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gQWJpXzEuVHlwZUluZGV4LlNpZ25hdHVyZTtcbiAgICB9XG4gICAgc2lnbmF0dXJlVmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cbmV4cG9ydHMuU2NWYWx1ZVNpZ25hdHVyZSA9IFNjVmFsdWVTaWduYXR1cmU7XG5TY1ZhbHVlU2lnbmF0dXJlLlNJR05BVFVSRV9MRU5HVEggPSA2NTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNjVmFsdWVTaWduYXR1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueSignature.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueString.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueString.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueString = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nclass ScValueString extends ScValue_1.ScValue {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    getType() {\n        return Abi_1.TypeIndex.String;\n    }\n    stringValue() {\n        return this.value;\n    }\n}\nexports.ScValueString = ScValueString;\n//# sourceMappingURL=ScValueString.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZVN0cmluZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDLGtCQUFrQixtQkFBTyxDQUFDLDhHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3ZhbHVlL1NjVmFsdWVTdHJpbmcuanM/YzI0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2NWYWx1ZVN0cmluZyA9IHZvaWQgMDtcbmNvbnN0IEFiaV8xID0gcmVxdWlyZShcIi4uL3R5cGVzL0FiaVwiKTtcbmNvbnN0IFNjVmFsdWVfMSA9IHJlcXVpcmUoXCIuL1NjVmFsdWVcIik7XG5jbGFzcyBTY1ZhbHVlU3RyaW5nIGV4dGVuZHMgU2NWYWx1ZV8xLlNjVmFsdWUge1xuICAgIGNvbnN0cnVjdG9yKHZhbHVlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gICAgZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIEFiaV8xLlR5cGVJbmRleC5TdHJpbmc7XG4gICAgfVxuICAgIHN0cmluZ1ZhbHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9XG59XG5leHBvcnRzLlNjVmFsdWVTdHJpbmcgPSBTY1ZhbHVlU3RyaW5nO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2NWYWx1ZVN0cmluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueString.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueStruct.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueStruct.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueStruct = void 0;\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass ScValueStruct extends ScValue_1.ScValue {\n    constructor(name, fieldMap) {\n        super();\n        this.name = name;\n        this.fieldsMap = fieldMap;\n    }\n    getType() {\n        return Abi_1.TypeIndex.Named;\n    }\n    size() {\n        return this.fieldsMap.size;\n    }\n    getFieldValue(fieldName) {\n        return this.fieldsMap.get(fieldName);\n    }\n    structValue() {\n        return this;\n    }\n}\nexports.ScValueStruct = ScValueStruct;\n//# sourceMappingURL=ScValueStruct.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZVN0cnVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsa0JBQWtCLG1CQUFPLENBQUMsOEdBQVc7QUFDckMsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZVN0cnVjdC5qcz9mODgwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TY1ZhbHVlU3RydWN0ID0gdm9pZCAwO1xuY29uc3QgU2NWYWx1ZV8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZVwiKTtcbmNvbnN0IEFiaV8xID0gcmVxdWlyZShcIi4uL3R5cGVzL0FiaVwiKTtcbmNsYXNzIFNjVmFsdWVTdHJ1Y3QgZXh0ZW5kcyBTY1ZhbHVlXzEuU2NWYWx1ZSB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgZmllbGRNYXApIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5maWVsZHNNYXAgPSBmaWVsZE1hcDtcbiAgICB9XG4gICAgZ2V0VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIEFiaV8xLlR5cGVJbmRleC5OYW1lZDtcbiAgICB9XG4gICAgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmllbGRzTWFwLnNpemU7XG4gICAgfVxuICAgIGdldEZpZWxkVmFsdWUoZmllbGROYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZpZWxkc01hcC5nZXQoZmllbGROYW1lKTtcbiAgICB9XG4gICAgc3RydWN0VmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbn1cbmV4cG9ydHMuU2NWYWx1ZVN0cnVjdCA9IFNjVmFsdWVTdHJ1Y3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TY1ZhbHVlU3RydWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueStruct.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueVector.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueVector.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ScValueVector = void 0;\nconst ScValue_1 = __webpack_require__(/*! ./ScValue */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValue.js\");\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nconst ScValueNumber_1 = __webpack_require__(/*! ./ScValueNumber */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueNumber.js\");\nclass ScValueVector extends ScValue_1.ScValue {\n    constructor(values) {\n        super();\n        this.vals = values;\n    }\n    static fromBytes(bytes) {\n        const elements = [];\n        for (const byte of bytes) {\n            elements.push(new ScValueNumber_1.ScValueNumber(Abi_1.TypeIndex.u8, byte));\n        }\n        return new ScValueVector(elements);\n    }\n    size() {\n        return this.vals.length;\n    }\n    isEmpty() {\n        return this.vals.length === 0;\n    }\n    get(index) {\n        return this.vals[index];\n    }\n    getType() {\n        return Abi_1.TypeIndex.Vec;\n    }\n    vecValue() {\n        return this;\n    }\n    values() {\n        return this.vals;\n    }\n    vecU8Value() {\n        if (this.size() === 0) {\n            return Buffer.from([]);\n        }\n        else if (this.get(0).getType() !== Abi_1.TypeIndex.u8) {\n            throw new Error(\"Cannot read Vec u8 for current type\");\n        }\n        else {\n            return Buffer.from(this.vals.map((sc) => sc.asNumber()));\n        }\n    }\n}\nexports.ScValueVector = ScValueVector;\n//# sourceMappingURL=ScValueVector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vdmFsdWUvU2NWYWx1ZVZlY3Rvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsa0JBQWtCLG1CQUFPLENBQUMsOEdBQVc7QUFDckMsY0FBYyxtQkFBTyxDQUFDLDZHQUFjO0FBQ3BDLHdCQUF3QixtQkFBTyxDQUFDLDBIQUFpQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi92YWx1ZS9TY1ZhbHVlVmVjdG9yLmpzPzA3MDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjVmFsdWVWZWN0b3IgPSB2b2lkIDA7XG5jb25zdCBTY1ZhbHVlXzEgPSByZXF1aXJlKFwiLi9TY1ZhbHVlXCIpO1xuY29uc3QgQWJpXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvQWJpXCIpO1xuY29uc3QgU2NWYWx1ZU51bWJlcl8xID0gcmVxdWlyZShcIi4vU2NWYWx1ZU51bWJlclwiKTtcbmNsYXNzIFNjVmFsdWVWZWN0b3IgZXh0ZW5kcyBTY1ZhbHVlXzEuU2NWYWx1ZSB7XG4gICAgY29uc3RydWN0b3IodmFsdWVzKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMudmFscyA9IHZhbHVlcztcbiAgICB9XG4gICAgc3RhdGljIGZyb21CeXRlcyhieXRlcykge1xuICAgICAgICBjb25zdCBlbGVtZW50cyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGJ5dGUgb2YgYnl0ZXMpIHtcbiAgICAgICAgICAgIGVsZW1lbnRzLnB1c2gobmV3IFNjVmFsdWVOdW1iZXJfMS5TY1ZhbHVlTnVtYmVyKEFiaV8xLlR5cGVJbmRleC51OCwgYnl0ZSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgU2NWYWx1ZVZlY3RvcihlbGVtZW50cyk7XG4gICAgfVxuICAgIHNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHMubGVuZ3RoO1xuICAgIH1cbiAgICBpc0VtcHR5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy52YWxzLmxlbmd0aCA9PT0gMDtcbiAgICB9XG4gICAgZ2V0KGluZGV4KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHNbaW5kZXhdO1xuICAgIH1cbiAgICBnZXRUeXBlKCkge1xuICAgICAgICByZXR1cm4gQWJpXzEuVHlwZUluZGV4LlZlYztcbiAgICB9XG4gICAgdmVjVmFsdWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICB2YWx1ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHM7XG4gICAgfVxuICAgIHZlY1U4VmFsdWUoKSB7XG4gICAgICAgIGlmICh0aGlzLnNpemUoKSA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKFtdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLmdldCgwKS5nZXRUeXBlKCkgIT09IEFiaV8xLlR5cGVJbmRleC51OCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHJlYWQgVmVjIHU4IGZvciBjdXJyZW50IHR5cGVcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20odGhpcy52YWxzLm1hcCgoc2MpID0+IHNjLmFzTnVtYmVyKCkpKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuU2NWYWx1ZVZlY3RvciA9IFNjVmFsdWVWZWN0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TY1ZhbHVlVmVjdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/value/ScValueVector.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkInputBuilder.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkInputBuilder.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ZkInputBuilder = void 0;\nconst AbstractBuilder_1 = __webpack_require__(/*! ../builder/AbstractBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/builder/AbstractBuilder.js\");\nconst FnKinds_1 = __webpack_require__(/*! ../parser/FnKinds */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/parser/FnKinds.js\");\nconst ZkInputProducer_1 = __webpack_require__(/*! ./ZkInputProducer */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkInputProducer.js\");\nconst AbiBitOutput_1 = __webpack_require__(/*! ../abistreams/AbiBitOutput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitOutput.js\");\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nclass ZkInputBuilder extends AbstractBuilder_1.AbstractBuilder {\n    constructor(contractAbi, zkInputProducer) {\n        super(contractAbi, \"\", zkInputProducer);\n    }\n    static createZkInputBuilder(name, contractAbi) {\n        const fn = contractAbi.getFunctionByName(name);\n        if (fn === undefined) {\n            throw new Error(`Contract does not have function with name ${name}`);\n        }\n        if (fn.kind !== FnKinds_1.FnKinds.zkSecretInput && fn.kind !== FnKinds_1.FnKinds.zkSecretInputWithExplicitType) {\n            throw Error(`Function ${name} is not a secret input function`);\n        }\n        return new ZkInputBuilder(contractAbi, new ZkInputProducer_1.ZkInputProducer(fn));\n    }\n    getBits() {\n        return bitmanipulation_ts_1.BitOutput.serializeBits((out) => {\n            this.getAggregateProducer().write(new AbiBitOutput_1.AbiBitOutput(out));\n        });\n    }\n}\nexports.ZkInputBuilder = ZkInputBuilder;\n//# sourceMappingURL=ZkInputBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vemsvWmtJbnB1dEJ1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLDBCQUEwQixtQkFBTyxDQUFDLHlJQUE0QjtBQUM5RCxrQkFBa0IsbUJBQU8sQ0FBQyx1SEFBbUI7QUFDN0MsMEJBQTBCLG1CQUFPLENBQUMsMkhBQW1CO0FBQ3JELHVCQUF1QixtQkFBTyxDQUFDLHlJQUE0QjtBQUMzRCw2QkFBNkIsbUJBQU8sQ0FBQyxpSUFBbUM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsS0FBSztBQUM5RTtBQUNBO0FBQ0Esb0NBQW9DLE1BQU07QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYWJpLWNsaWVudC90YXJnZXQvbWFpbi96ay9aa0lucHV0QnVpbGRlci5qcz82Y2FlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5aa0lucHV0QnVpbGRlciA9IHZvaWQgMDtcbmNvbnN0IEFic3RyYWN0QnVpbGRlcl8xID0gcmVxdWlyZShcIi4uL2J1aWxkZXIvQWJzdHJhY3RCdWlsZGVyXCIpO1xuY29uc3QgRm5LaW5kc18xID0gcmVxdWlyZShcIi4uL3BhcnNlci9GbktpbmRzXCIpO1xuY29uc3QgWmtJbnB1dFByb2R1Y2VyXzEgPSByZXF1aXJlKFwiLi9aa0lucHV0UHJvZHVjZXJcIik7XG5jb25zdCBBYmlCaXRPdXRwdXRfMSA9IHJlcXVpcmUoXCIuLi9hYmlzdHJlYW1zL0FiaUJpdE91dHB1dFwiKTtcbmNvbnN0IGJpdG1hbmlwdWxhdGlvbl90c18xID0gcmVxdWlyZShcIkBzZWNhdGEtcHVibGljL2JpdG1hbmlwdWxhdGlvbi10c1wiKTtcbmNsYXNzIFprSW5wdXRCdWlsZGVyIGV4dGVuZHMgQWJzdHJhY3RCdWlsZGVyXzEuQWJzdHJhY3RCdWlsZGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb250cmFjdEFiaSwgemtJbnB1dFByb2R1Y2VyKSB7XG4gICAgICAgIHN1cGVyKGNvbnRyYWN0QWJpLCBcIlwiLCB6a0lucHV0UHJvZHVjZXIpO1xuICAgIH1cbiAgICBzdGF0aWMgY3JlYXRlWmtJbnB1dEJ1aWxkZXIobmFtZSwgY29udHJhY3RBYmkpIHtcbiAgICAgICAgY29uc3QgZm4gPSBjb250cmFjdEFiaS5nZXRGdW5jdGlvbkJ5TmFtZShuYW1lKTtcbiAgICAgICAgaWYgKGZuID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ29udHJhY3QgZG9lcyBub3QgaGF2ZSBmdW5jdGlvbiB3aXRoIG5hbWUgJHtuYW1lfWApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmbi5raW5kICE9PSBGbktpbmRzXzEuRm5LaW5kcy56a1NlY3JldElucHV0ICYmIGZuLmtpbmQgIT09IEZuS2luZHNfMS5GbktpbmRzLnprU2VjcmV0SW5wdXRXaXRoRXhwbGljaXRUeXBlKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgRnVuY3Rpb24gJHtuYW1lfSBpcyBub3QgYSBzZWNyZXQgaW5wdXQgZnVuY3Rpb25gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFprSW5wdXRCdWlsZGVyKGNvbnRyYWN0QWJpLCBuZXcgWmtJbnB1dFByb2R1Y2VyXzEuWmtJbnB1dFByb2R1Y2VyKGZuKSk7XG4gICAgfVxuICAgIGdldEJpdHMoKSB7XG4gICAgICAgIHJldHVybiBiaXRtYW5pcHVsYXRpb25fdHNfMS5CaXRPdXRwdXQuc2VyaWFsaXplQml0cygob3V0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLmdldEFnZ3JlZ2F0ZVByb2R1Y2VyKCkud3JpdGUobmV3IEFiaUJpdE91dHB1dF8xLkFiaUJpdE91dHB1dChvdXQpKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5aa0lucHV0QnVpbGRlciA9IFprSW5wdXRCdWlsZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9WmtJbnB1dEJ1aWxkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkInputBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkInputProducer.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkInputProducer.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ZkInputProducer = void 0;\nconst Abi_1 = __webpack_require__(/*! ../types/Abi */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/types/Abi.js\");\nclass ZkInputProducer {\n    constructor(fn) {\n        this.fn = fn;\n    }\n    addElement(argument) {\n        if (this.element !== undefined) {\n            throw Error(\"Cannot add secret input twice\");\n        }\n        else {\n            this.element = argument;\n        }\n    }\n    getFieldName() {\n        return \"secret_input\";\n    }\n    /**\n     * Returns the TypeSpec of the secret argument. If kind is ZkSecretInput a default type of i32 is\n     * returned.\n     *\n     * @returns the TypeSpec of the secret argument\n     */\n    getTypeSpecForElement() {\n        var _a, _b;\n        return (_b = (_a = this.fn.secretArgument) === null || _a === void 0 ? void 0 : _a.type) !== null && _b !== void 0 ? _b : { typeIndex: Abi_1.TypeIndex.i32 };\n    }\n    write(out) {\n        if (this.element === undefined) {\n            throw new Error(\"Missing secret input\");\n        }\n        else {\n            this.element.write(out);\n        }\n    }\n}\nexports.ZkInputProducer = ZkInputProducer;\n//# sourceMappingURL=ZkInputProducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vemsvWmtJbnB1dFByb2R1Y2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixjQUFjLG1CQUFPLENBQUMsNkdBQWM7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9JQUFvSTtBQUNwSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9hYmktY2xpZW50L3RhcmdldC9tYWluL3prL1prSW5wdXRQcm9kdWNlci5qcz85NmYwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5aa0lucHV0UHJvZHVjZXIgPSB2b2lkIDA7XG5jb25zdCBBYmlfMSA9IHJlcXVpcmUoXCIuLi90eXBlcy9BYmlcIik7XG5jbGFzcyBaa0lucHV0UHJvZHVjZXIge1xuICAgIGNvbnN0cnVjdG9yKGZuKSB7XG4gICAgICAgIHRoaXMuZm4gPSBmbjtcbiAgICB9XG4gICAgYWRkRWxlbWVudChhcmd1bWVudCkge1xuICAgICAgICBpZiAodGhpcy5lbGVtZW50ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiQ2Fubm90IGFkZCBzZWNyZXQgaW5wdXQgdHdpY2VcIik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmVsZW1lbnQgPSBhcmd1bWVudDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRGaWVsZE5hbWUoKSB7XG4gICAgICAgIHJldHVybiBcInNlY3JldF9pbnB1dFwiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBUeXBlU3BlYyBvZiB0aGUgc2VjcmV0IGFyZ3VtZW50LiBJZiBraW5kIGlzIFprU2VjcmV0SW5wdXQgYSBkZWZhdWx0IHR5cGUgb2YgaTMyIGlzXG4gICAgICogcmV0dXJuZWQuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0aGUgVHlwZVNwZWMgb2YgdGhlIHNlY3JldCBhcmd1bWVudFxuICAgICAqL1xuICAgIGdldFR5cGVTcGVjRm9yRWxlbWVudCgpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgcmV0dXJuIChfYiA9IChfYSA9IHRoaXMuZm4uc2VjcmV0QXJndW1lbnQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50eXBlKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB7IHR5cGVJbmRleDogQWJpXzEuVHlwZUluZGV4LmkzMiB9O1xuICAgIH1cbiAgICB3cml0ZShvdXQpIHtcbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJNaXNzaW5nIHNlY3JldCBpbnB1dFwiKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZWxlbWVudC53cml0ZShvdXQpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5aa0lucHV0UHJvZHVjZXIgPSBaa0lucHV0UHJvZHVjZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1aa0lucHV0UHJvZHVjZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkInputProducer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkSecretReader.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkSecretReader.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ZkSecretReader = void 0;\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nconst AbiBitInput_1 = __webpack_require__(/*! ../abistreams/AbiBitInput */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/abistreams/AbiBitInput.js\");\nconst AbstractReader_1 = __webpack_require__(/*! ../AbstractReader */ \"(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/AbstractReader.js\");\nclass ZkSecretReader extends AbstractReader_1.AbstractReader {\n    constructor(input, contractAbi) {\n        if (input instanceof bitmanipulation_ts_1.BitInput) {\n            super(new AbiBitInput_1.AbiBitInput(input), contractAbi.namedTypes);\n        }\n        else {\n            super(new AbiBitInput_1.AbiBitInput(new bitmanipulation_ts_1.BitInput(input.data)), contractAbi.namedTypes);\n        }\n    }\n    readSecret(type) {\n        return this.readGeneric(type);\n    }\n    readMap() {\n        throw new Error(\"Type Map is not supported in secret variables\");\n    }\n    readSet() {\n        throw new Error(\"Type Set is not supported in secret variables\");\n    }\n    readAvlTreeMap() {\n        throw new Error(\"Type AvlTreeMap is not supported in secret variables\");\n    }\n}\nexports.ZkSecretReader = ZkSecretReader;\n//# sourceMappingURL=ZkSecretReader.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vemsvWmtTZWNyZXRSZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLDZCQUE2QixtQkFBTyxDQUFDLGlJQUFtQztBQUN4RSxzQkFBc0IsbUJBQU8sQ0FBQyx1SUFBMkI7QUFDekQseUJBQXlCLG1CQUFPLENBQUMsdUhBQW1CO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2FiaS1jbGllbnQvdGFyZ2V0L21haW4vemsvWmtTZWNyZXRSZWFkZXIuanM/Y2E4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuWmtTZWNyZXRSZWFkZXIgPSB2b2lkIDA7XG5jb25zdCBiaXRtYW5pcHVsYXRpb25fdHNfMSA9IHJlcXVpcmUoXCJAc2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHNcIik7XG5jb25zdCBBYmlCaXRJbnB1dF8xID0gcmVxdWlyZShcIi4uL2FiaXN0cmVhbXMvQWJpQml0SW5wdXRcIik7XG5jb25zdCBBYnN0cmFjdFJlYWRlcl8xID0gcmVxdWlyZShcIi4uL0Fic3RyYWN0UmVhZGVyXCIpO1xuY2xhc3MgWmtTZWNyZXRSZWFkZXIgZXh0ZW5kcyBBYnN0cmFjdFJlYWRlcl8xLkFic3RyYWN0UmVhZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCwgY29udHJhY3RBYmkpIHtcbiAgICAgICAgaWYgKGlucHV0IGluc3RhbmNlb2YgYml0bWFuaXB1bGF0aW9uX3RzXzEuQml0SW5wdXQpIHtcbiAgICAgICAgICAgIHN1cGVyKG5ldyBBYmlCaXRJbnB1dF8xLkFiaUJpdElucHV0KGlucHV0KSwgY29udHJhY3RBYmkubmFtZWRUeXBlcyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdXBlcihuZXcgQWJpQml0SW5wdXRfMS5BYmlCaXRJbnB1dChuZXcgYml0bWFuaXB1bGF0aW9uX3RzXzEuQml0SW5wdXQoaW5wdXQuZGF0YSkpLCBjb250cmFjdEFiaS5uYW1lZFR5cGVzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZWFkU2VjcmV0KHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVhZEdlbmVyaWModHlwZSk7XG4gICAgfVxuICAgIHJlYWRNYXAoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlR5cGUgTWFwIGlzIG5vdCBzdXBwb3J0ZWQgaW4gc2VjcmV0IHZhcmlhYmxlc1wiKTtcbiAgICB9XG4gICAgcmVhZFNldCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZSBTZXQgaXMgbm90IHN1cHBvcnRlZCBpbiBzZWNyZXQgdmFyaWFibGVzXCIpO1xuICAgIH1cbiAgICByZWFkQXZsVHJlZU1hcCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHlwZSBBdmxUcmVlTWFwIGlzIG5vdCBzdXBwb3J0ZWQgaW4gc2VjcmV0IHZhcmlhYmxlc1wiKTtcbiAgICB9XG59XG5leHBvcnRzLlprU2VjcmV0UmVhZGVyID0gWmtTZWNyZXRSZWFkZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1aa1NlY3JldFJlYWRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/abi-client/target/main/zk/ZkSecretReader.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/CryptoUtils.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/CryptoUtils.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CryptoUtils = void 0;\nconst elliptic_1 = __webpack_require__(/*! elliptic */ \"(action-browser)/./node_modules/elliptic/lib/elliptic.js\");\nconst hash_js_1 = __webpack_require__(/*! hash.js */ \"(action-browser)/./node_modules/hash.js/lib/hash.js\");\nconst ec = new elliptic_1.ec(\"secp256k1\");\n/**\n * Serializes a signature into byte.\n * @param signature the signature.\n * @returns the bytes.\n */\nfunction signatureToBuffer(signature) {\n    if (signature.recoveryParam == null) {\n        throw new Error(\"Recovery parameter is null\");\n    }\n    return Buffer.concat([\n        Buffer.from([signature.recoveryParam]),\n        signature.r.toArrayLike(Buffer, \"be\", 32),\n        signature.s.toArrayLike(Buffer, \"be\", 32),\n    ]);\n}\n/**\n * Computes the account address based on a key pair.\n * @param keyPair the keypair of the account.\n * @returns the address of the account.\n */\nfunction keyPairToAccountAddress(keyPair) {\n    const publicKey = keyPair.getPublic(false, \"array\");\n    const hash = (0, hash_js_1.sha256)();\n    hash.update(publicKey);\n    return \"00\" + hash.digest(\"hex\").substring(24);\n}\n/**\n * Creates a keypair based on the private key.\n * @param privateKey the private key as a hex string.\n * @returns the keypair.\n */\nfunction privateKeyToKeypair(privateKey) {\n    return ec.keyFromPrivate(privateKey);\n}\n/**\n * Hashes the buffers.\n * @param buffers the buffers to be hashed.\n * @returns the hash.\n */\nfunction hashBuffers(buffers) {\n    const hash = (0, hash_js_1.sha256)();\n    for (const buffer of buffers) {\n        hash.update(buffer);\n    }\n    return Buffer.from(hash.digest());\n}\n/**\n * Hashes the buffer.\n * @param buffer the buffer to be hashed.\n * @returns the hash.\n */\nfunction hashBuffer(buffer) {\n    return hashBuffers([buffer]);\n}\n/** A collection of useful crypto functions. */\nexports.CryptoUtils = {\n    signatureToBuffer,\n    keyPairToAccountAddress,\n    privateKeyToKeypair,\n    hashBuffers,\n    hashBuffer,\n};\n//# sourceMappingURL=CryptoUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9DcnlwdG9VdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsbUJBQW1CLG1CQUFPLENBQUMsMEVBQVU7QUFDckMsa0JBQWtCLG1CQUFPLENBQUMsb0VBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vQ3J5cHRvVXRpbHMuanM/YzRiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ3J5cHRvVXRpbHMgPSB2b2lkIDA7XG5jb25zdCBlbGxpcHRpY18xID0gcmVxdWlyZShcImVsbGlwdGljXCIpO1xuY29uc3QgaGFzaF9qc18xID0gcmVxdWlyZShcImhhc2guanNcIik7XG5jb25zdCBlYyA9IG5ldyBlbGxpcHRpY18xLmVjKFwic2VjcDI1NmsxXCIpO1xuLyoqXG4gKiBTZXJpYWxpemVzIGEgc2lnbmF0dXJlIGludG8gYnl0ZS5cbiAqIEBwYXJhbSBzaWduYXR1cmUgdGhlIHNpZ25hdHVyZS5cbiAqIEByZXR1cm5zIHRoZSBieXRlcy5cbiAqL1xuZnVuY3Rpb24gc2lnbmF0dXJlVG9CdWZmZXIoc2lnbmF0dXJlKSB7XG4gICAgaWYgKHNpZ25hdHVyZS5yZWNvdmVyeVBhcmFtID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUmVjb3ZlcnkgcGFyYW1ldGVyIGlzIG51bGxcIik7XG4gICAgfVxuICAgIHJldHVybiBCdWZmZXIuY29uY2F0KFtcbiAgICAgICAgQnVmZmVyLmZyb20oW3NpZ25hdHVyZS5yZWNvdmVyeVBhcmFtXSksXG4gICAgICAgIHNpZ25hdHVyZS5yLnRvQXJyYXlMaWtlKEJ1ZmZlciwgXCJiZVwiLCAzMiksXG4gICAgICAgIHNpZ25hdHVyZS5zLnRvQXJyYXlMaWtlKEJ1ZmZlciwgXCJiZVwiLCAzMiksXG4gICAgXSk7XG59XG4vKipcbiAqIENvbXB1dGVzIHRoZSBhY2NvdW50IGFkZHJlc3MgYmFzZWQgb24gYSBrZXkgcGFpci5cbiAqIEBwYXJhbSBrZXlQYWlyIHRoZSBrZXlwYWlyIG9mIHRoZSBhY2NvdW50LlxuICogQHJldHVybnMgdGhlIGFkZHJlc3Mgb2YgdGhlIGFjY291bnQuXG4gKi9cbmZ1bmN0aW9uIGtleVBhaXJUb0FjY291bnRBZGRyZXNzKGtleVBhaXIpIHtcbiAgICBjb25zdCBwdWJsaWNLZXkgPSBrZXlQYWlyLmdldFB1YmxpYyhmYWxzZSwgXCJhcnJheVwiKTtcbiAgICBjb25zdCBoYXNoID0gKDAsIGhhc2hfanNfMS5zaGEyNTYpKCk7XG4gICAgaGFzaC51cGRhdGUocHVibGljS2V5KTtcbiAgICByZXR1cm4gXCIwMFwiICsgaGFzaC5kaWdlc3QoXCJoZXhcIikuc3Vic3RyaW5nKDI0KTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIGtleXBhaXIgYmFzZWQgb24gdGhlIHByaXZhdGUga2V5LlxuICogQHBhcmFtIHByaXZhdGVLZXkgdGhlIHByaXZhdGUga2V5IGFzIGEgaGV4IHN0cmluZy5cbiAqIEByZXR1cm5zIHRoZSBrZXlwYWlyLlxuICovXG5mdW5jdGlvbiBwcml2YXRlS2V5VG9LZXlwYWlyKHByaXZhdGVLZXkpIHtcbiAgICByZXR1cm4gZWMua2V5RnJvbVByaXZhdGUocHJpdmF0ZUtleSk7XG59XG4vKipcbiAqIEhhc2hlcyB0aGUgYnVmZmVycy5cbiAqIEBwYXJhbSBidWZmZXJzIHRoZSBidWZmZXJzIHRvIGJlIGhhc2hlZC5cbiAqIEByZXR1cm5zIHRoZSBoYXNoLlxuICovXG5mdW5jdGlvbiBoYXNoQnVmZmVycyhidWZmZXJzKSB7XG4gICAgY29uc3QgaGFzaCA9ICgwLCBoYXNoX2pzXzEuc2hhMjU2KSgpO1xuICAgIGZvciAoY29uc3QgYnVmZmVyIG9mIGJ1ZmZlcnMpIHtcbiAgICAgICAgaGFzaC51cGRhdGUoYnVmZmVyKTtcbiAgICB9XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGhhc2guZGlnZXN0KCkpO1xufVxuLyoqXG4gKiBIYXNoZXMgdGhlIGJ1ZmZlci5cbiAqIEBwYXJhbSBidWZmZXIgdGhlIGJ1ZmZlciB0byBiZSBoYXNoZWQuXG4gKiBAcmV0dXJucyB0aGUgaGFzaC5cbiAqL1xuZnVuY3Rpb24gaGFzaEJ1ZmZlcihidWZmZXIpIHtcbiAgICByZXR1cm4gaGFzaEJ1ZmZlcnMoW2J1ZmZlcl0pO1xufVxuLyoqIEEgY29sbGVjdGlvbiBvZiB1c2VmdWwgY3J5cHRvIGZ1bmN0aW9ucy4gKi9cbmV4cG9ydHMuQ3J5cHRvVXRpbHMgPSB7XG4gICAgc2lnbmF0dXJlVG9CdWZmZXIsXG4gICAga2V5UGFpclRvQWNjb3VudEFkZHJlc3MsXG4gICAgcHJpdmF0ZUtleVRvS2V5cGFpcixcbiAgICBoYXNoQnVmZmVycyxcbiAgICBoYXNoQnVmZmVyLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNyeXB0b1V0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/CryptoUtils.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/ChainControllerApi.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/ChainControllerApi.js ***!
  \*************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ChainControllerApi = void 0;\nconst runtime = __importStar(__webpack_require__(/*! ../runtime */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/runtime.js\"));\nconst index_1 = __webpack_require__(/*! ../models/index */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/index.js\");\n/**\n *\n */\nclass ChainControllerApi extends runtime.BaseAPI {\n    /**\n     * Get a specific account by address.\n     */\n    getAccountRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['address'] == null) {\n                throw new runtime.RequiredError('address', 'Required parameter \"address\" was null or undefined when calling getAccount().');\n            }\n            const queryParameters = {};\n            if (requestParameters['blockTime'] != null) {\n                queryParameters['blockTime'] = requestParameters['blockTime'];\n            }\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/accounts/{address}`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters['address']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.AccountFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get a specific account by address.\n     */\n    getAccount(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getAccountRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Get information about the chain.\n     */\n    getChainRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            if (requestParameters['blockTime'] != null) {\n                queryParameters['blockTime'] = requestParameters['blockTime'];\n            }\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain`,\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ChainFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get information about the chain.\n     */\n    getChain() {\n        return __awaiter(this, arguments, void 0, function* (requestParameters = {}, initOverrides) {\n            const response = yield this.getChainRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Get a specific contract by address.\n     */\n    getContractRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['address'] == null) {\n                throw new runtime.RequiredError('address', 'Required parameter \"address\" was null or undefined when calling getContract().');\n            }\n            const queryParameters = {};\n            if (requestParameters['blockTime'] != null) {\n                queryParameters['blockTime'] = requestParameters['blockTime'];\n            }\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/contracts/{address}`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters['address']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ContractFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get a specific contract by address.\n     */\n    getContract(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getContractRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Get information about the avl tree such as size of the tree\n     */\n    getContractAvlInformationRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['address'] == null) {\n                throw new runtime.RequiredError('address', 'Required parameter \"address\" was null or undefined when calling getContractAvlInformation().');\n            }\n            if (requestParameters['treeId'] == null) {\n                throw new runtime.RequiredError('treeId', 'Required parameter \"treeId\" was null or undefined when calling getContractAvlInformation().');\n            }\n            const queryParameters = {};\n            if (requestParameters['blockTime'] != null) {\n                queryParameters['blockTime'] = requestParameters['blockTime'];\n            }\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/contracts/{address}/avl/{treeId}`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters['address']))).replace(`{${\"treeId\"}}`, encodeURIComponent(String(requestParameters['treeId']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.AvlInformationFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get information about the avl tree such as size of the tree\n     */\n    getContractAvlInformation(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getContractAvlInformationRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Get the modified keys of an AvlTree between two block times.\n     */\n    getContractAvlModifiedKeysRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['address'] == null) {\n                throw new runtime.RequiredError('address', 'Required parameter \"address\" was null or undefined when calling getContractAvlModifiedKeys().');\n            }\n            if (requestParameters['treeId'] == null) {\n                throw new runtime.RequiredError('treeId', 'Required parameter \"treeId\" was null or undefined when calling getContractAvlModifiedKeys().');\n            }\n            if (requestParameters['blockTime'] == null) {\n                throw new runtime.RequiredError('blockTime', 'Required parameter \"blockTime\" was null or undefined when calling getContractAvlModifiedKeys().');\n            }\n            const queryParameters = {};\n            if (requestParameters['blockTime'] != null) {\n                queryParameters['blockTime'] = requestParameters['blockTime'];\n            }\n            if (requestParameters['key'] != null) {\n                queryParameters['key'] = requestParameters['key'];\n            }\n            if (requestParameters['n'] != null) {\n                queryParameters['n'] = requestParameters['n'];\n            }\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/contracts/{address}/avl/{treeId}/diff`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters['address']))).replace(`{${\"treeId\"}}`, encodeURIComponent(String(requestParameters['treeId']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response);\n        });\n    }\n    /**\n     * Get the modified keys of an AvlTree between two block times.\n     */\n    getContractAvlModifiedKeys(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getContractAvlModifiedKeysRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Retrieves the next n entries of an avl tree from a key (Excluding the key itself). May return fewer than n entries if there are fewer entries left in the tree.\n     */\n    getContractAvlNextNRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['address'] == null) {\n                throw new runtime.RequiredError('address', 'Required parameter \"address\" was null or undefined when calling getContractAvlNextN().');\n            }\n            if (requestParameters['treeId'] == null) {\n                throw new runtime.RequiredError('treeId', 'Required parameter \"treeId\" was null or undefined when calling getContractAvlNextN().');\n            }\n            const queryParameters = {};\n            if (requestParameters['key'] != null) {\n                queryParameters['key'] = requestParameters['key'];\n            }\n            if (requestParameters['n'] != null) {\n                queryParameters['n'] = requestParameters['n'];\n            }\n            if (requestParameters['blockTime'] != null) {\n                queryParameters['blockTime'] = requestParameters['blockTime'];\n            }\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/contracts/{address}/avl/{treeId}/next`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters['address']))).replace(`{${\"treeId\"}}`, encodeURIComponent(String(requestParameters['treeId']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(index_1.AvlStateEntryFromJSON));\n        });\n    }\n    /**\n     * Retrieves the next n entries of an avl tree from a key (Excluding the key itself). May return fewer than n entries if there are fewer entries left in the tree.\n     */\n    getContractAvlNextN(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getContractAvlNextNRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Get the value matching the key in the specified avl tree and contract\n     */\n    getContractAvlValueRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['address'] == null) {\n                throw new runtime.RequiredError('address', 'Required parameter \"address\" was null or undefined when calling getContractAvlValue().');\n            }\n            if (requestParameters['treeId'] == null) {\n                throw new runtime.RequiredError('treeId', 'Required parameter \"treeId\" was null or undefined when calling getContractAvlValue().');\n            }\n            if (requestParameters['key'] == null) {\n                throw new runtime.RequiredError('key', 'Required parameter \"key\" was null or undefined when calling getContractAvlValue().');\n            }\n            const queryParameters = {};\n            if (requestParameters['blockTime'] != null) {\n                queryParameters['blockTime'] = requestParameters['blockTime'];\n            }\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/contracts/{address}/avl/{treeId}/value/{key}`.replace(`{${\"address\"}}`, encodeURIComponent(String(requestParameters['address']))).replace(`{${\"treeId\"}}`, encodeURIComponent(String(requestParameters['treeId']))).replace(`{${\"key\"}}`, encodeURIComponent(String(requestParameters['key']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.AvlStateValueFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get the value matching the key in the specified avl tree and contract\n     */\n    getContractAvlValue(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getContractAvlValueRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Put a transaction on the chain.\n     */\n    putTransactionRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['serializedTransaction'] == null) {\n                throw new runtime.RequiredError('serializedTransaction', 'Required parameter \"serializedTransaction\" was null or undefined when calling putTransaction().');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            headerParameters['Content-Type'] = 'application/json';\n            const response = yield this.request({\n                path: `/chain/transactions`,\n                method: 'PUT',\n                headers: headerParameters,\n                query: queryParameters,\n                body: (0, index_1.SerializedTransactionToJSON)(requestParameters['serializedTransaction']),\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.TransactionPointerFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Put a transaction on the chain.\n     */\n    putTransaction(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.putTransactionRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n}\nexports.ChainControllerApi = ChainControllerApi;\n//# sourceMappingURL=ChainControllerApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/ChainControllerApi.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/HealthResourceApi.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/HealthResourceApi.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HealthResourceApi = void 0;\nconst runtime = __importStar(__webpack_require__(/*! ../runtime */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/runtime.js\"));\n/**\n *\n */\nclass HealthResourceApi extends runtime.BaseAPI {\n    /**\n     * Used for healthchecks.\n     */\n    getHealthRaw(initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParameters = {};\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/health`,\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response);\n        });\n    }\n    /**\n     * Used for healthchecks.\n     */\n    getHealth(initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getHealthRaw(initOverrides);\n            return yield response.value();\n        });\n    }\n}\nexports.HealthResourceApi = HealthResourceApi;\n//# sourceMappingURL=HealthResourceApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9hcGlzL0hlYWx0aFJlc291cmNlQXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxjQUFjO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6Qiw2QkFBNkIsbUJBQU8sQ0FBQyxrSkFBWTtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYmxvY2tjaGFpbi1hcGktdHJhbnNhY3Rpb24tY2xpZW50L3RhcmdldC9tYWluL2dlbmVyYXRlZC9vcGVuYXBpL2FwaXMvSGVhbHRoUmVzb3VyY2VBcGkuanM/MzI5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBzZXJ2ZXJcbiAqIDxoMT5zZXJ2ZXI8L2gxPlxuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiA0LjM5LjBcbiAqXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIG93bktleXMgPSBmdW5jdGlvbihvKSB7XG4gICAgICAgIG93bktleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiAobykge1xuICAgICAgICAgICAgdmFyIGFyID0gW107XG4gICAgICAgICAgICBmb3IgKHZhciBrIGluIG8pIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobywgaykpIGFyW2FyLmxlbmd0aF0gPSBrO1xuICAgICAgICAgICAgcmV0dXJuIGFyO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gb3duS2V5cyhvKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAobW9kKSB7XG4gICAgICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICAgICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrID0gb3duS2V5cyhtb2QpLCBpID0gMDsgaSA8IGsubGVuZ3RoOyBpKyspIGlmIChrW2ldICE9PSBcImRlZmF1bHRcIikgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrW2ldKTtcbiAgICAgICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xufSkoKTtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IZWFsdGhSZXNvdXJjZUFwaSA9IHZvaWQgMDtcbmNvbnN0IHJ1bnRpbWUgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4uL3J1bnRpbWVcIikpO1xuLyoqXG4gKlxuICovXG5jbGFzcyBIZWFsdGhSZXNvdXJjZUFwaSBleHRlbmRzIHJ1bnRpbWUuQmFzZUFQSSB7XG4gICAgLyoqXG4gICAgICogVXNlZCBmb3IgaGVhbHRoY2hlY2tzLlxuICAgICAqL1xuICAgIGdldEhlYWx0aFJhdyhpbml0T3ZlcnJpZGVzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBxdWVyeVBhcmFtZXRlcnMgPSB7fTtcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlclBhcmFtZXRlcnMgPSB7fTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgdGhpcy5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICBwYXRoOiBgL2hlYWx0aGAsXG4gICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiBoZWFkZXJQYXJhbWV0ZXJzLFxuICAgICAgICAgICAgICAgIHF1ZXJ5OiBxdWVyeVBhcmFtZXRlcnMsXG4gICAgICAgICAgICB9LCBpbml0T3ZlcnJpZGVzKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgcnVudGltZS5KU09OQXBpUmVzcG9uc2UocmVzcG9uc2UpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNlZCBmb3IgaGVhbHRoY2hlY2tzLlxuICAgICAqL1xuICAgIGdldEhlYWx0aChpbml0T3ZlcnJpZGVzKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIHRoaXMuZ2V0SGVhbHRoUmF3KGluaXRPdmVycmlkZXMpO1xuICAgICAgICAgICAgcmV0dXJuIHlpZWxkIHJlc3BvbnNlLnZhbHVlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuSGVhbHRoUmVzb3VyY2VBcGkgPSBIZWFsdGhSZXNvdXJjZUFwaTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUhlYWx0aFJlc291cmNlQXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/HealthResourceApi.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/ShardControllerApi.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/ShardControllerApi.js ***!
  \*************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ShardControllerApi = void 0;\nconst runtime = __importStar(__webpack_require__(/*! ../runtime */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/runtime.js\"));\nconst index_1 = __webpack_require__(/*! ../models/index */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/index.js\");\n/**\n *\n */\nclass ShardControllerApi extends runtime.BaseAPI {\n    /**\n     * Get a specific block by id.\n     */\n    getBlockRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['shardId'] == null) {\n                throw new runtime.RequiredError('shardId', 'Required parameter \"shardId\" was null or undefined when calling getBlock().');\n            }\n            if (requestParameters['blockId'] == null) {\n                throw new runtime.RequiredError('blockId', 'Required parameter \"blockId\" was null or undefined when calling getBlock().');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/shards/{shardId}/blocks/{blockId}`.replace(`{${\"shardId\"}}`, encodeURIComponent(String(requestParameters['shardId']))).replace(`{${\"blockId\"}}`, encodeURIComponent(String(requestParameters['blockId']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.BlockFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get a specific block by id.\n     */\n    getBlock(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getBlockRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Get a specific jar by id.\n     */\n    getJarRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['shardId'] == null) {\n                throw new runtime.RequiredError('shardId', 'Required parameter \"shardId\" was null or undefined when calling getJar().');\n            }\n            if (requestParameters['jarId'] == null) {\n                throw new runtime.RequiredError('jarId', 'Required parameter \"jarId\" was null or undefined when calling getJar().');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/shards/{shardId}/jars/{jarId}`.replace(`{${\"shardId\"}}`, encodeURIComponent(String(requestParameters['shardId']))).replace(`{${\"jarId\"}}`, encodeURIComponent(String(requestParameters['jarId']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.JarFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get a specific jar by id.\n     */\n    getJar(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getJarRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Get the latest block.\n     */\n    getLatestBlockRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['shardId'] == null) {\n                throw new runtime.RequiredError('shardId', 'Required parameter \"shardId\" was null or undefined when calling getLatestBlock().');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/shards/{shardId}/blocks`.replace(`{${\"shardId\"}}`, encodeURIComponent(String(requestParameters['shardId']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.BlockFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get the latest block.\n     */\n    getLatestBlock(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getLatestBlockRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Get information about a specific shard.\n     */\n    getShardRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['shardId'] == null) {\n                throw new runtime.RequiredError('shardId', 'Required parameter \"shardId\" was null or undefined when calling getShard().');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/shards/{shardId}`.replace(`{${\"shardId\"}}`, encodeURIComponent(String(requestParameters['shardId']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ShardFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get information about a specific shard.\n     */\n    getShard(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getShardRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n    /**\n     * Get a specific transaction by id.\n     */\n    getTransactionRaw(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (requestParameters['shardId'] == null) {\n                throw new runtime.RequiredError('shardId', 'Required parameter \"shardId\" was null or undefined when calling getTransaction().');\n            }\n            if (requestParameters['transactionId'] == null) {\n                throw new runtime.RequiredError('transactionId', 'Required parameter \"transactionId\" was null or undefined when calling getTransaction().');\n            }\n            const queryParameters = {};\n            const headerParameters = {};\n            const response = yield this.request({\n                path: `/chain/shards/{shardId}/transactions/{transactionId}`.replace(`{${\"shardId\"}}`, encodeURIComponent(String(requestParameters['shardId']))).replace(`{${\"transactionId\"}}`, encodeURIComponent(String(requestParameters['transactionId']))),\n                method: 'GET',\n                headers: headerParameters,\n                query: queryParameters,\n            }, initOverrides);\n            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ExecutedTransactionFromJSON)(jsonValue));\n        });\n    }\n    /**\n     * Get a specific transaction by id.\n     */\n    getTransaction(requestParameters, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getTransactionRaw(requestParameters, initOverrides);\n            return yield response.value();\n        });\n    }\n}\nexports.ShardControllerApi = ShardControllerApi;\n//# sourceMappingURL=ShardControllerApi.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/ShardControllerApi.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/index.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/* tslint:disable */\n/* eslint-disable */\n__exportStar(__webpack_require__(/*! ./ChainControllerApi */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/ChainControllerApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./HealthResourceApi */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/HealthResourceApi.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ShardControllerApi */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/ShardControllerApi.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9hcGlzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQSxhQUFhLG1CQUFPLENBQUMsNEtBQXNCO0FBQzNDLGFBQWEsbUJBQU8sQ0FBQywwS0FBcUI7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLDRLQUFzQjtBQUMzQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vZ2VuZXJhdGVkL29wZW5hcGkvYXBpcy9pbmRleC5qcz8zZjBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9DaGFpbkNvbnRyb2xsZXJBcGlcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0hlYWx0aFJlc291cmNlQXBpXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9TaGFyZENvbnRyb2xsZXJBcGlcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/index.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/index.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/* tslint:disable */\n/* eslint-disable */\n__exportStar(__webpack_require__(/*! ./runtime */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/runtime.js\"), exports);\n__exportStar(__webpack_require__(/*! ./apis/index */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./models/index */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/index.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RDtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLGlKQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQyx1SkFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsMkpBQWdCO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9pbmRleC5qcz84Y2MyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9ydW50aW1lXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hcGlzL2luZGV4XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tb2RlbHMvaW5kZXhcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Account.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Account.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfAccount = instanceOfAccount;\nexports.AccountFromJSON = AccountFromJSON;\nexports.AccountFromJSONTyped = AccountFromJSONTyped;\nexports.AccountToJSON = AccountToJSON;\nexports.AccountToJSONTyped = AccountToJSONTyped;\n/**\n * Check if a given object implements the Account interface.\n */\nfunction instanceOfAccount(value) {\n    if (!('shardId' in value) || value['shardId'] === undefined)\n        return false;\n    if (!('nonce' in value) || value['nonce'] === undefined)\n        return false;\n    return true;\n}\nfunction AccountFromJSON(json) {\n    return AccountFromJSONTyped(json, false);\n}\nfunction AccountFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'shardId': json['shardId'],\n        'nonce': json['nonce'],\n        'account': json['account'] == null ? undefined : json['account'],\n    };\n}\nfunction AccountToJSON(json) {\n    return AccountToJSONTyped(json, false);\n}\nfunction AccountToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'shardId': value['shardId'],\n        'nonce': value['nonce'],\n        'account': value['account'],\n    };\n}\n//# sourceMappingURL=Account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvQWNjb3VudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6Qix1QkFBdUI7QUFDdkIsNEJBQTRCO0FBQzVCLHFCQUFxQjtBQUNyQiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYmxvY2tjaGFpbi1hcGktdHJhbnNhY3Rpb24tY2xpZW50L3RhcmdldC9tYWluL2dlbmVyYXRlZC9vcGVuYXBpL21vZGVscy9BY2NvdW50LmpzP2YwZDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogc2VydmVyXG4gKiA8aDE+c2VydmVyPC9oMT5cbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogNC4zOS4wXG4gKlxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbnN0YW5jZU9mQWNjb3VudCA9IGluc3RhbmNlT2ZBY2NvdW50O1xuZXhwb3J0cy5BY2NvdW50RnJvbUpTT04gPSBBY2NvdW50RnJvbUpTT047XG5leHBvcnRzLkFjY291bnRGcm9tSlNPTlR5cGVkID0gQWNjb3VudEZyb21KU09OVHlwZWQ7XG5leHBvcnRzLkFjY291bnRUb0pTT04gPSBBY2NvdW50VG9KU09OO1xuZXhwb3J0cy5BY2NvdW50VG9KU09OVHlwZWQgPSBBY2NvdW50VG9KU09OVHlwZWQ7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEFjY291bnQgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQWNjb3VudCh2YWx1ZSkge1xuICAgIGlmICghKCdzaGFyZElkJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ3NoYXJkSWQnXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCEoJ25vbmNlJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ25vbmNlJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gQWNjb3VudEZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQWNjb3VudEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gQWNjb3VudEZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmIChqc29uID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdzaGFyZElkJzoganNvblsnc2hhcmRJZCddLFxuICAgICAgICAnbm9uY2UnOiBqc29uWydub25jZSddLFxuICAgICAgICAnYWNjb3VudCc6IGpzb25bJ2FjY291bnQnXSA9PSBudWxsID8gdW5kZWZpbmVkIDoganNvblsnYWNjb3VudCddLFxuICAgIH07XG59XG5mdW5jdGlvbiBBY2NvdW50VG9KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQWNjb3VudFRvSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIEFjY291bnRUb0pTT05UeXBlZCh2YWx1ZSwgaWdub3JlRGlzY3JpbWluYXRvciA9IGZhbHNlKSB7XG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnc2hhcmRJZCc6IHZhbHVlWydzaGFyZElkJ10sXG4gICAgICAgICdub25jZSc6IHZhbHVlWydub25jZSddLFxuICAgICAgICAnYWNjb3VudCc6IHZhbHVlWydhY2NvdW50J10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFjY291bnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Account.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlInformation.js":
/*!***********************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlInformation.js ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfAvlInformation = instanceOfAvlInformation;\nexports.AvlInformationFromJSON = AvlInformationFromJSON;\nexports.AvlInformationFromJSONTyped = AvlInformationFromJSONTyped;\nexports.AvlInformationToJSON = AvlInformationToJSON;\nexports.AvlInformationToJSONTyped = AvlInformationToJSONTyped;\n/**\n * Check if a given object implements the AvlInformation interface.\n */\nfunction instanceOfAvlInformation(value) {\n    if (!('size' in value) || value['size'] === undefined)\n        return false;\n    return true;\n}\nfunction AvlInformationFromJSON(json) {\n    return AvlInformationFromJSONTyped(json, false);\n}\nfunction AvlInformationFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'size': json['size'],\n    };\n}\nfunction AvlInformationToJSON(json) {\n    return AvlInformationToJSONTyped(json, false);\n}\nfunction AvlInformationToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'size': value['size'],\n    };\n}\n//# sourceMappingURL=AvlInformation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvQXZsSW5mb3JtYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0M7QUFDaEMsOEJBQThCO0FBQzlCLG1DQUFtQztBQUNuQyw0QkFBNEI7QUFDNUIsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvQXZsSW5mb3JtYXRpb24uanM/NzAyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBzZXJ2ZXJcbiAqIDxoMT5zZXJ2ZXI8L2gxPlxuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiA0LjM5LjBcbiAqXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmluc3RhbmNlT2ZBdmxJbmZvcm1hdGlvbiA9IGluc3RhbmNlT2ZBdmxJbmZvcm1hdGlvbjtcbmV4cG9ydHMuQXZsSW5mb3JtYXRpb25Gcm9tSlNPTiA9IEF2bEluZm9ybWF0aW9uRnJvbUpTT047XG5leHBvcnRzLkF2bEluZm9ybWF0aW9uRnJvbUpTT05UeXBlZCA9IEF2bEluZm9ybWF0aW9uRnJvbUpTT05UeXBlZDtcbmV4cG9ydHMuQXZsSW5mb3JtYXRpb25Ub0pTT04gPSBBdmxJbmZvcm1hdGlvblRvSlNPTjtcbmV4cG9ydHMuQXZsSW5mb3JtYXRpb25Ub0pTT05UeXBlZCA9IEF2bEluZm9ybWF0aW9uVG9KU09OVHlwZWQ7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEF2bEluZm9ybWF0aW9uIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkF2bEluZm9ybWF0aW9uKHZhbHVlKSB7XG4gICAgaWYgKCEoJ3NpemUnIGluIHZhbHVlKSB8fCB2YWx1ZVsnc2l6ZSddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIEF2bEluZm9ybWF0aW9uRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBBdmxJbmZvcm1hdGlvbkZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gQXZsSW5mb3JtYXRpb25Gcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoanNvbiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnc2l6ZSc6IGpzb25bJ3NpemUnXSxcbiAgICB9O1xufVxuZnVuY3Rpb24gQXZsSW5mb3JtYXRpb25Ub0pTT04oanNvbikge1xuICAgIHJldHVybiBBdmxJbmZvcm1hdGlvblRvSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIEF2bEluZm9ybWF0aW9uVG9KU09OVHlwZWQodmFsdWUsIGlnbm9yZURpc2NyaW1pbmF0b3IgPSBmYWxzZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3NpemUnOiB2YWx1ZVsnc2l6ZSddLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdmxJbmZvcm1hdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlInformation.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlStateEntry.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlStateEntry.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfAvlStateEntry = instanceOfAvlStateEntry;\nexports.AvlStateEntryFromJSON = AvlStateEntryFromJSON;\nexports.AvlStateEntryFromJSONTyped = AvlStateEntryFromJSONTyped;\nexports.AvlStateEntryToJSON = AvlStateEntryToJSON;\nexports.AvlStateEntryToJSONTyped = AvlStateEntryToJSONTyped;\n/**\n * Check if a given object implements the AvlStateEntry interface.\n */\nfunction instanceOfAvlStateEntry(value) {\n    if (!('key' in value) || value['key'] === undefined)\n        return false;\n    if (!('value' in value) || value['value'] === undefined)\n        return false;\n    return true;\n}\nfunction AvlStateEntryFromJSON(json) {\n    return AvlStateEntryFromJSONTyped(json, false);\n}\nfunction AvlStateEntryFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'key': json['key'],\n        'value': json['value'],\n    };\n}\nfunction AvlStateEntryToJSON(json) {\n    return AvlStateEntryToJSONTyped(json, false);\n}\nfunction AvlStateEntryToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'key': value['key'],\n        'value': value['value'],\n    };\n}\n//# sourceMappingURL=AvlStateEntry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvQXZsU3RhdGVFbnRyeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQjtBQUMvQiw2QkFBNkI7QUFDN0Isa0NBQWtDO0FBQ2xDLDJCQUEyQjtBQUMzQixnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vZ2VuZXJhdGVkL29wZW5hcGkvbW9kZWxzL0F2bFN0YXRlRW50cnkuanM/OWZiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBzZXJ2ZXJcbiAqIDxoMT5zZXJ2ZXI8L2gxPlxuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiA0LjM5LjBcbiAqXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmluc3RhbmNlT2ZBdmxTdGF0ZUVudHJ5ID0gaW5zdGFuY2VPZkF2bFN0YXRlRW50cnk7XG5leHBvcnRzLkF2bFN0YXRlRW50cnlGcm9tSlNPTiA9IEF2bFN0YXRlRW50cnlGcm9tSlNPTjtcbmV4cG9ydHMuQXZsU3RhdGVFbnRyeUZyb21KU09OVHlwZWQgPSBBdmxTdGF0ZUVudHJ5RnJvbUpTT05UeXBlZDtcbmV4cG9ydHMuQXZsU3RhdGVFbnRyeVRvSlNPTiA9IEF2bFN0YXRlRW50cnlUb0pTT047XG5leHBvcnRzLkF2bFN0YXRlRW50cnlUb0pTT05UeXBlZCA9IEF2bFN0YXRlRW50cnlUb0pTT05UeXBlZDtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgQXZsU3RhdGVFbnRyeSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZBdmxTdGF0ZUVudHJ5KHZhbHVlKSB7XG4gICAgaWYgKCEoJ2tleScgaW4gdmFsdWUpIHx8IHZhbHVlWydrZXknXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCEoJ3ZhbHVlJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ3ZhbHVlJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gQXZsU3RhdGVFbnRyeUZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQXZsU3RhdGVFbnRyeUZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gQXZsU3RhdGVFbnRyeUZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmIChqc29uID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdrZXknOiBqc29uWydrZXknXSxcbiAgICAgICAgJ3ZhbHVlJzoganNvblsndmFsdWUnXSxcbiAgICB9O1xufVxuZnVuY3Rpb24gQXZsU3RhdGVFbnRyeVRvSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEF2bFN0YXRlRW50cnlUb0pTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBBdmxTdGF0ZUVudHJ5VG9KU09OVHlwZWQodmFsdWUsIGlnbm9yZURpc2NyaW1pbmF0b3IgPSBmYWxzZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2tleSc6IHZhbHVlWydrZXknXSxcbiAgICAgICAgJ3ZhbHVlJzogdmFsdWVbJ3ZhbHVlJ10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF2bFN0YXRlRW50cnkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlStateEntry.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlStateValue.js":
/*!**********************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlStateValue.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfAvlStateValue = instanceOfAvlStateValue;\nexports.AvlStateValueFromJSON = AvlStateValueFromJSON;\nexports.AvlStateValueFromJSONTyped = AvlStateValueFromJSONTyped;\nexports.AvlStateValueToJSON = AvlStateValueToJSON;\nexports.AvlStateValueToJSONTyped = AvlStateValueToJSONTyped;\n/**\n * Check if a given object implements the AvlStateValue interface.\n */\nfunction instanceOfAvlStateValue(value) {\n    if (!('data' in value) || value['data'] === undefined)\n        return false;\n    return true;\n}\nfunction AvlStateValueFromJSON(json) {\n    return AvlStateValueFromJSONTyped(json, false);\n}\nfunction AvlStateValueFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'data': json['data'],\n    };\n}\nfunction AvlStateValueToJSON(json) {\n    return AvlStateValueToJSONTyped(json, false);\n}\nfunction AvlStateValueToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'data': value['data'],\n    };\n}\n//# sourceMappingURL=AvlStateValue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvQXZsU3RhdGVWYWx1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQjtBQUMvQiw2QkFBNkI7QUFDN0Isa0NBQWtDO0FBQ2xDLDJCQUEyQjtBQUMzQixnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYmxvY2tjaGFpbi1hcGktdHJhbnNhY3Rpb24tY2xpZW50L3RhcmdldC9tYWluL2dlbmVyYXRlZC9vcGVuYXBpL21vZGVscy9BdmxTdGF0ZVZhbHVlLmpzPzIzMjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogc2VydmVyXG4gKiA8aDE+c2VydmVyPC9oMT5cbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogNC4zOS4wXG4gKlxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbnN0YW5jZU9mQXZsU3RhdGVWYWx1ZSA9IGluc3RhbmNlT2ZBdmxTdGF0ZVZhbHVlO1xuZXhwb3J0cy5BdmxTdGF0ZVZhbHVlRnJvbUpTT04gPSBBdmxTdGF0ZVZhbHVlRnJvbUpTT047XG5leHBvcnRzLkF2bFN0YXRlVmFsdWVGcm9tSlNPTlR5cGVkID0gQXZsU3RhdGVWYWx1ZUZyb21KU09OVHlwZWQ7XG5leHBvcnRzLkF2bFN0YXRlVmFsdWVUb0pTT04gPSBBdmxTdGF0ZVZhbHVlVG9KU09OO1xuZXhwb3J0cy5BdmxTdGF0ZVZhbHVlVG9KU09OVHlwZWQgPSBBdmxTdGF0ZVZhbHVlVG9KU09OVHlwZWQ7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEF2bFN0YXRlVmFsdWUgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mQXZsU3RhdGVWYWx1ZSh2YWx1ZSkge1xuICAgIGlmICghKCdkYXRhJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2RhdGEnXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBBdmxTdGF0ZVZhbHVlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBBdmxTdGF0ZVZhbHVlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBBdmxTdGF0ZVZhbHVlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKGpzb24gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2RhdGEnOiBqc29uWydkYXRhJ10sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIEF2bFN0YXRlVmFsdWVUb0pTT04oanNvbikge1xuICAgIHJldHVybiBBdmxTdGF0ZVZhbHVlVG9KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gQXZsU3RhdGVWYWx1ZVRvSlNPTlR5cGVkKHZhbHVlLCBpZ25vcmVEaXNjcmltaW5hdG9yID0gZmFsc2UpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdkYXRhJzogdmFsdWVbJ2RhdGEnXSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXZsU3RhdGVWYWx1ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlStateValue.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Block.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Block.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfBlock = instanceOfBlock;\nexports.BlockFromJSON = BlockFromJSON;\nexports.BlockFromJSONTyped = BlockFromJSONTyped;\nexports.BlockToJSON = BlockToJSON;\nexports.BlockToJSONTyped = BlockToJSONTyped;\n/**\n * Check if a given object implements the Block interface.\n */\nfunction instanceOfBlock(value) {\n    if (!('parentBlock' in value) || value['parentBlock'] === undefined)\n        return false;\n    if (!('producer' in value) || value['producer'] === undefined)\n        return false;\n    if (!('productionTime' in value) || value['productionTime'] === undefined)\n        return false;\n    if (!('committeeId' in value) || value['committeeId'] === undefined)\n        return false;\n    if (!('transactions' in value) || value['transactions'] === undefined)\n        return false;\n    if (!('events' in value) || value['events'] === undefined)\n        return false;\n    if (!('blockTime' in value) || value['blockTime'] === undefined)\n        return false;\n    if (!('state' in value) || value['state'] === undefined)\n        return false;\n    if (!('identifier' in value) || value['identifier'] === undefined)\n        return false;\n    return true;\n}\nfunction BlockFromJSON(json) {\n    return BlockFromJSONTyped(json, false);\n}\nfunction BlockFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'parentBlock': json['parentBlock'],\n        'producer': json['producer'],\n        'productionTime': json['productionTime'],\n        'committeeId': json['committeeId'],\n        'transactions': json['transactions'],\n        'events': json['events'],\n        'blockTime': json['blockTime'],\n        'state': json['state'],\n        'identifier': json['identifier'],\n    };\n}\nfunction BlockToJSON(json) {\n    return BlockToJSONTyped(json, false);\n}\nfunction BlockToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'parentBlock': value['parentBlock'],\n        'producer': value['producer'],\n        'productionTime': value['productionTime'],\n        'committeeId': value['committeeId'],\n        'transactions': value['transactions'],\n        'events': value['events'],\n        'blockTime': value['blockTime'],\n        'state': value['state'],\n        'identifier': value['identifier'],\n    };\n}\n//# sourceMappingURL=Block.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvQmxvY2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIscUJBQXFCO0FBQ3JCLDBCQUEwQjtBQUMxQixtQkFBbUI7QUFDbkIsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vZ2VuZXJhdGVkL29wZW5hcGkvbW9kZWxzL0Jsb2NrLmpzPzgxMDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogc2VydmVyXG4gKiA8aDE+c2VydmVyPC9oMT5cbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogNC4zOS4wXG4gKlxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbnN0YW5jZU9mQmxvY2sgPSBpbnN0YW5jZU9mQmxvY2s7XG5leHBvcnRzLkJsb2NrRnJvbUpTT04gPSBCbG9ja0Zyb21KU09OO1xuZXhwb3J0cy5CbG9ja0Zyb21KU09OVHlwZWQgPSBCbG9ja0Zyb21KU09OVHlwZWQ7XG5leHBvcnRzLkJsb2NrVG9KU09OID0gQmxvY2tUb0pTT047XG5leHBvcnRzLkJsb2NrVG9KU09OVHlwZWQgPSBCbG9ja1RvSlNPTlR5cGVkO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBCbG9jayBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZCbG9jayh2YWx1ZSkge1xuICAgIGlmICghKCdwYXJlbnRCbG9jaycgaW4gdmFsdWUpIHx8IHZhbHVlWydwYXJlbnRCbG9jayddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgncHJvZHVjZXInIGluIHZhbHVlKSB8fCB2YWx1ZVsncHJvZHVjZXInXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCEoJ3Byb2R1Y3Rpb25UaW1lJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ3Byb2R1Y3Rpb25UaW1lJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdjb21taXR0ZWVJZCcgaW4gdmFsdWUpIHx8IHZhbHVlWydjb21taXR0ZWVJZCddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgndHJhbnNhY3Rpb25zJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ3RyYW5zYWN0aW9ucyddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnZXZlbnRzJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2V2ZW50cyddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnYmxvY2tUaW1lJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2Jsb2NrVGltZSddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnc3RhdGUnIGluIHZhbHVlKSB8fCB2YWx1ZVsnc3RhdGUnXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCEoJ2lkZW50aWZpZXInIGluIHZhbHVlKSB8fCB2YWx1ZVsnaWRlbnRpZmllciddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIEJsb2NrRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBCbG9ja0Zyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gQmxvY2tGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoanNvbiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAncGFyZW50QmxvY2snOiBqc29uWydwYXJlbnRCbG9jayddLFxuICAgICAgICAncHJvZHVjZXInOiBqc29uWydwcm9kdWNlciddLFxuICAgICAgICAncHJvZHVjdGlvblRpbWUnOiBqc29uWydwcm9kdWN0aW9uVGltZSddLFxuICAgICAgICAnY29tbWl0dGVlSWQnOiBqc29uWydjb21taXR0ZWVJZCddLFxuICAgICAgICAndHJhbnNhY3Rpb25zJzoganNvblsndHJhbnNhY3Rpb25zJ10sXG4gICAgICAgICdldmVudHMnOiBqc29uWydldmVudHMnXSxcbiAgICAgICAgJ2Jsb2NrVGltZSc6IGpzb25bJ2Jsb2NrVGltZSddLFxuICAgICAgICAnc3RhdGUnOiBqc29uWydzdGF0ZSddLFxuICAgICAgICAnaWRlbnRpZmllcic6IGpzb25bJ2lkZW50aWZpZXInXSxcbiAgICB9O1xufVxuZnVuY3Rpb24gQmxvY2tUb0pTT04oanNvbikge1xuICAgIHJldHVybiBCbG9ja1RvSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIEJsb2NrVG9KU09OVHlwZWQodmFsdWUsIGlnbm9yZURpc2NyaW1pbmF0b3IgPSBmYWxzZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3BhcmVudEJsb2NrJzogdmFsdWVbJ3BhcmVudEJsb2NrJ10sXG4gICAgICAgICdwcm9kdWNlcic6IHZhbHVlWydwcm9kdWNlciddLFxuICAgICAgICAncHJvZHVjdGlvblRpbWUnOiB2YWx1ZVsncHJvZHVjdGlvblRpbWUnXSxcbiAgICAgICAgJ2NvbW1pdHRlZUlkJzogdmFsdWVbJ2NvbW1pdHRlZUlkJ10sXG4gICAgICAgICd0cmFuc2FjdGlvbnMnOiB2YWx1ZVsndHJhbnNhY3Rpb25zJ10sXG4gICAgICAgICdldmVudHMnOiB2YWx1ZVsnZXZlbnRzJ10sXG4gICAgICAgICdibG9ja1RpbWUnOiB2YWx1ZVsnYmxvY2tUaW1lJ10sXG4gICAgICAgICdzdGF0ZSc6IHZhbHVlWydzdGF0ZSddLFxuICAgICAgICAnaWRlbnRpZmllcic6IHZhbHVlWydpZGVudGlmaWVyJ10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJsb2NrLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Block.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Chain.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Chain.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfChain = instanceOfChain;\nexports.ChainFromJSON = ChainFromJSON;\nexports.ChainFromJSONTyped = ChainFromJSONTyped;\nexports.ChainToJSON = ChainToJSON;\nexports.ChainToJSONTyped = ChainToJSONTyped;\nconst runtime_1 = __webpack_require__(/*! ../runtime */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/runtime.js\");\nconst Feature_1 = __webpack_require__(/*! ./Feature */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Feature.js\");\nconst Plugin_1 = __webpack_require__(/*! ./Plugin */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Plugin.js\");\n/**\n * Check if a given object implements the Chain interface.\n */\nfunction instanceOfChain(value) {\n    if (!('governanceVersion' in value) || value['governanceVersion'] === undefined)\n        return false;\n    if (!('chainId' in value) || value['chainId'] === undefined)\n        return false;\n    if (!('features' in value) || value['features'] === undefined)\n        return false;\n    if (!('plugins' in value) || value['plugins'] === undefined)\n        return false;\n    if (!('shards' in value) || value['shards'] === undefined)\n        return false;\n    return true;\n}\nfunction ChainFromJSON(json) {\n    return ChainFromJSONTyped(json, false);\n}\nfunction ChainFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'governanceVersion': json['governanceVersion'],\n        'chainId': json['chainId'],\n        'features': (json['features'].map(Feature_1.FeatureFromJSON)),\n        'plugins': ((0, runtime_1.mapValues)(json['plugins'], Plugin_1.PluginFromJSON)),\n        'shards': json['shards'],\n    };\n}\nfunction ChainToJSON(json) {\n    return ChainToJSONTyped(json, false);\n}\nfunction ChainToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'governanceVersion': value['governanceVersion'],\n        'chainId': value['chainId'],\n        'features': (value['features'].map(Feature_1.FeatureToJSON)),\n        'plugins': ((0, runtime_1.mapValues)(value['plugins'], Plugin_1.PluginToJSON)),\n        'shards': value['shards'],\n    };\n}\n//# sourceMappingURL=Chain.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvQ2hhaW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIscUJBQXFCO0FBQ3JCLDBCQUEwQjtBQUMxQixtQkFBbUI7QUFDbkIsd0JBQXdCO0FBQ3hCLGtCQUFrQixtQkFBTyxDQUFDLGtKQUFZO0FBQ3RDLGtCQUFrQixtQkFBTyxDQUFDLHdKQUFXO0FBQ3JDLGlCQUFpQixtQkFBTyxDQUFDLHNKQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYmxvY2tjaGFpbi1hcGktdHJhbnNhY3Rpb24tY2xpZW50L3RhcmdldC9tYWluL2dlbmVyYXRlZC9vcGVuYXBpL21vZGVscy9DaGFpbi5qcz9iYzY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIHNlcnZlclxuICogPGgxPnNlcnZlcjwvaDE+XG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDQuMzkuMFxuICpcbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaW5zdGFuY2VPZkNoYWluID0gaW5zdGFuY2VPZkNoYWluO1xuZXhwb3J0cy5DaGFpbkZyb21KU09OID0gQ2hhaW5Gcm9tSlNPTjtcbmV4cG9ydHMuQ2hhaW5Gcm9tSlNPTlR5cGVkID0gQ2hhaW5Gcm9tSlNPTlR5cGVkO1xuZXhwb3J0cy5DaGFpblRvSlNPTiA9IENoYWluVG9KU09OO1xuZXhwb3J0cy5DaGFpblRvSlNPTlR5cGVkID0gQ2hhaW5Ub0pTT05UeXBlZDtcbmNvbnN0IHJ1bnRpbWVfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lXCIpO1xuY29uc3QgRmVhdHVyZV8xID0gcmVxdWlyZShcIi4vRmVhdHVyZVwiKTtcbmNvbnN0IFBsdWdpbl8xID0gcmVxdWlyZShcIi4vUGx1Z2luXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBDaGFpbiBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZDaGFpbih2YWx1ZSkge1xuICAgIGlmICghKCdnb3Zlcm5hbmNlVmVyc2lvbicgaW4gdmFsdWUpIHx8IHZhbHVlWydnb3Zlcm5hbmNlVmVyc2lvbiddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnY2hhaW5JZCcgaW4gdmFsdWUpIHx8IHZhbHVlWydjaGFpbklkJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdmZWF0dXJlcycgaW4gdmFsdWUpIHx8IHZhbHVlWydmZWF0dXJlcyddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgncGx1Z2lucycgaW4gdmFsdWUpIHx8IHZhbHVlWydwbHVnaW5zJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdzaGFyZHMnIGluIHZhbHVlKSB8fCB2YWx1ZVsnc2hhcmRzJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gQ2hhaW5Gcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIENoYWluRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBDaGFpbkZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmIChqc29uID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdnb3Zlcm5hbmNlVmVyc2lvbic6IGpzb25bJ2dvdmVybmFuY2VWZXJzaW9uJ10sXG4gICAgICAgICdjaGFpbklkJzoganNvblsnY2hhaW5JZCddLFxuICAgICAgICAnZmVhdHVyZXMnOiAoanNvblsnZmVhdHVyZXMnXS5tYXAoRmVhdHVyZV8xLkZlYXR1cmVGcm9tSlNPTikpLFxuICAgICAgICAncGx1Z2lucyc6ICgoMCwgcnVudGltZV8xLm1hcFZhbHVlcykoanNvblsncGx1Z2lucyddLCBQbHVnaW5fMS5QbHVnaW5Gcm9tSlNPTikpLFxuICAgICAgICAnc2hhcmRzJzoganNvblsnc2hhcmRzJ10sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIENoYWluVG9KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ2hhaW5Ub0pTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBDaGFpblRvSlNPTlR5cGVkKHZhbHVlLCBpZ25vcmVEaXNjcmltaW5hdG9yID0gZmFsc2UpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdnb3Zlcm5hbmNlVmVyc2lvbic6IHZhbHVlWydnb3Zlcm5hbmNlVmVyc2lvbiddLFxuICAgICAgICAnY2hhaW5JZCc6IHZhbHVlWydjaGFpbklkJ10sXG4gICAgICAgICdmZWF0dXJlcyc6ICh2YWx1ZVsnZmVhdHVyZXMnXS5tYXAoRmVhdHVyZV8xLkZlYXR1cmVUb0pTT04pKSxcbiAgICAgICAgJ3BsdWdpbnMnOiAoKDAsIHJ1bnRpbWVfMS5tYXBWYWx1ZXMpKHZhbHVlWydwbHVnaW5zJ10sIFBsdWdpbl8xLlBsdWdpblRvSlNPTikpLFxuICAgICAgICAnc2hhcmRzJzogdmFsdWVbJ3NoYXJkcyddLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DaGFpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Chain.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Contract.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Contract.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfContract = instanceOfContract;\nexports.ContractFromJSON = ContractFromJSON;\nexports.ContractFromJSONTyped = ContractFromJSONTyped;\nexports.ContractToJSON = ContractToJSON;\nexports.ContractToJSONTyped = ContractToJSONTyped;\n/**\n * Check if a given object implements the Contract interface.\n */\nfunction instanceOfContract(value) {\n    if (!('abi' in value) || value['abi'] === undefined)\n        return false;\n    if (!('binder' in value) || value['binder'] === undefined)\n        return false;\n    if (!('shardId' in value) || value['shardId'] === undefined)\n        return false;\n    if (!('storageLength' in value) || value['storageLength'] === undefined)\n        return false;\n    if (!('jar' in value) || value['jar'] === undefined)\n        return false;\n    if (!('address' in value) || value['address'] === undefined)\n        return false;\n    return true;\n}\nfunction ContractFromJSON(json) {\n    return ContractFromJSONTyped(json, false);\n}\nfunction ContractFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'abi': json['abi'],\n        'binder': json['binder'],\n        'shardId': json['shardId'],\n        'account': json['account'] == null ? undefined : json['account'],\n        'storageLength': json['storageLength'],\n        'jar': json['jar'],\n        'serializedContract': json['serializedContract'] == null ? undefined : json['serializedContract'],\n        'address': json['address'],\n    };\n}\nfunction ContractToJSON(json) {\n    return ContractToJSONTyped(json, false);\n}\nfunction ContractToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'abi': value['abi'],\n        'binder': value['binder'],\n        'shardId': value['shardId'],\n        'account': value['account'],\n        'storageLength': value['storageLength'],\n        'jar': value['jar'],\n        'serializedContract': value['serializedContract'],\n        'address': value['address'],\n    };\n}\n//# sourceMappingURL=Contract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvQ29udHJhY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsd0JBQXdCO0FBQ3hCLDZCQUE2QjtBQUM3QixzQkFBc0I7QUFDdEIsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvQ29udHJhY3QuanM/Nzg4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBzZXJ2ZXJcbiAqIDxoMT5zZXJ2ZXI8L2gxPlxuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiA0LjM5LjBcbiAqXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmluc3RhbmNlT2ZDb250cmFjdCA9IGluc3RhbmNlT2ZDb250cmFjdDtcbmV4cG9ydHMuQ29udHJhY3RGcm9tSlNPTiA9IENvbnRyYWN0RnJvbUpTT047XG5leHBvcnRzLkNvbnRyYWN0RnJvbUpTT05UeXBlZCA9IENvbnRyYWN0RnJvbUpTT05UeXBlZDtcbmV4cG9ydHMuQ29udHJhY3RUb0pTT04gPSBDb250cmFjdFRvSlNPTjtcbmV4cG9ydHMuQ29udHJhY3RUb0pTT05UeXBlZCA9IENvbnRyYWN0VG9KU09OVHlwZWQ7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIENvbnRyYWN0IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZkNvbnRyYWN0KHZhbHVlKSB7XG4gICAgaWYgKCEoJ2FiaScgaW4gdmFsdWUpIHx8IHZhbHVlWydhYmknXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCEoJ2JpbmRlcicgaW4gdmFsdWUpIHx8IHZhbHVlWydiaW5kZXInXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCEoJ3NoYXJkSWQnIGluIHZhbHVlKSB8fCB2YWx1ZVsnc2hhcmRJZCddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnc3RvcmFnZUxlbmd0aCcgaW4gdmFsdWUpIHx8IHZhbHVlWydzdG9yYWdlTGVuZ3RoJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdqYXInIGluIHZhbHVlKSB8fCB2YWx1ZVsnamFyJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdhZGRyZXNzJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2FkZHJlc3MnXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBDb250cmFjdEZyb21KU09OKGpzb24pIHtcbiAgICByZXR1cm4gQ29udHJhY3RGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIENvbnRyYWN0RnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKGpzb24gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2FiaSc6IGpzb25bJ2FiaSddLFxuICAgICAgICAnYmluZGVyJzoganNvblsnYmluZGVyJ10sXG4gICAgICAgICdzaGFyZElkJzoganNvblsnc2hhcmRJZCddLFxuICAgICAgICAnYWNjb3VudCc6IGpzb25bJ2FjY291bnQnXSA9PSBudWxsID8gdW5kZWZpbmVkIDoganNvblsnYWNjb3VudCddLFxuICAgICAgICAnc3RvcmFnZUxlbmd0aCc6IGpzb25bJ3N0b3JhZ2VMZW5ndGgnXSxcbiAgICAgICAgJ2phcic6IGpzb25bJ2phciddLFxuICAgICAgICAnc2VyaWFsaXplZENvbnRyYWN0JzoganNvblsnc2VyaWFsaXplZENvbnRyYWN0J10gPT0gbnVsbCA/IHVuZGVmaW5lZCA6IGpzb25bJ3NlcmlhbGl6ZWRDb250cmFjdCddLFxuICAgICAgICAnYWRkcmVzcyc6IGpzb25bJ2FkZHJlc3MnXSxcbiAgICB9O1xufVxuZnVuY3Rpb24gQ29udHJhY3RUb0pTT04oanNvbikge1xuICAgIHJldHVybiBDb250cmFjdFRvSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIENvbnRyYWN0VG9KU09OVHlwZWQodmFsdWUsIGlnbm9yZURpc2NyaW1pbmF0b3IgPSBmYWxzZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2FiaSc6IHZhbHVlWydhYmknXSxcbiAgICAgICAgJ2JpbmRlcic6IHZhbHVlWydiaW5kZXInXSxcbiAgICAgICAgJ3NoYXJkSWQnOiB2YWx1ZVsnc2hhcmRJZCddLFxuICAgICAgICAnYWNjb3VudCc6IHZhbHVlWydhY2NvdW50J10sXG4gICAgICAgICdzdG9yYWdlTGVuZ3RoJzogdmFsdWVbJ3N0b3JhZ2VMZW5ndGgnXSxcbiAgICAgICAgJ2phcic6IHZhbHVlWydqYXInXSxcbiAgICAgICAgJ3NlcmlhbGl6ZWRDb250cmFjdCc6IHZhbHVlWydzZXJpYWxpemVkQ29udHJhY3QnXSxcbiAgICAgICAgJ2FkZHJlc3MnOiB2YWx1ZVsnYWRkcmVzcyddLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Db250cmFjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Contract.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/ExecutedTransaction.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/ExecutedTransaction.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfExecutedTransaction = instanceOfExecutedTransaction;\nexports.ExecutedTransactionFromJSON = ExecutedTransactionFromJSON;\nexports.ExecutedTransactionFromJSONTyped = ExecutedTransactionFromJSONTyped;\nexports.ExecutedTransactionToJSON = ExecutedTransactionToJSON;\nexports.ExecutedTransactionToJSONTyped = ExecutedTransactionToJSONTyped;\nconst ExecutionStatus_1 = __webpack_require__(/*! ./ExecutionStatus */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/ExecutionStatus.js\");\n/**\n * Check if a given object implements the ExecutedTransaction interface.\n */\nfunction instanceOfExecutedTransaction(value) {\n    if (!('identifier' in value) || value['identifier'] === undefined)\n        return false;\n    if (!('content' in value) || value['content'] === undefined)\n        return false;\n    if (!('isEvent' in value) || value['isEvent'] === undefined)\n        return false;\n    return true;\n}\nfunction ExecutedTransactionFromJSON(json) {\n    return ExecutedTransactionFromJSONTyped(json, false);\n}\nfunction ExecutedTransactionFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'identifier': json['identifier'],\n        'content': json['content'],\n        'executionStatus': json['executionStatus'] == null ? undefined : (0, ExecutionStatus_1.ExecutionStatusFromJSON)(json['executionStatus']),\n        'isEvent': json['isEvent'],\n    };\n}\nfunction ExecutedTransactionToJSON(json) {\n    return ExecutedTransactionToJSONTyped(json, false);\n}\nfunction ExecutedTransactionToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'identifier': value['identifier'],\n        'content': value['content'],\n        'executionStatus': (0, ExecutionStatus_1.ExecutionStatusToJSON)(value['executionStatus']),\n        'isEvent': value['isEvent'],\n    };\n}\n//# sourceMappingURL=ExecutedTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvRXhlY3V0ZWRUcmFuc2FjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFDQUFxQztBQUNyQyxtQ0FBbUM7QUFDbkMsd0NBQXdDO0FBQ3hDLGlDQUFpQztBQUNqQyxzQ0FBc0M7QUFDdEMsMEJBQTBCLG1CQUFPLENBQUMsd0tBQW1CO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYmxvY2tjaGFpbi1hcGktdHJhbnNhY3Rpb24tY2xpZW50L3RhcmdldC9tYWluL2dlbmVyYXRlZC9vcGVuYXBpL21vZGVscy9FeGVjdXRlZFRyYW5zYWN0aW9uLmpzPzBlZjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogc2VydmVyXG4gKiA8aDE+c2VydmVyPC9oMT5cbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogNC4zOS4wXG4gKlxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbnN0YW5jZU9mRXhlY3V0ZWRUcmFuc2FjdGlvbiA9IGluc3RhbmNlT2ZFeGVjdXRlZFRyYW5zYWN0aW9uO1xuZXhwb3J0cy5FeGVjdXRlZFRyYW5zYWN0aW9uRnJvbUpTT04gPSBFeGVjdXRlZFRyYW5zYWN0aW9uRnJvbUpTT047XG5leHBvcnRzLkV4ZWN1dGVkVHJhbnNhY3Rpb25Gcm9tSlNPTlR5cGVkID0gRXhlY3V0ZWRUcmFuc2FjdGlvbkZyb21KU09OVHlwZWQ7XG5leHBvcnRzLkV4ZWN1dGVkVHJhbnNhY3Rpb25Ub0pTT04gPSBFeGVjdXRlZFRyYW5zYWN0aW9uVG9KU09OO1xuZXhwb3J0cy5FeGVjdXRlZFRyYW5zYWN0aW9uVG9KU09OVHlwZWQgPSBFeGVjdXRlZFRyYW5zYWN0aW9uVG9KU09OVHlwZWQ7XG5jb25zdCBFeGVjdXRpb25TdGF0dXNfMSA9IHJlcXVpcmUoXCIuL0V4ZWN1dGlvblN0YXR1c1wiKTtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgRXhlY3V0ZWRUcmFuc2FjdGlvbiBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZFeGVjdXRlZFRyYW5zYWN0aW9uKHZhbHVlKSB7XG4gICAgaWYgKCEoJ2lkZW50aWZpZXInIGluIHZhbHVlKSB8fCB2YWx1ZVsnaWRlbnRpZmllciddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnY29udGVudCcgaW4gdmFsdWUpIHx8IHZhbHVlWydjb250ZW50J10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdpc0V2ZW50JyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2lzRXZlbnQnXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBFeGVjdXRlZFRyYW5zYWN0aW9uRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBFeGVjdXRlZFRyYW5zYWN0aW9uRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBFeGVjdXRlZFRyYW5zYWN0aW9uRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKGpzb24gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkZW50aWZpZXInOiBqc29uWydpZGVudGlmaWVyJ10sXG4gICAgICAgICdjb250ZW50JzoganNvblsnY29udGVudCddLFxuICAgICAgICAnZXhlY3V0aW9uU3RhdHVzJzoganNvblsnZXhlY3V0aW9uU3RhdHVzJ10gPT0gbnVsbCA/IHVuZGVmaW5lZCA6ICgwLCBFeGVjdXRpb25TdGF0dXNfMS5FeGVjdXRpb25TdGF0dXNGcm9tSlNPTikoanNvblsnZXhlY3V0aW9uU3RhdHVzJ10pLFxuICAgICAgICAnaXNFdmVudCc6IGpzb25bJ2lzRXZlbnQnXSxcbiAgICB9O1xufVxuZnVuY3Rpb24gRXhlY3V0ZWRUcmFuc2FjdGlvblRvSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEV4ZWN1dGVkVHJhbnNhY3Rpb25Ub0pTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBFeGVjdXRlZFRyYW5zYWN0aW9uVG9KU09OVHlwZWQodmFsdWUsIGlnbm9yZURpc2NyaW1pbmF0b3IgPSBmYWxzZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkZW50aWZpZXInOiB2YWx1ZVsnaWRlbnRpZmllciddLFxuICAgICAgICAnY29udGVudCc6IHZhbHVlWydjb250ZW50J10sXG4gICAgICAgICdleGVjdXRpb25TdGF0dXMnOiAoMCwgRXhlY3V0aW9uU3RhdHVzXzEuRXhlY3V0aW9uU3RhdHVzVG9KU09OKSh2YWx1ZVsnZXhlY3V0aW9uU3RhdHVzJ10pLFxuICAgICAgICAnaXNFdmVudCc6IHZhbHVlWydpc0V2ZW50J10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV4ZWN1dGVkVHJhbnNhY3Rpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/ExecutedTransaction.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/ExecutionStatus.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/ExecutionStatus.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfExecutionStatus = instanceOfExecutionStatus;\nexports.ExecutionStatusFromJSON = ExecutionStatusFromJSON;\nexports.ExecutionStatusFromJSONTyped = ExecutionStatusFromJSONTyped;\nexports.ExecutionStatusToJSON = ExecutionStatusToJSON;\nexports.ExecutionStatusToJSONTyped = ExecutionStatusToJSONTyped;\nconst TransactionPointer_1 = __webpack_require__(/*! ./TransactionPointer */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionPointer.js\");\nconst TransactionCost_1 = __webpack_require__(/*! ./TransactionCost */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionCost.js\");\nconst Failure_1 = __webpack_require__(/*! ./Failure */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Failure.js\");\n/**\n * Check if a given object implements the ExecutionStatus interface.\n */\nfunction instanceOfExecutionStatus(value) {\n    if (!('transactionCost' in value) || value['transactionCost'] === undefined)\n        return false;\n    if (!('success' in value) || value['success'] === undefined)\n        return false;\n    if (!('finalized' in value) || value['finalized'] === undefined)\n        return false;\n    if (!('blockId' in value) || value['blockId'] === undefined)\n        return false;\n    if (!('events' in value) || value['events'] === undefined)\n        return false;\n    return true;\n}\nfunction ExecutionStatusFromJSON(json) {\n    return ExecutionStatusFromJSONTyped(json, false);\n}\nfunction ExecutionStatusFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'transactionCost': (0, TransactionCost_1.TransactionCostFromJSON)(json['transactionCost']),\n        'success': json['success'],\n        'finalized': json['finalized'],\n        'blockId': json['blockId'],\n        'failure': json['failure'] == null ? undefined : (0, Failure_1.FailureFromJSON)(json['failure']),\n        'events': (json['events'].map(TransactionPointer_1.TransactionPointerFromJSON)),\n    };\n}\nfunction ExecutionStatusToJSON(json) {\n    return ExecutionStatusToJSONTyped(json, false);\n}\nfunction ExecutionStatusToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'transactionCost': (0, TransactionCost_1.TransactionCostToJSON)(value['transactionCost']),\n        'success': value['success'],\n        'finalized': value['finalized'],\n        'blockId': value['blockId'],\n        'failure': (0, Failure_1.FailureToJSON)(value['failure']),\n        'events': (value['events'].map(TransactionPointer_1.TransactionPointerToJSON)),\n    };\n}\n//# sourceMappingURL=ExecutionStatus.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvRXhlY3V0aW9uU3RhdHVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDLCtCQUErQjtBQUMvQixvQ0FBb0M7QUFDcEMsNkJBQTZCO0FBQzdCLGtDQUFrQztBQUNsQyw2QkFBNkIsbUJBQU8sQ0FBQyw4S0FBc0I7QUFDM0QsMEJBQTBCLG1CQUFPLENBQUMsd0tBQW1CO0FBQ3JELGtCQUFrQixtQkFBTyxDQUFDLHdKQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvRXhlY3V0aW9uU3RhdHVzLmpzPzVhY2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogc2VydmVyXG4gKiA8aDE+c2VydmVyPC9oMT5cbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogNC4zOS4wXG4gKlxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbnN0YW5jZU9mRXhlY3V0aW9uU3RhdHVzID0gaW5zdGFuY2VPZkV4ZWN1dGlvblN0YXR1cztcbmV4cG9ydHMuRXhlY3V0aW9uU3RhdHVzRnJvbUpTT04gPSBFeGVjdXRpb25TdGF0dXNGcm9tSlNPTjtcbmV4cG9ydHMuRXhlY3V0aW9uU3RhdHVzRnJvbUpTT05UeXBlZCA9IEV4ZWN1dGlvblN0YXR1c0Zyb21KU09OVHlwZWQ7XG5leHBvcnRzLkV4ZWN1dGlvblN0YXR1c1RvSlNPTiA9IEV4ZWN1dGlvblN0YXR1c1RvSlNPTjtcbmV4cG9ydHMuRXhlY3V0aW9uU3RhdHVzVG9KU09OVHlwZWQgPSBFeGVjdXRpb25TdGF0dXNUb0pTT05UeXBlZDtcbmNvbnN0IFRyYW5zYWN0aW9uUG9pbnRlcl8xID0gcmVxdWlyZShcIi4vVHJhbnNhY3Rpb25Qb2ludGVyXCIpO1xuY29uc3QgVHJhbnNhY3Rpb25Db3N0XzEgPSByZXF1aXJlKFwiLi9UcmFuc2FjdGlvbkNvc3RcIik7XG5jb25zdCBGYWlsdXJlXzEgPSByZXF1aXJlKFwiLi9GYWlsdXJlXCIpO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBFeGVjdXRpb25TdGF0dXMgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mRXhlY3V0aW9uU3RhdHVzKHZhbHVlKSB7XG4gICAgaWYgKCEoJ3RyYW5zYWN0aW9uQ29zdCcgaW4gdmFsdWUpIHx8IHZhbHVlWyd0cmFuc2FjdGlvbkNvc3QnXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCEoJ3N1Y2Nlc3MnIGluIHZhbHVlKSB8fCB2YWx1ZVsnc3VjY2VzcyddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnZmluYWxpemVkJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2ZpbmFsaXplZCddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnYmxvY2tJZCcgaW4gdmFsdWUpIHx8IHZhbHVlWydibG9ja0lkJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdldmVudHMnIGluIHZhbHVlKSB8fCB2YWx1ZVsnZXZlbnRzJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gRXhlY3V0aW9uU3RhdHVzRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBFeGVjdXRpb25TdGF0dXNGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIEV4ZWN1dGlvblN0YXR1c0Zyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmIChqc29uID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICd0cmFuc2FjdGlvbkNvc3QnOiAoMCwgVHJhbnNhY3Rpb25Db3N0XzEuVHJhbnNhY3Rpb25Db3N0RnJvbUpTT04pKGpzb25bJ3RyYW5zYWN0aW9uQ29zdCddKSxcbiAgICAgICAgJ3N1Y2Nlc3MnOiBqc29uWydzdWNjZXNzJ10sXG4gICAgICAgICdmaW5hbGl6ZWQnOiBqc29uWydmaW5hbGl6ZWQnXSxcbiAgICAgICAgJ2Jsb2NrSWQnOiBqc29uWydibG9ja0lkJ10sXG4gICAgICAgICdmYWlsdXJlJzoganNvblsnZmFpbHVyZSddID09IG51bGwgPyB1bmRlZmluZWQgOiAoMCwgRmFpbHVyZV8xLkZhaWx1cmVGcm9tSlNPTikoanNvblsnZmFpbHVyZSddKSxcbiAgICAgICAgJ2V2ZW50cyc6IChqc29uWydldmVudHMnXS5tYXAoVHJhbnNhY3Rpb25Qb2ludGVyXzEuVHJhbnNhY3Rpb25Qb2ludGVyRnJvbUpTT04pKSxcbiAgICB9O1xufVxuZnVuY3Rpb24gRXhlY3V0aW9uU3RhdHVzVG9KU09OKGpzb24pIHtcbiAgICByZXR1cm4gRXhlY3V0aW9uU3RhdHVzVG9KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gRXhlY3V0aW9uU3RhdHVzVG9KU09OVHlwZWQodmFsdWUsIGlnbm9yZURpc2NyaW1pbmF0b3IgPSBmYWxzZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ3RyYW5zYWN0aW9uQ29zdCc6ICgwLCBUcmFuc2FjdGlvbkNvc3RfMS5UcmFuc2FjdGlvbkNvc3RUb0pTT04pKHZhbHVlWyd0cmFuc2FjdGlvbkNvc3QnXSksXG4gICAgICAgICdzdWNjZXNzJzogdmFsdWVbJ3N1Y2Nlc3MnXSxcbiAgICAgICAgJ2ZpbmFsaXplZCc6IHZhbHVlWydmaW5hbGl6ZWQnXSxcbiAgICAgICAgJ2Jsb2NrSWQnOiB2YWx1ZVsnYmxvY2tJZCddLFxuICAgICAgICAnZmFpbHVyZSc6ICgwLCBGYWlsdXJlXzEuRmFpbHVyZVRvSlNPTikodmFsdWVbJ2ZhaWx1cmUnXSksXG4gICAgICAgICdldmVudHMnOiAodmFsdWVbJ2V2ZW50cyddLm1hcChUcmFuc2FjdGlvblBvaW50ZXJfMS5UcmFuc2FjdGlvblBvaW50ZXJUb0pTT04pKSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXhlY3V0aW9uU3RhdHVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/ExecutionStatus.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Failure.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Failure.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfFailure = instanceOfFailure;\nexports.FailureFromJSON = FailureFromJSON;\nexports.FailureFromJSONTyped = FailureFromJSONTyped;\nexports.FailureToJSON = FailureToJSON;\nexports.FailureToJSONTyped = FailureToJSONTyped;\n/**\n * Check if a given object implements the Failure interface.\n */\nfunction instanceOfFailure(value) {\n    if (!('stackTrace' in value) || value['stackTrace'] === undefined)\n        return false;\n    if (!('errorMessage' in value) || value['errorMessage'] === undefined)\n        return false;\n    return true;\n}\nfunction FailureFromJSON(json) {\n    return FailureFromJSONTyped(json, false);\n}\nfunction FailureFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'stackTrace': json['stackTrace'],\n        'errorMessage': json['errorMessage'],\n    };\n}\nfunction FailureToJSON(json) {\n    return FailureToJSONTyped(json, false);\n}\nfunction FailureToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'stackTrace': value['stackTrace'],\n        'errorMessage': value['errorMessage'],\n    };\n}\n//# sourceMappingURL=Failure.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvRmFpbHVyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6Qix1QkFBdUI7QUFDdkIsNEJBQTRCO0FBQzVCLHFCQUFxQjtBQUNyQiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vZ2VuZXJhdGVkL29wZW5hcGkvbW9kZWxzL0ZhaWx1cmUuanM/MmUyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBzZXJ2ZXJcbiAqIDxoMT5zZXJ2ZXI8L2gxPlxuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiA0LjM5LjBcbiAqXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmluc3RhbmNlT2ZGYWlsdXJlID0gaW5zdGFuY2VPZkZhaWx1cmU7XG5leHBvcnRzLkZhaWx1cmVGcm9tSlNPTiA9IEZhaWx1cmVGcm9tSlNPTjtcbmV4cG9ydHMuRmFpbHVyZUZyb21KU09OVHlwZWQgPSBGYWlsdXJlRnJvbUpTT05UeXBlZDtcbmV4cG9ydHMuRmFpbHVyZVRvSlNPTiA9IEZhaWx1cmVUb0pTT047XG5leHBvcnRzLkZhaWx1cmVUb0pTT05UeXBlZCA9IEZhaWx1cmVUb0pTT05UeXBlZDtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgRmFpbHVyZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZGYWlsdXJlKHZhbHVlKSB7XG4gICAgaWYgKCEoJ3N0YWNrVHJhY2UnIGluIHZhbHVlKSB8fCB2YWx1ZVsnc3RhY2tUcmFjZSddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnZXJyb3JNZXNzYWdlJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2Vycm9yTWVzc2FnZSddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIEZhaWx1cmVGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIEZhaWx1cmVGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIEZhaWx1cmVGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoanNvbiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnc3RhY2tUcmFjZSc6IGpzb25bJ3N0YWNrVHJhY2UnXSxcbiAgICAgICAgJ2Vycm9yTWVzc2FnZSc6IGpzb25bJ2Vycm9yTWVzc2FnZSddLFxuICAgIH07XG59XG5mdW5jdGlvbiBGYWlsdXJlVG9KU09OKGpzb24pIHtcbiAgICByZXR1cm4gRmFpbHVyZVRvSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIEZhaWx1cmVUb0pTT05UeXBlZCh2YWx1ZSwgaWdub3JlRGlzY3JpbWluYXRvciA9IGZhbHNlKSB7XG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnc3RhY2tUcmFjZSc6IHZhbHVlWydzdGFja1RyYWNlJ10sXG4gICAgICAgICdlcnJvck1lc3NhZ2UnOiB2YWx1ZVsnZXJyb3JNZXNzYWdlJ10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZhaWx1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Failure.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Feature.js":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Feature.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfFeature = instanceOfFeature;\nexports.FeatureFromJSON = FeatureFromJSON;\nexports.FeatureFromJSONTyped = FeatureFromJSONTyped;\nexports.FeatureToJSON = FeatureToJSON;\nexports.FeatureToJSONTyped = FeatureToJSONTyped;\n/**\n * Check if a given object implements the Feature interface.\n */\nfunction instanceOfFeature(value) {\n    if (!('name' in value) || value['name'] === undefined)\n        return false;\n    if (!('value' in value) || value['value'] === undefined)\n        return false;\n    return true;\n}\nfunction FeatureFromJSON(json) {\n    return FeatureFromJSONTyped(json, false);\n}\nfunction FeatureFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'name': json['name'],\n        'value': json['value'],\n    };\n}\nfunction FeatureToJSON(json) {\n    return FeatureToJSONTyped(json, false);\n}\nfunction FeatureToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'name': value['name'],\n        'value': value['value'],\n    };\n}\n//# sourceMappingURL=Feature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvRmVhdHVyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6Qix1QkFBdUI7QUFDdkIsNEJBQTRCO0FBQzVCLHFCQUFxQjtBQUNyQiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vZ2VuZXJhdGVkL29wZW5hcGkvbW9kZWxzL0ZlYXR1cmUuanM/NzVmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBzZXJ2ZXJcbiAqIDxoMT5zZXJ2ZXI8L2gxPlxuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiA0LjM5LjBcbiAqXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmluc3RhbmNlT2ZGZWF0dXJlID0gaW5zdGFuY2VPZkZlYXR1cmU7XG5leHBvcnRzLkZlYXR1cmVGcm9tSlNPTiA9IEZlYXR1cmVGcm9tSlNPTjtcbmV4cG9ydHMuRmVhdHVyZUZyb21KU09OVHlwZWQgPSBGZWF0dXJlRnJvbUpTT05UeXBlZDtcbmV4cG9ydHMuRmVhdHVyZVRvSlNPTiA9IEZlYXR1cmVUb0pTT047XG5leHBvcnRzLkZlYXR1cmVUb0pTT05UeXBlZCA9IEZlYXR1cmVUb0pTT05UeXBlZDtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgRmVhdHVyZSBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZGZWF0dXJlKHZhbHVlKSB7XG4gICAgaWYgKCEoJ25hbWUnIGluIHZhbHVlKSB8fCB2YWx1ZVsnbmFtZSddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgndmFsdWUnIGluIHZhbHVlKSB8fCB2YWx1ZVsndmFsdWUnXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBGZWF0dXJlRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBGZWF0dXJlRnJvbUpTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBGZWF0dXJlRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKGpzb24gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ25hbWUnOiBqc29uWyduYW1lJ10sXG4gICAgICAgICd2YWx1ZSc6IGpzb25bJ3ZhbHVlJ10sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIEZlYXR1cmVUb0pTT04oanNvbikge1xuICAgIHJldHVybiBGZWF0dXJlVG9KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gRmVhdHVyZVRvSlNPTlR5cGVkKHZhbHVlLCBpZ25vcmVEaXNjcmltaW5hdG9yID0gZmFsc2UpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICduYW1lJzogdmFsdWVbJ25hbWUnXSxcbiAgICAgICAgJ3ZhbHVlJzogdmFsdWVbJ3ZhbHVlJ10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZlYXR1cmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Feature.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Jar.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Jar.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfJar = instanceOfJar;\nexports.JarFromJSON = JarFromJSON;\nexports.JarFromJSONTyped = JarFromJSONTyped;\nexports.JarToJSON = JarToJSON;\nexports.JarToJSONTyped = JarToJSONTyped;\n/**\n * Check if a given object implements the Jar interface.\n */\nfunction instanceOfJar(value) {\n    if (!('data' in value) || value['data'] === undefined)\n        return false;\n    return true;\n}\nfunction JarFromJSON(json) {\n    return JarFromJSONTyped(json, false);\n}\nfunction JarFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'data': json['data'],\n    };\n}\nfunction JarToJSON(json) {\n    return JarToJSONTyped(json, false);\n}\nfunction JarToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'data': value['data'],\n    };\n}\n//# sourceMappingURL=Jar.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvSmFyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQix3QkFBd0I7QUFDeEIsaUJBQWlCO0FBQ2pCLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vZ2VuZXJhdGVkL29wZW5hcGkvbW9kZWxzL0phci5qcz9kMzMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIHNlcnZlclxuICogPGgxPnNlcnZlcjwvaDE+XG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDQuMzkuMFxuICpcbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaW5zdGFuY2VPZkphciA9IGluc3RhbmNlT2ZKYXI7XG5leHBvcnRzLkphckZyb21KU09OID0gSmFyRnJvbUpTT047XG5leHBvcnRzLkphckZyb21KU09OVHlwZWQgPSBKYXJGcm9tSlNPTlR5cGVkO1xuZXhwb3J0cy5KYXJUb0pTT04gPSBKYXJUb0pTT047XG5leHBvcnRzLkphclRvSlNPTlR5cGVkID0gSmFyVG9KU09OVHlwZWQ7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIEphciBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZKYXIodmFsdWUpIHtcbiAgICBpZiAoISgnZGF0YScgaW4gdmFsdWUpIHx8IHZhbHVlWydkYXRhJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gSmFyRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBKYXJGcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIEphckZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmIChqc29uID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdkYXRhJzoganNvblsnZGF0YSddLFxuICAgIH07XG59XG5mdW5jdGlvbiBKYXJUb0pTT04oanNvbikge1xuICAgIHJldHVybiBKYXJUb0pTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBKYXJUb0pTT05UeXBlZCh2YWx1ZSwgaWdub3JlRGlzY3JpbWluYXRvciA9IGZhbHNlKSB7XG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnZGF0YSc6IHZhbHVlWydkYXRhJ10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUphci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Jar.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Plugin.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Plugin.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfPlugin = instanceOfPlugin;\nexports.PluginFromJSON = PluginFromJSON;\nexports.PluginFromJSONTyped = PluginFromJSONTyped;\nexports.PluginToJSON = PluginToJSON;\nexports.PluginToJSONTyped = PluginToJSONTyped;\n/**\n * Check if a given object implements the Plugin interface.\n */\nfunction instanceOfPlugin(value) {\n    if (!('jarId' in value) || value['jarId'] === undefined)\n        return false;\n    return true;\n}\nfunction PluginFromJSON(json) {\n    return PluginFromJSONTyped(json, false);\n}\nfunction PluginFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'jarId': json['jarId'],\n        'state': json['state'] == null ? undefined : json['state'],\n    };\n}\nfunction PluginToJSON(json) {\n    return PluginToJSONTyped(json, false);\n}\nfunction PluginToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'jarId': value['jarId'],\n        'state': value['state'],\n    };\n}\n//# sourceMappingURL=Plugin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvUGx1Z2luLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLHNCQUFzQjtBQUN0QiwyQkFBMkI7QUFDM0Isb0JBQW9CO0FBQ3BCLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYmxvY2tjaGFpbi1hcGktdHJhbnNhY3Rpb24tY2xpZW50L3RhcmdldC9tYWluL2dlbmVyYXRlZC9vcGVuYXBpL21vZGVscy9QbHVnaW4uanM/YzVkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuLyoqXG4gKiBzZXJ2ZXJcbiAqIDxoMT5zZXJ2ZXI8L2gxPlxuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiA0LjM5LjBcbiAqXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmluc3RhbmNlT2ZQbHVnaW4gPSBpbnN0YW5jZU9mUGx1Z2luO1xuZXhwb3J0cy5QbHVnaW5Gcm9tSlNPTiA9IFBsdWdpbkZyb21KU09OO1xuZXhwb3J0cy5QbHVnaW5Gcm9tSlNPTlR5cGVkID0gUGx1Z2luRnJvbUpTT05UeXBlZDtcbmV4cG9ydHMuUGx1Z2luVG9KU09OID0gUGx1Z2luVG9KU09OO1xuZXhwb3J0cy5QbHVnaW5Ub0pTT05UeXBlZCA9IFBsdWdpblRvSlNPTlR5cGVkO1xuLyoqXG4gKiBDaGVjayBpZiBhIGdpdmVuIG9iamVjdCBpbXBsZW1lbnRzIHRoZSBQbHVnaW4gaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mUGx1Z2luKHZhbHVlKSB7XG4gICAgaWYgKCEoJ2phcklkJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2phcklkJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gUGx1Z2luRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBQbHVnaW5Gcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIFBsdWdpbkZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmIChqc29uID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdqYXJJZCc6IGpzb25bJ2phcklkJ10sXG4gICAgICAgICdzdGF0ZSc6IGpzb25bJ3N0YXRlJ10gPT0gbnVsbCA/IHVuZGVmaW5lZCA6IGpzb25bJ3N0YXRlJ10sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIFBsdWdpblRvSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFBsdWdpblRvSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIFBsdWdpblRvSlNPTlR5cGVkKHZhbHVlLCBpZ25vcmVEaXNjcmltaW5hdG9yID0gZmFsc2UpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdqYXJJZCc6IHZhbHVlWydqYXJJZCddLFxuICAgICAgICAnc3RhdGUnOiB2YWx1ZVsnc3RhdGUnXSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGx1Z2luLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Plugin.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/SerializedTransaction.js":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/SerializedTransaction.js ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfSerializedTransaction = instanceOfSerializedTransaction;\nexports.SerializedTransactionFromJSON = SerializedTransactionFromJSON;\nexports.SerializedTransactionFromJSONTyped = SerializedTransactionFromJSONTyped;\nexports.SerializedTransactionToJSON = SerializedTransactionToJSON;\nexports.SerializedTransactionToJSONTyped = SerializedTransactionToJSONTyped;\n/**\n * Check if a given object implements the SerializedTransaction interface.\n */\nfunction instanceOfSerializedTransaction(value) {\n    if (!('payload' in value) || value['payload'] === undefined)\n        return false;\n    return true;\n}\nfunction SerializedTransactionFromJSON(json) {\n    return SerializedTransactionFromJSONTyped(json, false);\n}\nfunction SerializedTransactionFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'payload': json['payload'],\n    };\n}\nfunction SerializedTransactionToJSON(json) {\n    return SerializedTransactionToJSONTyped(json, false);\n}\nfunction SerializedTransactionToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'payload': value['payload'],\n    };\n}\n//# sourceMappingURL=SerializedTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvU2VyaWFsaXplZFRyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUNBQXVDO0FBQ3ZDLHFDQUFxQztBQUNyQywwQ0FBMEM7QUFDMUMsbUNBQW1DO0FBQ25DLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vZ2VuZXJhdGVkL29wZW5hcGkvbW9kZWxzL1NlcmlhbGl6ZWRUcmFuc2FjdGlvbi5qcz9lNDAxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIHNlcnZlclxuICogPGgxPnNlcnZlcjwvaDE+XG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDQuMzkuMFxuICpcbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaW5zdGFuY2VPZlNlcmlhbGl6ZWRUcmFuc2FjdGlvbiA9IGluc3RhbmNlT2ZTZXJpYWxpemVkVHJhbnNhY3Rpb247XG5leHBvcnRzLlNlcmlhbGl6ZWRUcmFuc2FjdGlvbkZyb21KU09OID0gU2VyaWFsaXplZFRyYW5zYWN0aW9uRnJvbUpTT047XG5leHBvcnRzLlNlcmlhbGl6ZWRUcmFuc2FjdGlvbkZyb21KU09OVHlwZWQgPSBTZXJpYWxpemVkVHJhbnNhY3Rpb25Gcm9tSlNPTlR5cGVkO1xuZXhwb3J0cy5TZXJpYWxpemVkVHJhbnNhY3Rpb25Ub0pTT04gPSBTZXJpYWxpemVkVHJhbnNhY3Rpb25Ub0pTT047XG5leHBvcnRzLlNlcmlhbGl6ZWRUcmFuc2FjdGlvblRvSlNPTlR5cGVkID0gU2VyaWFsaXplZFRyYW5zYWN0aW9uVG9KU09OVHlwZWQ7XG4vKipcbiAqIENoZWNrIGlmIGEgZ2l2ZW4gb2JqZWN0IGltcGxlbWVudHMgdGhlIFNlcmlhbGl6ZWRUcmFuc2FjdGlvbiBpbnRlcmZhY2UuXG4gKi9cbmZ1bmN0aW9uIGluc3RhbmNlT2ZTZXJpYWxpemVkVHJhbnNhY3Rpb24odmFsdWUpIHtcbiAgICBpZiAoISgncGF5bG9hZCcgaW4gdmFsdWUpIHx8IHZhbHVlWydwYXlsb2FkJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gU2VyaWFsaXplZFRyYW5zYWN0aW9uRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBTZXJpYWxpemVkVHJhbnNhY3Rpb25Gcm9tSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIFNlcmlhbGl6ZWRUcmFuc2FjdGlvbkZyb21KU09OVHlwZWQoanNvbiwgaWdub3JlRGlzY3JpbWluYXRvcikge1xuICAgIGlmIChqc29uID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgICdwYXlsb2FkJzoganNvblsncGF5bG9hZCddLFxuICAgIH07XG59XG5mdW5jdGlvbiBTZXJpYWxpemVkVHJhbnNhY3Rpb25Ub0pTT04oanNvbikge1xuICAgIHJldHVybiBTZXJpYWxpemVkVHJhbnNhY3Rpb25Ub0pTT05UeXBlZChqc29uLCBmYWxzZSk7XG59XG5mdW5jdGlvbiBTZXJpYWxpemVkVHJhbnNhY3Rpb25Ub0pTT05UeXBlZCh2YWx1ZSwgaWdub3JlRGlzY3JpbWluYXRvciA9IGZhbHNlKSB7XG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAncGF5bG9hZCc6IHZhbHVlWydwYXlsb2FkJ10sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNlcmlhbGl6ZWRUcmFuc2FjdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/SerializedTransaction.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Shard.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Shard.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfShard = instanceOfShard;\nexports.ShardFromJSON = ShardFromJSON;\nexports.ShardFromJSONTyped = ShardFromJSONTyped;\nexports.ShardToJSON = ShardToJSON;\nexports.ShardToJSONTyped = ShardToJSONTyped;\n/**\n * Check if a given object implements the Shard interface.\n */\nfunction instanceOfShard(value) {\n    if (!('governanceVersion' in value) || value['governanceVersion'] === undefined)\n        return false;\n    if (!('plugins' in value) || value['plugins'] === undefined)\n        return false;\n    return true;\n}\nfunction ShardFromJSON(json) {\n    return ShardFromJSONTyped(json, false);\n}\nfunction ShardFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'governanceVersion': json['governanceVersion'],\n        'plugins': json['plugins'],\n    };\n}\nfunction ShardToJSON(json) {\n    return ShardToJSONTyped(json, false);\n}\nfunction ShardToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'governanceVersion': value['governanceVersion'],\n        'plugins': value['plugins'],\n    };\n}\n//# sourceMappingURL=Shard.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvU2hhcmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIscUJBQXFCO0FBQ3JCLDBCQUEwQjtBQUMxQixtQkFBbUI7QUFDbkIsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYmxvY2tjaGFpbi1hcGktdHJhbnNhY3Rpb24tY2xpZW50L3RhcmdldC9tYWluL2dlbmVyYXRlZC9vcGVuYXBpL21vZGVscy9TaGFyZC5qcz84MmRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogdHNsaW50OmRpc2FibGUgKi9cbi8qIGVzbGludC1kaXNhYmxlICovXG4vKipcbiAqIHNlcnZlclxuICogPGgxPnNlcnZlcjwvaDE+XG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDQuMzkuMFxuICpcbiAqXG4gKiBOT1RFOiBUaGlzIGNsYXNzIGlzIGF1dG8gZ2VuZXJhdGVkIGJ5IE9wZW5BUEkgR2VuZXJhdG9yIChodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2gpLlxuICogaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoXG4gKiBEbyBub3QgZWRpdCB0aGUgY2xhc3MgbWFudWFsbHkuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaW5zdGFuY2VPZlNoYXJkID0gaW5zdGFuY2VPZlNoYXJkO1xuZXhwb3J0cy5TaGFyZEZyb21KU09OID0gU2hhcmRGcm9tSlNPTjtcbmV4cG9ydHMuU2hhcmRGcm9tSlNPTlR5cGVkID0gU2hhcmRGcm9tSlNPTlR5cGVkO1xuZXhwb3J0cy5TaGFyZFRvSlNPTiA9IFNoYXJkVG9KU09OO1xuZXhwb3J0cy5TaGFyZFRvSlNPTlR5cGVkID0gU2hhcmRUb0pTT05UeXBlZDtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgU2hhcmQgaW50ZXJmYWNlLlxuICovXG5mdW5jdGlvbiBpbnN0YW5jZU9mU2hhcmQodmFsdWUpIHtcbiAgICBpZiAoISgnZ292ZXJuYW5jZVZlcnNpb24nIGluIHZhbHVlKSB8fCB2YWx1ZVsnZ292ZXJuYW5jZVZlcnNpb24nXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCEoJ3BsdWdpbnMnIGluIHZhbHVlKSB8fCB2YWx1ZVsncGx1Z2lucyddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIFNoYXJkRnJvbUpTT04oanNvbikge1xuICAgIHJldHVybiBTaGFyZEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gU2hhcmRGcm9tSlNPTlR5cGVkKGpzb24sIGlnbm9yZURpc2NyaW1pbmF0b3IpIHtcbiAgICBpZiAoanNvbiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAnZ292ZXJuYW5jZVZlcnNpb24nOiBqc29uWydnb3Zlcm5hbmNlVmVyc2lvbiddLFxuICAgICAgICAncGx1Z2lucyc6IGpzb25bJ3BsdWdpbnMnXSxcbiAgICB9O1xufVxuZnVuY3Rpb24gU2hhcmRUb0pTT04oanNvbikge1xuICAgIHJldHVybiBTaGFyZFRvSlNPTlR5cGVkKGpzb24sIGZhbHNlKTtcbn1cbmZ1bmN0aW9uIFNoYXJkVG9KU09OVHlwZWQodmFsdWUsIGlnbm9yZURpc2NyaW1pbmF0b3IgPSBmYWxzZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2dvdmVybmFuY2VWZXJzaW9uJzogdmFsdWVbJ2dvdmVybmFuY2VWZXJzaW9uJ10sXG4gICAgICAgICdwbHVnaW5zJzogdmFsdWVbJ3BsdWdpbnMnXSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2hhcmQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Shard.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionCost.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionCost.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfTransactionCost = instanceOfTransactionCost;\nexports.TransactionCostFromJSON = TransactionCostFromJSON;\nexports.TransactionCostFromJSONTyped = TransactionCostFromJSONTyped;\nexports.TransactionCostToJSON = TransactionCostToJSON;\nexports.TransactionCostToJSONTyped = TransactionCostToJSONTyped;\n/**\n * Check if a given object implements the TransactionCost interface.\n */\nfunction instanceOfTransactionCost(value) {\n    if (!('allocatedForEvents' in value) || value['allocatedForEvents'] === undefined)\n        return false;\n    if (!('remaining' in value) || value['remaining'] === undefined)\n        return false;\n    if (!('paidByContract' in value) || value['paidByContract'] === undefined)\n        return false;\n    if (!('cpu' in value) || value['cpu'] === undefined)\n        return false;\n    if (!('networkFees' in value) || value['networkFees'] === undefined)\n        return false;\n    return true;\n}\nfunction TransactionCostFromJSON(json) {\n    return TransactionCostFromJSONTyped(json, false);\n}\nfunction TransactionCostFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'allocatedForEvents': json['allocatedForEvents'],\n        'remaining': json['remaining'],\n        'paidByContract': json['paidByContract'],\n        'cpu': json['cpu'],\n        'networkFees': json['networkFees'],\n    };\n}\nfunction TransactionCostToJSON(json) {\n    return TransactionCostToJSONTyped(json, false);\n}\nfunction TransactionCostToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'allocatedForEvents': value['allocatedForEvents'],\n        'remaining': value['remaining'],\n        'paidByContract': value['paidByContract'],\n        'cpu': value['cpu'],\n        'networkFees': value['networkFees'],\n    };\n}\n//# sourceMappingURL=TransactionCost.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvVHJhbnNhY3Rpb25Db3N0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDLCtCQUErQjtBQUMvQixvQ0FBb0M7QUFDcEMsNkJBQTZCO0FBQzdCLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvVHJhbnNhY3Rpb25Db3N0LmpzPzEyYmQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogc2VydmVyXG4gKiA8aDE+c2VydmVyPC9oMT5cbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogNC4zOS4wXG4gKlxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbnN0YW5jZU9mVHJhbnNhY3Rpb25Db3N0ID0gaW5zdGFuY2VPZlRyYW5zYWN0aW9uQ29zdDtcbmV4cG9ydHMuVHJhbnNhY3Rpb25Db3N0RnJvbUpTT04gPSBUcmFuc2FjdGlvbkNvc3RGcm9tSlNPTjtcbmV4cG9ydHMuVHJhbnNhY3Rpb25Db3N0RnJvbUpTT05UeXBlZCA9IFRyYW5zYWN0aW9uQ29zdEZyb21KU09OVHlwZWQ7XG5leHBvcnRzLlRyYW5zYWN0aW9uQ29zdFRvSlNPTiA9IFRyYW5zYWN0aW9uQ29zdFRvSlNPTjtcbmV4cG9ydHMuVHJhbnNhY3Rpb25Db3N0VG9KU09OVHlwZWQgPSBUcmFuc2FjdGlvbkNvc3RUb0pTT05UeXBlZDtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVHJhbnNhY3Rpb25Db3N0IGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlRyYW5zYWN0aW9uQ29zdCh2YWx1ZSkge1xuICAgIGlmICghKCdhbGxvY2F0ZWRGb3JFdmVudHMnIGluIHZhbHVlKSB8fCB2YWx1ZVsnYWxsb2NhdGVkRm9yRXZlbnRzJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdyZW1haW5pbmcnIGluIHZhbHVlKSB8fCB2YWx1ZVsncmVtYWluaW5nJ10gPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmICghKCdwYWlkQnlDb250cmFjdCcgaW4gdmFsdWUpIHx8IHZhbHVlWydwYWlkQnlDb250cmFjdCddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnY3B1JyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2NwdSddID09PSB1bmRlZmluZWQpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAoISgnbmV0d29ya0ZlZXMnIGluIHZhbHVlKSB8fCB2YWx1ZVsnbmV0d29ya0ZlZXMnXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBUcmFuc2FjdGlvbkNvc3RGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFRyYW5zYWN0aW9uQ29zdEZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gVHJhbnNhY3Rpb25Db3N0RnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKGpzb24gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2FsbG9jYXRlZEZvckV2ZW50cyc6IGpzb25bJ2FsbG9jYXRlZEZvckV2ZW50cyddLFxuICAgICAgICAncmVtYWluaW5nJzoganNvblsncmVtYWluaW5nJ10sXG4gICAgICAgICdwYWlkQnlDb250cmFjdCc6IGpzb25bJ3BhaWRCeUNvbnRyYWN0J10sXG4gICAgICAgICdjcHUnOiBqc29uWydjcHUnXSxcbiAgICAgICAgJ25ldHdvcmtGZWVzJzoganNvblsnbmV0d29ya0ZlZXMnXSxcbiAgICB9O1xufVxuZnVuY3Rpb24gVHJhbnNhY3Rpb25Db3N0VG9KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVHJhbnNhY3Rpb25Db3N0VG9KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gVHJhbnNhY3Rpb25Db3N0VG9KU09OVHlwZWQodmFsdWUsIGlnbm9yZURpc2NyaW1pbmF0b3IgPSBmYWxzZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2FsbG9jYXRlZEZvckV2ZW50cyc6IHZhbHVlWydhbGxvY2F0ZWRGb3JFdmVudHMnXSxcbiAgICAgICAgJ3JlbWFpbmluZyc6IHZhbHVlWydyZW1haW5pbmcnXSxcbiAgICAgICAgJ3BhaWRCeUNvbnRyYWN0JzogdmFsdWVbJ3BhaWRCeUNvbnRyYWN0J10sXG4gICAgICAgICdjcHUnOiB2YWx1ZVsnY3B1J10sXG4gICAgICAgICduZXR3b3JrRmVlcyc6IHZhbHVlWyduZXR3b3JrRmVlcyddLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcmFuc2FjdGlvbkNvc3QuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionCost.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionPointer.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionPointer.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.instanceOfTransactionPointer = instanceOfTransactionPointer;\nexports.TransactionPointerFromJSON = TransactionPointerFromJSON;\nexports.TransactionPointerFromJSONTyped = TransactionPointerFromJSONTyped;\nexports.TransactionPointerToJSON = TransactionPointerToJSON;\nexports.TransactionPointerToJSONTyped = TransactionPointerToJSONTyped;\n/**\n * Check if a given object implements the TransactionPointer interface.\n */\nfunction instanceOfTransactionPointer(value) {\n    if (!('identifier' in value) || value['identifier'] === undefined)\n        return false;\n    if (!('destinationShardId' in value) || value['destinationShardId'] === undefined)\n        return false;\n    return true;\n}\nfunction TransactionPointerFromJSON(json) {\n    return TransactionPointerFromJSONTyped(json, false);\n}\nfunction TransactionPointerFromJSONTyped(json, ignoreDiscriminator) {\n    if (json == null) {\n        return json;\n    }\n    return {\n        'identifier': json['identifier'],\n        'destinationShardId': json['destinationShardId'],\n    };\n}\nfunction TransactionPointerToJSON(json) {\n    return TransactionPointerToJSONTyped(json, false);\n}\nfunction TransactionPointerToJSONTyped(value, ignoreDiscriminator = false) {\n    if (value == null) {\n        return value;\n    }\n    return {\n        'identifier': value['identifier'],\n        'destinationShardId': value['destinationShardId'],\n    };\n}\n//# sourceMappingURL=TransactionPointer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvVHJhbnNhY3Rpb25Qb2ludGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0NBQW9DO0FBQ3BDLGtDQUFrQztBQUNsQyx1Q0FBdUM7QUFDdkMsZ0NBQWdDO0FBQ2hDLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvVHJhbnNhY3Rpb25Qb2ludGVyLmpzPzU3MmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cbi8qKlxuICogc2VydmVyXG4gKiA8aDE+c2VydmVyPC9oMT5cbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogNC4zOS4wXG4gKlxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbnN0YW5jZU9mVHJhbnNhY3Rpb25Qb2ludGVyID0gaW5zdGFuY2VPZlRyYW5zYWN0aW9uUG9pbnRlcjtcbmV4cG9ydHMuVHJhbnNhY3Rpb25Qb2ludGVyRnJvbUpTT04gPSBUcmFuc2FjdGlvblBvaW50ZXJGcm9tSlNPTjtcbmV4cG9ydHMuVHJhbnNhY3Rpb25Qb2ludGVyRnJvbUpTT05UeXBlZCA9IFRyYW5zYWN0aW9uUG9pbnRlckZyb21KU09OVHlwZWQ7XG5leHBvcnRzLlRyYW5zYWN0aW9uUG9pbnRlclRvSlNPTiA9IFRyYW5zYWN0aW9uUG9pbnRlclRvSlNPTjtcbmV4cG9ydHMuVHJhbnNhY3Rpb25Qb2ludGVyVG9KU09OVHlwZWQgPSBUcmFuc2FjdGlvblBvaW50ZXJUb0pTT05UeXBlZDtcbi8qKlxuICogQ2hlY2sgaWYgYSBnaXZlbiBvYmplY3QgaW1wbGVtZW50cyB0aGUgVHJhbnNhY3Rpb25Qb2ludGVyIGludGVyZmFjZS5cbiAqL1xuZnVuY3Rpb24gaW5zdGFuY2VPZlRyYW5zYWN0aW9uUG9pbnRlcih2YWx1ZSkge1xuICAgIGlmICghKCdpZGVudGlmaWVyJyBpbiB2YWx1ZSkgfHwgdmFsdWVbJ2lkZW50aWZpZXInXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKCEoJ2Rlc3RpbmF0aW9uU2hhcmRJZCcgaW4gdmFsdWUpIHx8IHZhbHVlWydkZXN0aW5hdGlvblNoYXJkSWQnXSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBUcmFuc2FjdGlvblBvaW50ZXJGcm9tSlNPTihqc29uKSB7XG4gICAgcmV0dXJuIFRyYW5zYWN0aW9uUG9pbnRlckZyb21KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gVHJhbnNhY3Rpb25Qb2ludGVyRnJvbUpTT05UeXBlZChqc29uLCBpZ25vcmVEaXNjcmltaW5hdG9yKSB7XG4gICAgaWYgKGpzb24gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkZW50aWZpZXInOiBqc29uWydpZGVudGlmaWVyJ10sXG4gICAgICAgICdkZXN0aW5hdGlvblNoYXJkSWQnOiBqc29uWydkZXN0aW5hdGlvblNoYXJkSWQnXSxcbiAgICB9O1xufVxuZnVuY3Rpb24gVHJhbnNhY3Rpb25Qb2ludGVyVG9KU09OKGpzb24pIHtcbiAgICByZXR1cm4gVHJhbnNhY3Rpb25Qb2ludGVyVG9KU09OVHlwZWQoanNvbiwgZmFsc2UpO1xufVxuZnVuY3Rpb24gVHJhbnNhY3Rpb25Qb2ludGVyVG9KU09OVHlwZWQodmFsdWUsIGlnbm9yZURpc2NyaW1pbmF0b3IgPSBmYWxzZSkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgJ2lkZW50aWZpZXInOiB2YWx1ZVsnaWRlbnRpZmllciddLFxuICAgICAgICAnZGVzdGluYXRpb25TaGFyZElkJzogdmFsdWVbJ2Rlc3RpbmF0aW9uU2hhcmRJZCddLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UcmFuc2FjdGlvblBvaW50ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionPointer.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/index.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/index.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/* tslint:disable */\n/* eslint-disable */\n__exportStar(__webpack_require__(/*! ./Account */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Account.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AvlInformation */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlInformation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AvlStateEntry */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlStateEntry.js\"), exports);\n__exportStar(__webpack_require__(/*! ./AvlStateValue */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/AvlStateValue.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Block */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Block.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Chain */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Chain.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Contract */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Contract.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ExecutedTransaction */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/ExecutedTransaction.js\"), exports);\n__exportStar(__webpack_require__(/*! ./ExecutionStatus */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/ExecutionStatus.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Failure */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Failure.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Feature */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Feature.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Jar */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Jar.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Plugin */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Plugin.js\"), exports);\n__exportStar(__webpack_require__(/*! ./SerializedTransaction */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/SerializedTransaction.js\"), exports);\n__exportStar(__webpack_require__(/*! ./Shard */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/Shard.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TransactionCost */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionCost.js\"), exports);\n__exportStar(__webpack_require__(/*! ./TransactionPointer */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/TransactionPointer.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9nZW5lcmF0ZWQvb3BlbmFwaS9tb2RlbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyx3SkFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsc0tBQWtCO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQyxvS0FBaUI7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLG9LQUFpQjtBQUN0QyxhQUFhLG1CQUFPLENBQUMsb0pBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLG9KQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQywwSkFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsZ0xBQXVCO0FBQzVDLGFBQWEsbUJBQU8sQ0FBQyx3S0FBbUI7QUFDeEMsYUFBYSxtQkFBTyxDQUFDLHdKQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQyx3SkFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsZ0pBQU87QUFDNUIsYUFBYSxtQkFBTyxDQUFDLHNKQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxvTEFBeUI7QUFDOUMsYUFBYSxtQkFBTyxDQUFDLG9KQUFTO0FBQzlCLGFBQWEsbUJBQU8sQ0FBQyx3S0FBbUI7QUFDeEMsYUFBYSxtQkFBTyxDQUFDLDhLQUFzQjtBQUMzQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vZ2VuZXJhdGVkL29wZW5hcGkvbW9kZWxzL2luZGV4LmpzPzY1OGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8qIHRzbGludDpkaXNhYmxlICovXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0FjY291bnRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0F2bEluZm9ybWF0aW9uXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9BdmxTdGF0ZUVudHJ5XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9BdmxTdGF0ZVZhbHVlXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9CbG9ja1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vQ2hhaW5cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0NvbnRyYWN0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9FeGVjdXRlZFRyYW5zYWN0aW9uXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9FeGVjdXRpb25TdGF0dXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0ZhaWx1cmVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0ZlYXR1cmVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL0phclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vUGx1Z2luXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9TZXJpYWxpemVkVHJhbnNhY3Rpb25cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1NoYXJkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9UcmFuc2FjdGlvbkNvc3RcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL1RyYW5zYWN0aW9uUG9pbnRlclwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/runtime.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/runtime.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/* tslint:disable */\n/* eslint-disable */\n/**\n * server\n * <h1>server</h1>\n *\n * The version of the OpenAPI document: 4.39.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TextApiResponse = exports.BlobApiResponse = exports.VoidApiResponse = exports.JSONApiResponse = exports.COLLECTION_FORMATS = exports.RequiredError = exports.FetchError = exports.ResponseError = exports.BaseAPI = exports.DefaultConfig = exports.Configuration = exports.BASE_PATH = void 0;\nexports.querystring = querystring;\nexports.exists = exists;\nexports.mapValues = mapValues;\nexports.canConsumeForm = canConsumeForm;\nexports.BASE_PATH = \"http://localhost\".replace(/\\/+$/, \"\");\nclass Configuration {\n    constructor(configuration = {}) {\n        this.configuration = configuration;\n    }\n    set config(configuration) {\n        this.configuration = configuration;\n    }\n    get basePath() {\n        return this.configuration.basePath != null ? this.configuration.basePath : exports.BASE_PATH;\n    }\n    get fetchApi() {\n        return this.configuration.fetchApi;\n    }\n    get middleware() {\n        return this.configuration.middleware || [];\n    }\n    get queryParamsStringify() {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n    get username() {\n        return this.configuration.username;\n    }\n    get password() {\n        return this.configuration.password;\n    }\n    get apiKey() {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n    get accessToken() {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => __awaiter(this, void 0, void 0, function* () { return accessToken; });\n        }\n        return undefined;\n    }\n    get headers() {\n        return this.configuration.headers;\n    }\n    get credentials() {\n        return this.configuration.credentials;\n    }\n}\nexports.Configuration = Configuration;\nexports.DefaultConfig = new Configuration();\n/**\n * This is the base class for all generated API classes.\n */\nclass BaseAPI {\n    constructor(configuration = exports.DefaultConfig) {\n        this.configuration = configuration;\n        this.fetchApi = (url, init) => __awaiter(this, void 0, void 0, function* () {\n            let fetchParams = { url, init };\n            for (const middleware of this.middleware) {\n                if (middleware.pre) {\n                    fetchParams = (yield middleware.pre(Object.assign({ fetch: this.fetchApi }, fetchParams))) || fetchParams;\n                }\n            }\n            let response = undefined;\n            try {\n                response = yield (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);\n            }\n            catch (e) {\n                for (const middleware of this.middleware) {\n                    if (middleware.onError) {\n                        response = (yield middleware.onError({\n                            fetch: this.fetchApi,\n                            url: fetchParams.url,\n                            init: fetchParams.init,\n                            error: e,\n                            response: response ? response.clone() : undefined,\n                        })) || response;\n                    }\n                }\n                if (response === undefined) {\n                    if (e instanceof Error) {\n                        throw new FetchError(e, 'The request failed and the interceptors did not return an alternative response');\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            for (const middleware of this.middleware) {\n                if (middleware.post) {\n                    response = (yield middleware.post({\n                        fetch: this.fetchApi,\n                        url: fetchParams.url,\n                        init: fetchParams.init,\n                        response: response.clone(),\n                    })) || response;\n                }\n            }\n            return response;\n        });\n        this.middleware = configuration.middleware;\n    }\n    withMiddleware(...middlewares) {\n        const next = this.clone();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n    withPreMiddleware(...preMiddlewares) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware(...middlewares);\n    }\n    withPostMiddleware(...postMiddlewares) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware(...middlewares);\n    }\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    isJsonMime(mime) {\n        if (!mime) {\n            return false;\n        }\n        return BaseAPI.jsonRegex.test(mime);\n    }\n    request(context, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { url, init } = yield this.createFetchParams(context, initOverrides);\n            const response = yield this.fetchApi(url, init);\n            if (response && (response.status >= 200 && response.status < 300)) {\n                return response;\n            }\n            throw new ResponseError(response, 'Response returned an error code');\n        });\n    }\n    createFetchParams(context, initOverrides) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let url = this.configuration.basePath + context.path;\n            if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n                // only add the querystring to the URL if there are query parameters.\n                // this is done to avoid urls ending with a \"?\" character which buggy webservers\n                // do not handle correctly sometimes.\n                url += '?' + this.configuration.queryParamsStringify(context.query);\n            }\n            const headers = Object.assign({}, this.configuration.headers, context.headers);\n            Object.keys(headers).forEach(key => headers[key] === undefined ? delete headers[key] : {});\n            const initOverrideFn = typeof initOverrides === \"function\"\n                ? initOverrides\n                : () => __awaiter(this, void 0, void 0, function* () { return initOverrides; });\n            const initParams = {\n                method: context.method,\n                headers,\n                body: context.body,\n                credentials: this.configuration.credentials,\n            };\n            const overriddenInit = Object.assign(Object.assign({}, initParams), (yield initOverrideFn({\n                init: initParams,\n                context,\n            })));\n            let body;\n            if (isFormData(overriddenInit.body)\n                || (overriddenInit.body instanceof URLSearchParams)\n                || isBlob(overriddenInit.body)) {\n                body = overriddenInit.body;\n            }\n            else if (this.isJsonMime(headers['Content-Type'])) {\n                body = JSON.stringify(overriddenInit.body);\n            }\n            else {\n                body = overriddenInit.body;\n            }\n            const init = Object.assign(Object.assign({}, overriddenInit), { body });\n            return { url, init };\n        });\n    }\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    clone() {\n        const constructor = this.constructor;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n}\nexports.BaseAPI = BaseAPI;\nBaseAPI.jsonRegex = new RegExp('^(:?application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(:?;.*)?$', 'i');\n;\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\nfunction isFormData(value) {\n    return typeof FormData !== \"undefined\" && value instanceof FormData;\n}\nclass ResponseError extends Error {\n    constructor(response, msg) {\n        super(msg);\n        this.response = response;\n        this.name = \"ResponseError\";\n    }\n}\nexports.ResponseError = ResponseError;\nclass FetchError extends Error {\n    constructor(cause, msg) {\n        super(msg);\n        this.cause = cause;\n        this.name = \"FetchError\";\n    }\n}\nexports.FetchError = FetchError;\nclass RequiredError extends Error {\n    constructor(field, msg) {\n        super(msg);\n        this.field = field;\n        this.name = \"RequiredError\";\n    }\n}\nexports.RequiredError = RequiredError;\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\nfunction querystring(params, prefix = '') {\n    return Object.keys(params)\n        .map(key => querystringSingleKey(key, params[key], prefix))\n        .filter(part => part.length > 0)\n        .join('&');\n}\nfunction querystringSingleKey(key, value, keyPrefix = '') {\n    const fullKey = keyPrefix + (keyPrefix.length ? `[${key}]` : key);\n    if (value instanceof Array) {\n        const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n            .join(`&${encodeURIComponent(fullKey)}=`);\n        return `${encodeURIComponent(fullKey)}=${multiValue}`;\n    }\n    if (value instanceof Set) {\n        const valueAsArray = Array.from(value);\n        return querystringSingleKey(key, valueAsArray, keyPrefix);\n    }\n    if (value instanceof Date) {\n        return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n    }\n    if (value instanceof Object) {\n        return querystring(value, fullKey);\n    }\n    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n}\nfunction exists(json, key) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\nfunction mapValues(data, fn) {\n    return Object.keys(data).reduce((acc, key) => (Object.assign(Object.assign({}, acc), { [key]: fn(data[key]) })), {});\n}\nfunction canConsumeForm(consumes) {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\nclass JSONApiResponse {\n    constructor(raw, transformer = (jsonValue) => jsonValue) {\n        this.raw = raw;\n        this.transformer = transformer;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.transformer(yield this.raw.json());\n        });\n    }\n}\nexports.JSONApiResponse = JSONApiResponse;\nclass VoidApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return undefined;\n        });\n    }\n}\nexports.VoidApiResponse = VoidApiResponse;\nclass BlobApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.raw.blob();\n        });\n    }\n    ;\n}\nexports.BlobApiResponse = BlobApiResponse;\nclass TextApiResponse {\n    constructor(raw) {\n        this.raw = raw;\n    }\n    value() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.raw.text();\n        });\n    }\n    ;\n}\nexports.TextApiResponse = TextApiResponse;\n//# sourceMappingURL=runtime.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/runtime.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/index.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TransactionTree = exports.ConditionWaiterImpl = exports.SenderAuthenticationKeyPair = exports.SignedTransaction = exports.BlockchainTransactionClient = void 0;\n__exportStar(__webpack_require__(/*! ./generated/openapi/runtime */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/runtime.js\"), exports);\n__exportStar(__webpack_require__(/*! ./generated/openapi/apis/index */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/apis/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./generated/openapi/models/index */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/models/index.js\"), exports);\nvar BlockchainTransactionClient_1 = __webpack_require__(/*! ./transactionclient/BlockchainTransactionClient */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/BlockchainTransactionClient.js\");\nObject.defineProperty(exports, \"BlockchainTransactionClient\", ({ enumerable: true, get: function () { return BlockchainTransactionClient_1.BlockchainTransactionClient; } }));\nvar SignedTransaction_1 = __webpack_require__(/*! ./transactionclient/SignedTransaction */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SignedTransaction.js\");\nObject.defineProperty(exports, \"SignedTransaction\", ({ enumerable: true, get: function () { return SignedTransaction_1.SignedTransaction; } }));\nvar SenderAuthenticationKeyPair_1 = __webpack_require__(/*! ./transactionclient/SenderAuthenticationKeyPair */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SenderAuthenticationKeyPair.js\");\nObject.defineProperty(exports, \"SenderAuthenticationKeyPair\", ({ enumerable: true, get: function () { return SenderAuthenticationKeyPair_1.SenderAuthenticationKeyPair; } }));\nvar ConditionWaiter_1 = __webpack_require__(/*! ./transactionclient/ConditionWaiter */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/ConditionWaiter.js\");\nObject.defineProperty(exports, \"ConditionWaiterImpl\", ({ enumerable: true, get: function () { return ConditionWaiter_1.ConditionWaiterImpl; } }));\nvar TransactionTree_1 = __webpack_require__(/*! ./transactionclient/TransactionTree */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/TransactionTree.js\");\nObject.defineProperty(exports, \"TransactionTree\", ({ enumerable: true, get: function () { return TransactionTree_1.TransactionTree; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRywyQkFBMkIsR0FBRyxtQ0FBbUMsR0FBRyx5QkFBeUIsR0FBRyxtQ0FBbUM7QUFDN0osYUFBYSxtQkFBTyxDQUFDLG1LQUE2QjtBQUNsRCxhQUFhLG1CQUFPLENBQUMseUtBQWdDO0FBQ3JELGFBQWEsbUJBQU8sQ0FBQyw2S0FBa0M7QUFDdkQsb0NBQW9DLG1CQUFPLENBQUMsMk1BQWlEO0FBQzdGLCtEQUE4RCxFQUFFLHFDQUFxQyxxRUFBcUUsRUFBQztBQUMzSywwQkFBMEIsbUJBQU8sQ0FBQyx1TEFBdUM7QUFDekUscURBQW9ELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQzdJLG9DQUFvQyxtQkFBTyxDQUFDLDJNQUFpRDtBQUM3RiwrREFBOEQsRUFBRSxxQ0FBcUMscUVBQXFFLEVBQUM7QUFDM0ssd0JBQXdCLG1CQUFPLENBQUMsbUxBQXFDO0FBQ3JFLHVEQUFzRCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUMvSSx3QkFBd0IsbUJBQU8sQ0FBQyxtTEFBcUM7QUFDckUsbURBQWtELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3ZJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi9pbmRleC5qcz9jZjRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRyYW5zYWN0aW9uVHJlZSA9IGV4cG9ydHMuQ29uZGl0aW9uV2FpdGVySW1wbCA9IGV4cG9ydHMuU2VuZGVyQXV0aGVudGljYXRpb25LZXlQYWlyID0gZXhwb3J0cy5TaWduZWRUcmFuc2FjdGlvbiA9IGV4cG9ydHMuQmxvY2tjaGFpblRyYW5zYWN0aW9uQ2xpZW50ID0gdm9pZCAwO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dlbmVyYXRlZC9vcGVuYXBpL3J1bnRpbWVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dlbmVyYXRlZC9vcGVuYXBpL2FwaXMvaW5kZXhcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2dlbmVyYXRlZC9vcGVuYXBpL21vZGVscy9pbmRleFwiKSwgZXhwb3J0cyk7XG52YXIgQmxvY2tjaGFpblRyYW5zYWN0aW9uQ2xpZW50XzEgPSByZXF1aXJlKFwiLi90cmFuc2FjdGlvbmNsaWVudC9CbG9ja2NoYWluVHJhbnNhY3Rpb25DbGllbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCbG9ja2NoYWluVHJhbnNhY3Rpb25DbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJsb2NrY2hhaW5UcmFuc2FjdGlvbkNsaWVudF8xLkJsb2NrY2hhaW5UcmFuc2FjdGlvbkNsaWVudDsgfSB9KTtcbnZhciBTaWduZWRUcmFuc2FjdGlvbl8xID0gcmVxdWlyZShcIi4vdHJhbnNhY3Rpb25jbGllbnQvU2lnbmVkVHJhbnNhY3Rpb25cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTaWduZWRUcmFuc2FjdGlvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU2lnbmVkVHJhbnNhY3Rpb25fMS5TaWduZWRUcmFuc2FjdGlvbjsgfSB9KTtcbnZhciBTZW5kZXJBdXRoZW50aWNhdGlvbktleVBhaXJfMSA9IHJlcXVpcmUoXCIuL3RyYW5zYWN0aW9uY2xpZW50L1NlbmRlckF1dGhlbnRpY2F0aW9uS2V5UGFpclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNlbmRlckF1dGhlbnRpY2F0aW9uS2V5UGFpclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU2VuZGVyQXV0aGVudGljYXRpb25LZXlQYWlyXzEuU2VuZGVyQXV0aGVudGljYXRpb25LZXlQYWlyOyB9IH0pO1xudmFyIENvbmRpdGlvbldhaXRlcl8xID0gcmVxdWlyZShcIi4vdHJhbnNhY3Rpb25jbGllbnQvQ29uZGl0aW9uV2FpdGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29uZGl0aW9uV2FpdGVySW1wbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ29uZGl0aW9uV2FpdGVyXzEuQ29uZGl0aW9uV2FpdGVySW1wbDsgfSB9KTtcbnZhciBUcmFuc2FjdGlvblRyZWVfMSA9IHJlcXVpcmUoXCIuL3RyYW5zYWN0aW9uY2xpZW50L1RyYW5zYWN0aW9uVHJlZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zYWN0aW9uVHJlZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVHJhbnNhY3Rpb25UcmVlXzEuVHJhbnNhY3Rpb25UcmVlOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/BlockchainTransactionClient.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/BlockchainTransactionClient.js ***!
  \*****************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockchainTransactionClient = void 0;\nconst openapi_1 = __webpack_require__(/*! ../generated/openapi */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/generated/openapi/index.js\");\nconst ConditionWaiter_1 = __webpack_require__(/*! ./ConditionWaiter */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/ConditionWaiter.js\");\nconst SignedTransaction_1 = __webpack_require__(/*! ./SignedTransaction */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SignedTransaction.js\");\nconst ShardAndChainControllerTransactionClient_1 = __webpack_require__(/*! ./ShardAndChainControllerTransactionClient */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/ShardAndChainControllerTransactionClient.js\");\nconst TransactionTree_1 = __webpack_require__(/*! ./TransactionTree */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/TransactionTree.js\");\n/** A client that supports signing, sending and waiting for transactions on the blockchain. */\nclass BlockchainTransactionClient {\n    constructor(transactionClient, authentication, transactionValidityDuration, spawnedEventTimeout, currentTime, conditionWaiter) {\n        this.authentication = authentication;\n        this.transactionClient = transactionClient;\n        this.transactionValidityDuration = transactionValidityDuration;\n        this.spawnedEventTimeout = spawnedEventTimeout;\n        this.currentTime = currentTime;\n        this.conditionWaiter = conditionWaiter;\n    }\n    /**\n     * Create a blockchain transaction client.\n     * @param baseUrl the base url of the chain to connect to\n     * @param authentication authentication of the sender that will sign transactions\n     * @param transactionValidityInMillis the number of milliseconds a signed transaction is valid for\n     *     inclusion in a block.\n     * @param spawnedEventTimeoutInMillis the number of milliseconds the client will wait for a\n     *     spawned event to be included in a block before timing out.\n     * @returns A blockchain transaction client\n     */\n    static create(baseUrl, authentication, transactionValidityInMillis, spawnedEventTimeoutInMillis) {\n        const chainControllerApi = new openapi_1.ChainControllerApi(new openapi_1.Configuration({ basePath: baseUrl }));\n        const shardControllerApi = new openapi_1.ShardControllerApi(new openapi_1.Configuration({ basePath: baseUrl }));\n        const transactionClient = new ShardAndChainControllerTransactionClient_1.ShardAndChainControllerTransactionClient(chainControllerApi, shardControllerApi);\n        return new BlockchainTransactionClient(transactionClient, authentication, transactionValidityInMillis !== null && transactionValidityInMillis !== void 0 ? transactionValidityInMillis : this.DEFAULT_TRANSACTION_VALIDITY_DURATION, spawnedEventTimeoutInMillis !== null && spawnedEventTimeoutInMillis !== void 0 ? spawnedEventTimeoutInMillis : this.DEFAULT_SPAWNED_EVENT_TIMEOUT, this.DEFAULT_CURRENT_TIME, ConditionWaiter_1.ConditionWaiterImpl.create());\n    }\n    /**\n     * Create a blockchain transaction client for a custom API.\n     * @param transactionClient the client used for communicating with the blockchain api\n     * @param authentication authentication of the sender that will sign transactions\n     * @param transactionValidityInMillis the number of milliseconds a signed transaction is valid for\n     *     inclusion in a block.\n     * @param spawnedEventTimeoutInMillis the number of milliseconds the client will wait for a\n     *     spawned event to be included in a block before timing out.\n     * @returns A blockchain transaction client\n     */\n    static createForCustomApi(transactionClient, authentication, transactionValidityInMillis, spawnedEventTimeoutInMillis) {\n        return new BlockchainTransactionClient(transactionClient, authentication, transactionValidityInMillis !== null && transactionValidityInMillis !== void 0 ? transactionValidityInMillis : this.DEFAULT_TRANSACTION_VALIDITY_DURATION, spawnedEventTimeoutInMillis !== null && spawnedEventTimeoutInMillis !== void 0 ? spawnedEventTimeoutInMillis : this.DEFAULT_SPAWNED_EVENT_TIMEOUT, this.DEFAULT_CURRENT_TIME, ConditionWaiter_1.ConditionWaiterImpl.create());\n    }\n    /**\n     * Create a blockchain transaction client used for testing.\n     * @param transactionClient the client used for communicating with the blockchain api\n     * @param authentication authentication of the sender that will sign transactions\n     * @param transactionValidityDuration the number of milliseconds a signed transaction is valid for\n     *      inclusion in a block.\n     * @param spawnedEventTimeout the number of milliseconds the client will wait for a\n     *     spawned event to be included in a block before timing out. @param currentTime\n     * @param currentTime support for injecting custom time\n     * @param conditionWaiter support for injecting custom condition waiter\n     * @returns A blockchain transaction client\n     */\n    static createForTest(transactionClient, authentication, transactionValidityDuration, spawnedEventTimeout, currentTime, conditionWaiter) {\n        return new BlockchainTransactionClient(transactionClient, authentication, transactionValidityDuration, spawnedEventTimeout, currentTime, conditionWaiter);\n    }\n    /**\n     * Sign a transaction in preparation for sending it to the blockchain. The signed transaction\n     * expires after {@link #transactionValidityDuration} millis or if the nonce of the signer\n     * changes.\n     * @param transaction the transaction to sign\n     * @param gasCost the amount of gas to allocate for executing the transaction.\n     * @param applicableUntil the latest time this transaction is allowed\n     * @returns a signed transaction corresponding to the passed transaction.\n     */\n    sign(transaction, gasCost, applicableUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const sender = this.authentication.getAddress();\n            const nonce = yield this.transactionClient.getNonce(sender);\n            const chainId = yield this.transactionClient.getChainId();\n            let validToTime = this.currentTime() + this.transactionValidityDuration;\n            if (applicableUntil !== undefined) {\n                validToTime = Math.min(validToTime, applicableUntil);\n            }\n            return SignedTransaction_1.SignedTransaction.create(this.authentication, nonce, validToTime, gasCost, chainId, transaction);\n        });\n    }\n    /**\n     * Sends a signed transaction to the blockchain for execution and inclusion in a block.\n     * @param signedTransaction the signed transaction to send.\n     * @returns a sent transaction corresponding to the signed transaction.\n     */\n    send(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bytes = signedTransaction.serialize();\n            const serializedTransaction = { payload: bytes.toString(\"base64\") };\n            const transactionPointer = yield this.transactionClient.putTransaction(serializedTransaction);\n            return { signedTransaction, transactionPointer };\n        });\n    }\n    /**\n     * Sign and send a transaction to the blockchain for execution.\n     * @param transaction the transaction to sign and send\n     * @param gasCost the amount of gas to allocate for executing the transaction.\n     * @returns a sent transaction corresponding to the signed transaction.\n     */\n    signAndSend(transaction, gasCost) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send(yield this.sign(transaction, gasCost));\n        });\n    }\n    /**\n     * Waits for a sent transaction to be included in a block on the blockchain.\n     * @param sentTransaction a transaction that has been sent to the blockchain.\n     * @returns the executed state of the transaction.\n     */\n    waitForInclusionInBlock(sentTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const senderShard = sentTransaction.transactionPointer.destinationShardId;\n            const transactionIdentifier = sentTransaction.transactionPointer.identifier;\n            const validToTime = sentTransaction.signedTransaction.getValidToTime();\n            const timeToWait = validToTime - this.currentTime();\n            return this.waitForTransaction(senderShard, transactionIdentifier, timeToWait);\n        });\n    }\n    /**\n     * Recursively wait for the inclusion of all events spawned by the transaction and the\n     * transaction's events.\n     * @param transaction the transaction to wait for\n     * @returns the execution status for all recursive events spawned by the transaction.\n     */\n    waitForSpawnedEvents(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let executedTransaction = transaction;\n            if (\"signedTransaction\" in executedTransaction) {\n                executedTransaction = yield this.waitForInclusionInBlock(executedTransaction);\n            }\n            const events = [];\n            const executionStatus = executedTransaction.executionStatus;\n            const pendingEvents = [...executionStatus.events];\n            while (pendingEvents.length !== 0) {\n                const nextEvent = pendingEvents.shift();\n                const identifier = nextEvent.identifier;\n                const shardId = nextEvent.destinationShardId;\n                const executed = yield this.waitForTransaction(shardId, identifier, this.spawnedEventTimeout);\n                events.push(executed);\n                const executedExecutionStatus = executed.executionStatus;\n                pendingEvents.push(...executedExecutionStatus.events);\n            }\n            return new TransactionTree_1.TransactionTree(executedTransaction, events);\n        });\n    }\n    /**\n     * Try to ensure that the given transaction is included in a final block before the specified time\n     * has passed. Will try to resend the transaction until it has been included in a block or the\n     * specified time has passed. If the transaction has not been included, or we are unable to\n     * determine inclusion, due to network issues, an exception is thrown.\n     *\n     * <p>To determine that a tried transaction has not been included in a block, we must wait until\n     * the last valid block that could have included the transaction has been finalized. The caller of\n     * this function can specify the amount of time to wait for the last valid block after validity\n     * time of the tried transaction has expired.\n     * @param transaction The transaction to sign and send\n     * @param transactionGasCost The amount of gas to allocate for executing the transaction\n     * @param includeBefore The UTC timestamp after which the transaction will no longer tried to be\n     *     sent\n     * @param lastValidBlockWaitTime The amount of time to wait for the last valid block that a tried\n     *     transaction can be included in\n     * @returns The executed state of the transaction\n     * @throws ApiException on io error\n     */\n    ensureInclusionInBlock(transaction, transactionGasCost, includeBefore, lastValidBlockWaitTime) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Default is 30 days\n            const effectiveLastValidBlockWaitTime = lastValidBlockWaitTime !== null && lastValidBlockWaitTime !== void 0 ? lastValidBlockWaitTime : 2592000000;\n            while (includeBefore > this.currentTime()) {\n                const sentTransaction = yield this.send(yield this.sign(transaction, transactionGasCost, includeBefore));\n                const executedTransaction = yield this.waitForExecutedTransaction(sentTransaction, effectiveLastValidBlockWaitTime);\n                if (executedTransaction !== undefined) {\n                    return executedTransaction;\n                }\n            }\n            throw new Error(\"Transaction was not included in block before \" + includeBefore);\n        });\n    }\n    waitForExecutedTransaction(sentTransaction, latestBlockWait) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield this.waitForInclusionInBlock(sentTransaction);\n            }\n            catch (_) {\n                return yield this.waitForLastPossibleBlockToInclude(sentTransaction, latestBlockWait);\n            }\n        });\n    }\n    waitForLastPossibleBlockToInclude(sentTransaction, latestBlockWait) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const shardId = sentTransaction.transactionPointer.destinationShardId;\n            const validToTime = sentTransaction.signedTransaction.getValidToTime();\n            const timeOut = latestBlockWait + validToTime;\n            yield this.conditionWaiter.waitForCondition(() => __awaiter(this, void 0, void 0, function* () { return yield this.transactionClient.getLatestProductionTime(shardId); }), (productionTime) => productionTime > validToTime, timeOut, () => `Unable to get block with production time greater than ${validToTime} for shard ${shardId}`);\n            const transactionIdentifier = sentTransaction.transactionPointer.identifier;\n            // Stryker disable BlockStatement\n            try {\n                return yield this.transactionClient.getTransaction(shardId, transactionIdentifier);\n            }\n            catch (_) {\n                return undefined;\n            }\n        });\n    }\n    // Stryker restore BlockStatement\n    waitForTransaction(shardId, transactionId, timeout) {\n        return this.conditionWaiter.waitForCondition(() => this.transactionClient.getTransaction(shardId, transactionId), (value) => value.executionStatus !== undefined && value.executionStatus.finalized, timeout, () => `Transaction '${transactionId}' was not included in a block at shard '${shardId}'`);\n    }\n}\nexports.BlockchainTransactionClient = BlockchainTransactionClient;\n/**\n * Default signed transaction vilidity time in milliseconds. This is three minutes in\n * milliseconds.\n */\nBlockchainTransactionClient.DEFAULT_TRANSACTION_VALIDITY_DURATION = 180000;\n/**\n * Default timeout for spawned event to be inclusion in a block. This is ten minutes in\n * milliseconds.\n */\nBlockchainTransactionClient.DEFAULT_SPAWNED_EVENT_TIMEOUT = 600000;\n/**\n * Default current time is system time.\n */\nBlockchainTransactionClient.DEFAULT_CURRENT_TIME = () => new Date().getTime();\n//# sourceMappingURL=BlockchainTransactionClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/BlockchainTransactionClient.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/ConditionWaiter.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/ConditionWaiter.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TimeSupportSystem = exports.ConditionWaiterImpl = void 0;\n/**\n * Can wait for a condition to become fulfilled by repeatedly sleeping the current thread between\n * checks.\n */\nclass ConditionWaiterImpl {\n    constructor(timeSupport) {\n        this.timeSupport = timeSupport;\n    }\n    /**\n     * @inheritdoc\n     */\n    waitForCondition(valueSupplier, valuePredicate, timeoutMs, errorMessage) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const end = this.timeSupport.now() + timeoutMs;\n            let increasingSleep = 0;\n            let remainingTime;\n            do {\n                let value = undefined;\n                try {\n                    value = yield valueSupplier();\n                }\n                catch (error) {\n                    // Empty try again\n                }\n                if (value !== undefined && valuePredicate(value)) {\n                    return value;\n                }\n                increasingSleep++;\n                const sleepDurationMs = Math.min(30000, 100 * increasingSleep);\n                remainingTime = Math.max(0, end - this.timeSupport.now());\n                const effectiveSleepDuration = Math.min(sleepDurationMs, remainingTime);\n                yield this.timeSupport.sleep(effectiveSleepDuration);\n            } while (remainingTime > 0);\n            throw new Error(errorMessage());\n        });\n    }\n    /**\n     * Creates a new condition waiter using the system time and system sleep.\n     * @returns The transaction waiter.\n     */\n    static create() {\n        return new ConditionWaiterImpl(exports.TimeSupportSystem);\n    }\n    /**\n     * Creates a new condition waiter.\n     * @param timeSupport Support for time (current time and sleep).\n     * @returns The transaction waiter.\n     */\n    static createForTest(timeSupport) {\n        return new ConditionWaiterImpl(timeSupport);\n    }\n}\nexports.ConditionWaiterImpl = ConditionWaiterImpl;\n/** Time support that uses the underlying operating system. */\nexports.TimeSupportSystem = {\n    /** @inheritDoc */\n    now() {\n        return new Date().getTime();\n    },\n    /** @inheritDoc */\n    sleep(ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    },\n};\n//# sourceMappingURL=ConditionWaiter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi90cmFuc2FjdGlvbmNsaWVudC9Db25kaXRpb25XYWl0ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLDJCQUEyQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi90cmFuc2FjdGlvbmNsaWVudC9Db25kaXRpb25XYWl0ZXIuanM/NjEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5UaW1lU3VwcG9ydFN5c3RlbSA9IGV4cG9ydHMuQ29uZGl0aW9uV2FpdGVySW1wbCA9IHZvaWQgMDtcbi8qKlxuICogQ2FuIHdhaXQgZm9yIGEgY29uZGl0aW9uIHRvIGJlY29tZSBmdWxmaWxsZWQgYnkgcmVwZWF0ZWRseSBzbGVlcGluZyB0aGUgY3VycmVudCB0aHJlYWQgYmV0d2VlblxuICogY2hlY2tzLlxuICovXG5jbGFzcyBDb25kaXRpb25XYWl0ZXJJbXBsIHtcbiAgICBjb25zdHJ1Y3Rvcih0aW1lU3VwcG9ydCkge1xuICAgICAgICB0aGlzLnRpbWVTdXBwb3J0ID0gdGltZVN1cHBvcnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0ZG9jXG4gICAgICovXG4gICAgd2FpdEZvckNvbmRpdGlvbih2YWx1ZVN1cHBsaWVyLCB2YWx1ZVByZWRpY2F0ZSwgdGltZW91dE1zLCBlcnJvck1lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGVuZCA9IHRoaXMudGltZVN1cHBvcnQubm93KCkgKyB0aW1lb3V0TXM7XG4gICAgICAgICAgICBsZXQgaW5jcmVhc2luZ1NsZWVwID0gMDtcbiAgICAgICAgICAgIGxldCByZW1haW5pbmdUaW1lO1xuICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IHlpZWxkIHZhbHVlU3VwcGxpZXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEVtcHR5IHRyeSBhZ2FpblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZVByZWRpY2F0ZSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpbmNyZWFzaW5nU2xlZXArKztcbiAgICAgICAgICAgICAgICBjb25zdCBzbGVlcER1cmF0aW9uTXMgPSBNYXRoLm1pbigzMDAwMCwgMTAwICogaW5jcmVhc2luZ1NsZWVwKTtcbiAgICAgICAgICAgICAgICByZW1haW5pbmdUaW1lID0gTWF0aC5tYXgoMCwgZW5kIC0gdGhpcy50aW1lU3VwcG9ydC5ub3coKSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZWZmZWN0aXZlU2xlZXBEdXJhdGlvbiA9IE1hdGgubWluKHNsZWVwRHVyYXRpb25NcywgcmVtYWluaW5nVGltZSk7XG4gICAgICAgICAgICAgICAgeWllbGQgdGhpcy50aW1lU3VwcG9ydC5zbGVlcChlZmZlY3RpdmVTbGVlcER1cmF0aW9uKTtcbiAgICAgICAgICAgIH0gd2hpbGUgKHJlbWFpbmluZ1RpbWUgPiAwKTtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvck1lc3NhZ2UoKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IGNvbmRpdGlvbiB3YWl0ZXIgdXNpbmcgdGhlIHN5c3RlbSB0aW1lIGFuZCBzeXN0ZW0gc2xlZXAuXG4gICAgICogQHJldHVybnMgVGhlIHRyYW5zYWN0aW9uIHdhaXRlci5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlKCkge1xuICAgICAgICByZXR1cm4gbmV3IENvbmRpdGlvbldhaXRlckltcGwoZXhwb3J0cy5UaW1lU3VwcG9ydFN5c3RlbSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgY29uZGl0aW9uIHdhaXRlci5cbiAgICAgKiBAcGFyYW0gdGltZVN1cHBvcnQgU3VwcG9ydCBmb3IgdGltZSAoY3VycmVudCB0aW1lIGFuZCBzbGVlcCkuXG4gICAgICogQHJldHVybnMgVGhlIHRyYW5zYWN0aW9uIHdhaXRlci5cbiAgICAgKi9cbiAgICBzdGF0aWMgY3JlYXRlRm9yVGVzdCh0aW1lU3VwcG9ydCkge1xuICAgICAgICByZXR1cm4gbmV3IENvbmRpdGlvbldhaXRlckltcGwodGltZVN1cHBvcnQpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29uZGl0aW9uV2FpdGVySW1wbCA9IENvbmRpdGlvbldhaXRlckltcGw7XG4vKiogVGltZSBzdXBwb3J0IHRoYXQgdXNlcyB0aGUgdW5kZXJseWluZyBvcGVyYXRpbmcgc3lzdGVtLiAqL1xuZXhwb3J0cy5UaW1lU3VwcG9ydFN5c3RlbSA9IHtcbiAgICAvKiogQGluaGVyaXREb2MgKi9cbiAgICBub3coKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICB9LFxuICAgIC8qKiBAaW5oZXJpdERvYyAqL1xuICAgIHNsZWVwKG1zKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtcykpO1xuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q29uZGl0aW9uV2FpdGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/ConditionWaiter.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SenderAuthenticationKeyPair.js":
/*!*****************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SenderAuthenticationKeyPair.js ***!
  \*****************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SenderAuthenticationKeyPair = void 0;\nconst CryptoUtils_1 = __webpack_require__(/*! ../CryptoUtils */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/CryptoUtils.js\");\nconst SignedTransaction_1 = __webpack_require__(/*! ./SignedTransaction */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SignedTransaction.js\");\n/**\n * Sender authentication based on a key-pair, consisting of a public and private key. The sender\n * address is computed from the public key.\n */\nclass SenderAuthenticationKeyPair {\n    /**\n     * Creates authentication for a sender.\n     * @param keyPair The public and private key of the sender. Not nullable.\n     */\n    constructor(keyPair) {\n        this.keyPair = keyPair;\n    }\n    /**\n     * Creates a sender's authentication from a private key.\n     * @param privateKey The private key to create a key pair from, written as a value in hexidecimal.\n     * @returns authentication for a transaction sender.\n     */\n    static fromString(privateKey) {\n        return new SenderAuthenticationKeyPair(CryptoUtils_1.CryptoUtils.privateKeyToKeypair(privateKey));\n    }\n    /** @inheritDoc */\n    getAddress() {\n        return CryptoUtils_1.CryptoUtils.keyPairToAccountAddress(this.keyPair);\n    }\n    /** @inheritDoc */\n    sign(transactionPayload, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const hash = SignedTransaction_1.SignedTransaction.calculateHash(transactionPayload, chainId);\n            return CryptoUtils_1.CryptoUtils.signatureToBuffer(this.keyPair.sign(hash)).toString(\"hex\");\n        });\n    }\n}\nexports.SenderAuthenticationKeyPair = SenderAuthenticationKeyPair;\n//# sourceMappingURL=SenderAuthenticationKeyPair.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi90cmFuc2FjdGlvbmNsaWVudC9TZW5kZXJBdXRoZW50aWNhdGlvbktleVBhaXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQyxzQkFBc0IsbUJBQU8sQ0FBQyx3SUFBZ0I7QUFDOUMsNEJBQTRCLG1CQUFPLENBQUMscUtBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1DQUFtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9ibG9ja2NoYWluLWFwaS10cmFuc2FjdGlvbi1jbGllbnQvdGFyZ2V0L21haW4vdHJhbnNhY3Rpb25jbGllbnQvU2VuZGVyQXV0aGVudGljYXRpb25LZXlQYWlyLmpzPzdhY2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2VuZGVyQXV0aGVudGljYXRpb25LZXlQYWlyID0gdm9pZCAwO1xuY29uc3QgQ3J5cHRvVXRpbHNfMSA9IHJlcXVpcmUoXCIuLi9DcnlwdG9VdGlsc1wiKTtcbmNvbnN0IFNpZ25lZFRyYW5zYWN0aW9uXzEgPSByZXF1aXJlKFwiLi9TaWduZWRUcmFuc2FjdGlvblwiKTtcbi8qKlxuICogU2VuZGVyIGF1dGhlbnRpY2F0aW9uIGJhc2VkIG9uIGEga2V5LXBhaXIsIGNvbnNpc3Rpbmcgb2YgYSBwdWJsaWMgYW5kIHByaXZhdGUga2V5LiBUaGUgc2VuZGVyXG4gKiBhZGRyZXNzIGlzIGNvbXB1dGVkIGZyb20gdGhlIHB1YmxpYyBrZXkuXG4gKi9cbmNsYXNzIFNlbmRlckF1dGhlbnRpY2F0aW9uS2V5UGFpciB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhdXRoZW50aWNhdGlvbiBmb3IgYSBzZW5kZXIuXG4gICAgICogQHBhcmFtIGtleVBhaXIgVGhlIHB1YmxpYyBhbmQgcHJpdmF0ZSBrZXkgb2YgdGhlIHNlbmRlci4gTm90IG51bGxhYmxlLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGtleVBhaXIpIHtcbiAgICAgICAgdGhpcy5rZXlQYWlyID0ga2V5UGFpcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHNlbmRlcidzIGF1dGhlbnRpY2F0aW9uIGZyb20gYSBwcml2YXRlIGtleS5cbiAgICAgKiBAcGFyYW0gcHJpdmF0ZUtleSBUaGUgcHJpdmF0ZSBrZXkgdG8gY3JlYXRlIGEga2V5IHBhaXIgZnJvbSwgd3JpdHRlbiBhcyBhIHZhbHVlIGluIGhleGlkZWNpbWFsLlxuICAgICAqIEByZXR1cm5zIGF1dGhlbnRpY2F0aW9uIGZvciBhIHRyYW5zYWN0aW9uIHNlbmRlci5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVN0cmluZyhwcml2YXRlS2V5KSB7XG4gICAgICAgIHJldHVybiBuZXcgU2VuZGVyQXV0aGVudGljYXRpb25LZXlQYWlyKENyeXB0b1V0aWxzXzEuQ3J5cHRvVXRpbHMucHJpdmF0ZUtleVRvS2V5cGFpcihwcml2YXRlS2V5KSk7XG4gICAgfVxuICAgIC8qKiBAaW5oZXJpdERvYyAqL1xuICAgIGdldEFkZHJlc3MoKSB7XG4gICAgICAgIHJldHVybiBDcnlwdG9VdGlsc18xLkNyeXB0b1V0aWxzLmtleVBhaXJUb0FjY291bnRBZGRyZXNzKHRoaXMua2V5UGFpcik7XG4gICAgfVxuICAgIC8qKiBAaW5oZXJpdERvYyAqL1xuICAgIHNpZ24odHJhbnNhY3Rpb25QYXlsb2FkLCBjaGFpbklkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBoYXNoID0gU2lnbmVkVHJhbnNhY3Rpb25fMS5TaWduZWRUcmFuc2FjdGlvbi5jYWxjdWxhdGVIYXNoKHRyYW5zYWN0aW9uUGF5bG9hZCwgY2hhaW5JZCk7XG4gICAgICAgICAgICByZXR1cm4gQ3J5cHRvVXRpbHNfMS5DcnlwdG9VdGlscy5zaWduYXR1cmVUb0J1ZmZlcih0aGlzLmtleVBhaXIuc2lnbihoYXNoKSkudG9TdHJpbmcoXCJoZXhcIik7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuU2VuZGVyQXV0aGVudGljYXRpb25LZXlQYWlyID0gU2VuZGVyQXV0aGVudGljYXRpb25LZXlQYWlyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VuZGVyQXV0aGVudGljYXRpb25LZXlQYWlyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SenderAuthenticationKeyPair.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/ShardAndChainControllerTransactionClient.js":
/*!******************************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/ShardAndChainControllerTransactionClient.js ***!
  \******************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ShardAndChainControllerTransactionClient = void 0;\n/** Transaction client using the shard and chain controller APIs. */\nclass ShardAndChainControllerTransactionClient {\n    /**\n     * Create transaction client.\n     * @param chainController the client used for communicating with the chain api\n     * @param shardController the client used for communicating with the shard api\n     */\n    constructor(chainController, shardController) {\n        this.chainController = chainController;\n        this.shardController = shardController;\n    }\n    /** @inheritDoc */\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.chainController.getChain()).chainId;\n        });\n    }\n    /** @inheritDoc */\n    getNonce(blockchainAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.chainController.getAccount({ address: blockchainAddress })).nonce;\n        });\n    }\n    /** @inheritDoc */\n    getTransaction(shardId, transactionId) {\n        return this.shardController.getTransaction({ shardId, transactionId });\n    }\n    /** @inheritDoc */\n    getLatestProductionTime(shardId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.shardController.getLatestBlock({ shardId })).productionTime;\n        });\n    }\n    /** @inheritDoc */\n    putTransaction(serializedTransaction) {\n        return this.chainController.putTransaction({ serializedTransaction });\n    }\n}\nexports.ShardAndChainControllerTransactionClient = ShardAndChainControllerTransactionClient;\n//# sourceMappingURL=ShardAndChainControllerTransactionClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi90cmFuc2FjdGlvbmNsaWVudC9TaGFyZEFuZENoYWluQ29udHJvbGxlclRyYW5zYWN0aW9uQ2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELDRCQUE0QjtBQUN4RixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EscURBQXFELHdCQUF3QjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxTQUFTO0FBQ3pFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsdUJBQXVCO0FBQzVFO0FBQ0E7QUFDQSxnREFBZ0Q7QUFDaEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vYmxvY2tjaGFpbi1hcGktdHJhbnNhY3Rpb24tY2xpZW50L3RhcmdldC9tYWluL3RyYW5zYWN0aW9uY2xpZW50L1NoYXJkQW5kQ2hhaW5Db250cm9sbGVyVHJhbnNhY3Rpb25DbGllbnQuanM/NGEzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TaGFyZEFuZENoYWluQ29udHJvbGxlclRyYW5zYWN0aW9uQ2xpZW50ID0gdm9pZCAwO1xuLyoqIFRyYW5zYWN0aW9uIGNsaWVudCB1c2luZyB0aGUgc2hhcmQgYW5kIGNoYWluIGNvbnRyb2xsZXIgQVBJcy4gKi9cbmNsYXNzIFNoYXJkQW5kQ2hhaW5Db250cm9sbGVyVHJhbnNhY3Rpb25DbGllbnQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSB0cmFuc2FjdGlvbiBjbGllbnQuXG4gICAgICogQHBhcmFtIGNoYWluQ29udHJvbGxlciB0aGUgY2xpZW50IHVzZWQgZm9yIGNvbW11bmljYXRpbmcgd2l0aCB0aGUgY2hhaW4gYXBpXG4gICAgICogQHBhcmFtIHNoYXJkQ29udHJvbGxlciB0aGUgY2xpZW50IHVzZWQgZm9yIGNvbW11bmljYXRpbmcgd2l0aCB0aGUgc2hhcmQgYXBpXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoY2hhaW5Db250cm9sbGVyLCBzaGFyZENvbnRyb2xsZXIpIHtcbiAgICAgICAgdGhpcy5jaGFpbkNvbnRyb2xsZXIgPSBjaGFpbkNvbnRyb2xsZXI7XG4gICAgICAgIHRoaXMuc2hhcmRDb250cm9sbGVyID0gc2hhcmRDb250cm9sbGVyO1xuICAgIH1cbiAgICAvKiogQGluaGVyaXREb2MgKi9cbiAgICBnZXRDaGFpbklkKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuICh5aWVsZCB0aGlzLmNoYWluQ29udHJvbGxlci5nZXRDaGFpbigpKS5jaGFpbklkO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBpbmhlcml0RG9jICovXG4gICAgZ2V0Tm9uY2UoYmxvY2tjaGFpbkFkZHJlc3MpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiAoeWllbGQgdGhpcy5jaGFpbkNvbnRyb2xsZXIuZ2V0QWNjb3VudCh7IGFkZHJlc3M6IGJsb2NrY2hhaW5BZGRyZXNzIH0pKS5ub25jZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKiBAaW5oZXJpdERvYyAqL1xuICAgIGdldFRyYW5zYWN0aW9uKHNoYXJkSWQsIHRyYW5zYWN0aW9uSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc2hhcmRDb250cm9sbGVyLmdldFRyYW5zYWN0aW9uKHsgc2hhcmRJZCwgdHJhbnNhY3Rpb25JZCB9KTtcbiAgICB9XG4gICAgLyoqIEBpbmhlcml0RG9jICovXG4gICAgZ2V0TGF0ZXN0UHJvZHVjdGlvblRpbWUoc2hhcmRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuICh5aWVsZCB0aGlzLnNoYXJkQ29udHJvbGxlci5nZXRMYXRlc3RCbG9jayh7IHNoYXJkSWQgfSkpLnByb2R1Y3Rpb25UaW1lO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBpbmhlcml0RG9jICovXG4gICAgcHV0VHJhbnNhY3Rpb24oc2VyaWFsaXplZFRyYW5zYWN0aW9uKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoYWluQ29udHJvbGxlci5wdXRUcmFuc2FjdGlvbih7IHNlcmlhbGl6ZWRUcmFuc2FjdGlvbiB9KTtcbiAgICB9XG59XG5leHBvcnRzLlNoYXJkQW5kQ2hhaW5Db250cm9sbGVyVHJhbnNhY3Rpb25DbGllbnQgPSBTaGFyZEFuZENoYWluQ29udHJvbGxlclRyYW5zYWN0aW9uQ2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2hhcmRBbmRDaGFpbkNvbnRyb2xsZXJUcmFuc2FjdGlvbkNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/ShardAndChainControllerTransactionClient.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SignedTransaction.js":
/*!*******************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SignedTransaction.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SignedTransaction = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(action-browser)/./node_modules/bn.js/lib/bn.js\"));\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nconst CryptoUtils_1 = __webpack_require__(/*! ../CryptoUtils */ \"(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/CryptoUtils.js\");\n/**\n * A transaction that has been signed by a private key. A signed transaction is ready to be sent to\n * the blockchain. A signed transaction has limited durability, since it includes information about\n * the valid-to-time and the next available nonce of the sending user.\n */\nclass SignedTransaction {\n    constructor(inner, signature, hash) {\n        this.inner = inner;\n        this.signature = signature;\n        this.hash = hash;\n    }\n    /**\n     * Create a signed transaction to send to PBC.\n     * @param senderAuthentication the sender authentication to sign the transaction with.\n     * @param nonce the nonce of the signing account.\n     * @param validToTime the unix time that the transaction is valid to.\n     * @param gasCost the amount of gas allocated to executing the transaction.\n     * @param chainId the id of the chain.\n     * @param transaction the transaction to sign.\n     * @returns the signed transaction.\n     */\n    static create(senderAuthentication, nonce, validToTime, gasCost, chainId, transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const inner = { nonce, validToTime, gasCost, innerTransaction: transaction };\n            const transactionPayload = serializeInnerPart(inner);\n            const hash = SignedTransaction.calculateHash(transactionPayload, chainId);\n            const signature = yield senderAuthentication.sign(transactionPayload, chainId);\n            return new SignedTransaction(inner, signature, hash);\n        });\n    }\n    /**\n     * Calculate the SHA256 hash for a transaction payload and a chain id.\n     * @param transactionPayload a serialized transaction payload\n     * @param chainId the id of the chain\n     * @returns the hash that is used when signing a transaction.\n     */\n    static calculateHash(transactionPayload, chainId) {\n        return CryptoUtils_1.CryptoUtils.hashBuffers([\n            transactionPayload,\n            bitmanipulation_ts_1.BigEndianByteOutput.serialize((out) => out.writeString(chainId)),\n        ]).toString(\"hex\");\n    }\n    /**\n     * Serialize the signed transaction into bytes.\n     * @returns the serialized bytes.\n     */\n    serialize() {\n        return Buffer.concat([Buffer.from(this.signature, \"hex\"), serializeInnerPart(this.inner)]);\n    }\n    /**\n     * Get the identifier of this transaction.\n     * @returns the identify hash\n     */\n    identifier() {\n        return CryptoUtils_1.CryptoUtils.hashBuffers([\n            Buffer.from(this.hash, \"hex\"),\n            Buffer.from(this.signature, \"hex\"),\n        ]).toString(\"hex\");\n    }\n    /**\n     * Get the nonce of this transaction.\n     * @returns the nonce\n     */\n    getNonce() {\n        return this.inner.nonce;\n    }\n    /**\n     * Get the valid-to-time of this transaction. If the transaction is not included in a block before\n     * this time it will fail.\n     * @returns the valid to time as a unix timestamp.\n     */\n    getValidToTime() {\n        return this.inner.validToTime;\n    }\n    /**\n     * Get the gas cost of this transaction.\n     * @returns the gas cost\n     */\n    getGasCost() {\n        return this.inner.gasCost;\n    }\n    /**\n     * Get the inner transaction of this transaction.\n     * @returns the inner\n     */\n    getInner() {\n        return this.inner.innerTransaction;\n    }\n}\nexports.SignedTransaction = SignedTransaction;\n/** Serialize the inner part of a signed transaction to bytes. */\nfunction serializeInnerPart(innerPart) {\n    return bitmanipulation_ts_1.BigEndianByteOutput.serialize((out) => {\n        out.writeI64(new bn_js_1.default(innerPart.nonce));\n        out.writeI64(new bn_js_1.default(innerPart.validToTime));\n        out.writeI64(new bn_js_1.default(innerPart.gasCost));\n        out.writeBytes(Buffer.from(innerPart.innerTransaction.address, \"hex\"));\n        out.writeI32(innerPart.innerTransaction.rpc.length);\n        out.writeBytes(innerPart.innerTransaction.rpc);\n    });\n}\n//# sourceMappingURL=SignedTransaction.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/SignedTransaction.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/TransactionTree.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/TransactionTree.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TransactionTree = void 0;\n/** Status for a transaction and the whole tree of spawned events. */\nclass TransactionTree {\n    /**\n     * Create new TransactionTree.\n     * @param transaction the original transaction.\n     * @param events list of spawned events from the transaction.\n     */\n    constructor(transaction, events) {\n        this.transaction = transaction;\n        this.events = events;\n    }\n    /**\n     * Check if the executed transaction tree includes any transactions or events which did not\n     * succeed.\n     * @returns true if the transaction tree includes any failures, false if all succeeded.\n     */\n    hasFailures() {\n        if (!this.transaction.executionStatus.success) {\n            return true;\n        }\n        for (const event of this.events) {\n            if (!event.executionStatus.success) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nexports.TransactionTree = TransactionTree;\n//# sourceMappingURL=TransactionTree.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi90cmFuc2FjdGlvbmNsaWVudC9UcmFuc2FjdGlvblRyZWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL2Jsb2NrY2hhaW4tYXBpLXRyYW5zYWN0aW9uLWNsaWVudC90YXJnZXQvbWFpbi90cmFuc2FjdGlvbmNsaWVudC9UcmFuc2FjdGlvblRyZWUuanM/NjZiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVHJhbnNhY3Rpb25UcmVlID0gdm9pZCAwO1xuLyoqIFN0YXR1cyBmb3IgYSB0cmFuc2FjdGlvbiBhbmQgdGhlIHdob2xlIHRyZWUgb2Ygc3Bhd25lZCBldmVudHMuICovXG5jbGFzcyBUcmFuc2FjdGlvblRyZWUge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBuZXcgVHJhbnNhY3Rpb25UcmVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2FjdGlvbiB0aGUgb3JpZ2luYWwgdHJhbnNhY3Rpb24uXG4gICAgICogQHBhcmFtIGV2ZW50cyBsaXN0IG9mIHNwYXduZWQgZXZlbnRzIGZyb20gdGhlIHRyYW5zYWN0aW9uLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zYWN0aW9uLCBldmVudHMpIHtcbiAgICAgICAgdGhpcy50cmFuc2FjdGlvbiA9IHRyYW5zYWN0aW9uO1xuICAgICAgICB0aGlzLmV2ZW50cyA9IGV2ZW50cztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2hlY2sgaWYgdGhlIGV4ZWN1dGVkIHRyYW5zYWN0aW9uIHRyZWUgaW5jbHVkZXMgYW55IHRyYW5zYWN0aW9ucyBvciBldmVudHMgd2hpY2ggZGlkIG5vdFxuICAgICAqIHN1Y2NlZWQuXG4gICAgICogQHJldHVybnMgdHJ1ZSBpZiB0aGUgdHJhbnNhY3Rpb24gdHJlZSBpbmNsdWRlcyBhbnkgZmFpbHVyZXMsIGZhbHNlIGlmIGFsbCBzdWNjZWVkZWQuXG4gICAgICovXG4gICAgaGFzRmFpbHVyZXMoKSB7XG4gICAgICAgIGlmICghdGhpcy50cmFuc2FjdGlvbi5leGVjdXRpb25TdGF0dXMuc3VjY2Vzcykge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBldmVudCBvZiB0aGlzLmV2ZW50cykge1xuICAgICAgICAgICAgaWYgKCFldmVudC5leGVjdXRpb25TdGF0dXMuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5leHBvcnRzLlRyYW5zYWN0aW9uVHJlZSA9IFRyYW5zYWN0aW9uVHJlZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRyYW5zYWN0aW9uVHJlZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/blockchain-api-transaction-client/target/main/transactionclient/TransactionTree.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BigEndianByteInput.js":
/*!************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BigEndianByteInput.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BigEndianByteInput = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(action-browser)/./node_modules/bn.js/lib/bn.js\"));\n/**\n * Reader of an input stream, can read different types of basic types. Reads in big-endian format.\n */\nclass BigEndianByteInput {\n    /**\n     * Creates a new big-endian stream based on an input buffer.\n     * @param buffer the buffer to wrap.\n     */\n    constructor(buffer) {\n        this.offset = 0;\n        this.buffer = buffer;\n    }\n    /**\n     * @inheritDoc\n     */\n    readBoolean() {\n        const bool = this.buffer.readUInt8(this.offset) !== 0;\n        this.offset++;\n        return bool;\n    }\n    /**\n     * @inheritDoc\n     */\n    readBytes(noBytes) {\n        const buffer = this.buffer.slice(this.offset, this.offset + noBytes);\n        this.offset += noBytes;\n        if (buffer.length !== noBytes) {\n            throw new Error(\"Unable to read bytes\");\n        }\n        return buffer;\n    }\n    /**\n     * @inheritDoc\n     */\n    readI8() {\n        const byte = this.buffer.readInt8(this.offset);\n        this.offset++;\n        return byte;\n    }\n    /**\n     * @inheritDoc\n     */\n    readI16() {\n        const short = this.buffer.readInt16BE(this.offset);\n        this.offset += 2;\n        return short;\n    }\n    /**\n     * @inheritDoc\n     */\n    readI32() {\n        const int = this.buffer.readInt32BE(this.offset);\n        this.offset += 4;\n        return int;\n    }\n    /**\n     * @inheritDoc\n     */\n    readI64() {\n        return this.readSignedBigInteger(8);\n    }\n    /**\n     * @inheritDoc\n     */\n    readSignedBigInteger(noBytes) {\n        const buffer = this.readBytes(noBytes);\n        // Stryker disable next-line StringLiteral: is equivalent to new BN(buffer, \"\"), but \"be\" kept for clarity\n        return new bn_js_1.default(buffer, \"be\").fromTwos(8 * noBytes);\n    }\n    /**\n     * @inheritDoc\n     */\n    readU8() {\n        const byte = this.buffer.readUInt8(this.offset);\n        this.offset++;\n        return byte;\n    }\n    /**\n     * @inheritDoc\n     */\n    readU16() {\n        const short = this.buffer.readUInt16BE(this.offset);\n        this.offset += 2;\n        return short;\n    }\n    /**\n     * @inheritDoc\n     */\n    readU32() {\n        const int = this.buffer.readUInt32BE(this.offset);\n        this.offset += 4;\n        return int;\n    }\n    /**\n     * @inheritDoc\n     */\n    readU64() {\n        return this.readUnsignedBigInteger(8);\n    }\n    /**\n     * @inheritDoc\n     */\n    readUnsignedBigInteger(noBytes) {\n        const buffer = this.readBytes(noBytes);\n        // Stryker disable next-line StringLiteral: is equivalent to new BN(buffer, \"\"), but \"be\" kept for clarity\n        return new bn_js_1.default(buffer, \"be\");\n    }\n    /**\n     * @inheritDoc\n     */\n    readString() {\n        const stringLength = this.readI32();\n        return this.readBytes(stringLength).toString(\"utf8\");\n    }\n    /**\n     * @inheritDoc\n     */\n    readRemaining() {\n        return this.readBytes(this.buffer.length - this.offset);\n    }\n    /**\n     * @inheritDoc\n     */\n    skipBytes(skip) {\n        if (skip < 0) {\n            throw new Error(\"Must skip a non negative number of bytes\");\n        }\n        if (this.buffer.length < this.offset + skip) {\n            throw new Error(\"Cannot skip past buffer size\");\n        }\n        this.offset += skip;\n    }\n}\nexports.BigEndianByteInput = BigEndianByteInput;\n//# sourceMappingURL=BigEndianByteInput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3NlY3Rpb25zL25vZGVfbW9kdWxlcy9Ac2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHMvdGFyZ2V0L21haW4vQmlnRW5kaWFuQnl0ZUlucHV0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCLGdDQUFnQyxtQkFBTyxDQUFDLDhEQUFPO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3NlY3Rpb25zL25vZGVfbW9kdWxlcy9Ac2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHMvdGFyZ2V0L21haW4vQmlnRW5kaWFuQnl0ZUlucHV0LmpzPzQwM2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJpZ0VuZGlhbkJ5dGVJbnB1dCA9IHZvaWQgMDtcbmNvbnN0IGJuX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImJuLmpzXCIpKTtcbi8qKlxuICogUmVhZGVyIG9mIGFuIGlucHV0IHN0cmVhbSwgY2FuIHJlYWQgZGlmZmVyZW50IHR5cGVzIG9mIGJhc2ljIHR5cGVzLiBSZWFkcyBpbiBiaWctZW5kaWFuIGZvcm1hdC5cbiAqL1xuY2xhc3MgQmlnRW5kaWFuQnl0ZUlucHV0IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IGJpZy1lbmRpYW4gc3RyZWFtIGJhc2VkIG9uIGFuIGlucHV0IGJ1ZmZlci5cbiAgICAgKiBAcGFyYW0gYnVmZmVyIHRoZSBidWZmZXIgdG8gd3JhcC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihidWZmZXIpIHtcbiAgICAgICAgdGhpcy5vZmZzZXQgPSAwO1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IGJ1ZmZlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICByZWFkQm9vbGVhbigpIHtcbiAgICAgICAgY29uc3QgYm9vbCA9IHRoaXMuYnVmZmVyLnJlYWRVSW50OCh0aGlzLm9mZnNldCkgIT09IDA7XG4gICAgICAgIHRoaXMub2Zmc2V0Kys7XG4gICAgICAgIHJldHVybiBib29sO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHJlYWRCeXRlcyhub0J5dGVzKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IHRoaXMuYnVmZmVyLnNsaWNlKHRoaXMub2Zmc2V0LCB0aGlzLm9mZnNldCArIG5vQnl0ZXMpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSBub0J5dGVzO1xuICAgICAgICBpZiAoYnVmZmVyLmxlbmd0aCAhPT0gbm9CeXRlcykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIHJlYWQgYnl0ZXNcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ1ZmZlcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICByZWFkSTgoKSB7XG4gICAgICAgIGNvbnN0IGJ5dGUgPSB0aGlzLmJ1ZmZlci5yZWFkSW50OCh0aGlzLm9mZnNldCk7XG4gICAgICAgIHRoaXMub2Zmc2V0Kys7XG4gICAgICAgIHJldHVybiBieXRlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHJlYWRJMTYoKSB7XG4gICAgICAgIGNvbnN0IHNob3J0ID0gdGhpcy5idWZmZXIucmVhZEludDE2QkUodGhpcy5vZmZzZXQpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSAyO1xuICAgICAgICByZXR1cm4gc2hvcnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZEkzMigpIHtcbiAgICAgICAgY29uc3QgaW50ID0gdGhpcy5idWZmZXIucmVhZEludDMyQkUodGhpcy5vZmZzZXQpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSA0O1xuICAgICAgICByZXR1cm4gaW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHJlYWRJNjQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlYWRTaWduZWRCaWdJbnRlZ2VyKDgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHJlYWRTaWduZWRCaWdJbnRlZ2VyKG5vQnl0ZXMpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gdGhpcy5yZWFkQnl0ZXMobm9CeXRlcyk7XG4gICAgICAgIC8vIFN0cnlrZXIgZGlzYWJsZSBuZXh0LWxpbmUgU3RyaW5nTGl0ZXJhbDogaXMgZXF1aXZhbGVudCB0byBuZXcgQk4oYnVmZmVyLCBcIlwiKSwgYnV0IFwiYmVcIiBrZXB0IGZvciBjbGFyaXR5XG4gICAgICAgIHJldHVybiBuZXcgYm5fanNfMS5kZWZhdWx0KGJ1ZmZlciwgXCJiZVwiKS5mcm9tVHdvcyg4ICogbm9CeXRlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZFU4KCkge1xuICAgICAgICBjb25zdCBieXRlID0gdGhpcy5idWZmZXIucmVhZFVJbnQ4KHRoaXMub2Zmc2V0KTtcbiAgICAgICAgdGhpcy5vZmZzZXQrKztcbiAgICAgICAgcmV0dXJuIGJ5dGU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZFUxNigpIHtcbiAgICAgICAgY29uc3Qgc2hvcnQgPSB0aGlzLmJ1ZmZlci5yZWFkVUludDE2QkUodGhpcy5vZmZzZXQpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSAyO1xuICAgICAgICByZXR1cm4gc2hvcnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZFUzMigpIHtcbiAgICAgICAgY29uc3QgaW50ID0gdGhpcy5idWZmZXIucmVhZFVJbnQzMkJFKHRoaXMub2Zmc2V0KTtcbiAgICAgICAgdGhpcy5vZmZzZXQgKz0gNDtcbiAgICAgICAgcmV0dXJuIGludDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICByZWFkVTY0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWFkVW5zaWduZWRCaWdJbnRlZ2VyKDgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHJlYWRVbnNpZ25lZEJpZ0ludGVnZXIobm9CeXRlcykge1xuICAgICAgICBjb25zdCBidWZmZXIgPSB0aGlzLnJlYWRCeXRlcyhub0J5dGVzKTtcbiAgICAgICAgLy8gU3RyeWtlciBkaXNhYmxlIG5leHQtbGluZSBTdHJpbmdMaXRlcmFsOiBpcyBlcXVpdmFsZW50IHRvIG5ldyBCTihidWZmZXIsIFwiXCIpLCBidXQgXCJiZVwiIGtlcHQgZm9yIGNsYXJpdHlcbiAgICAgICAgcmV0dXJuIG5ldyBibl9qc18xLmRlZmF1bHQoYnVmZmVyLCBcImJlXCIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHJlYWRTdHJpbmcoKSB7XG4gICAgICAgIGNvbnN0IHN0cmluZ0xlbmd0aCA9IHRoaXMucmVhZEkzMigpO1xuICAgICAgICByZXR1cm4gdGhpcy5yZWFkQnl0ZXMoc3RyaW5nTGVuZ3RoKS50b1N0cmluZyhcInV0ZjhcIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZFJlbWFpbmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVhZEJ5dGVzKHRoaXMuYnVmZmVyLmxlbmd0aCAtIHRoaXMub2Zmc2V0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICBza2lwQnl0ZXMoc2tpcCkge1xuICAgICAgICBpZiAoc2tpcCA8IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk11c3Qgc2tpcCBhIG5vbiBuZWdhdGl2ZSBudW1iZXIgb2YgYnl0ZXNcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuYnVmZmVyLmxlbmd0aCA8IHRoaXMub2Zmc2V0ICsgc2tpcCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHNraXAgcGFzdCBidWZmZXIgc2l6ZVwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm9mZnNldCArPSBza2lwO1xuICAgIH1cbn1cbmV4cG9ydHMuQmlnRW5kaWFuQnl0ZUlucHV0ID0gQmlnRW5kaWFuQnl0ZUlucHV0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QmlnRW5kaWFuQnl0ZUlucHV0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BigEndianByteInput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BigEndianByteOutput.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BigEndianByteOutput.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BigEndianByteOutput = void 0;\n/**\n * Writer to an output stream, can write different types of basic types. Write in big-endian format.\n */\nclass BigEndianByteOutput {\n    /**\n     * Creates a BigEndianByteOutput, runs the serialization and returns the bytes.\n     * @param serializer the serialization to happen\n     * @returns the serialized bytes\n     */\n    static serialize(serializer) {\n        const out = new BigEndianByteOutput();\n        serializer(out);\n        return out.toBuffer();\n    }\n    /**\n     * Creates a new big-endian stream.\n     */\n    constructor() {\n        this.appendBuffer = (buffer) => {\n            this.buffer = Buffer.concat([this.buffer, buffer]);\n        };\n        this.buffer = Buffer.alloc(0);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeBytes(values) {\n        this.appendBuffer(values);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeBoolean(value) {\n        const buffer = Buffer.alloc(1);\n        buffer.writeUInt8(value ? 1 : 0, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeI8(value) {\n        const buffer = Buffer.alloc(1);\n        buffer.writeInt8(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeI16(value) {\n        const buffer = Buffer.alloc(2);\n        buffer.writeInt16BE(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeI32(value) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeInt32BE(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeI64(value) {\n        this.writeSignedBigInteger(value, 8);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeSignedBigInteger(value, noBytes) {\n        // Stryker disable next-line StringLiteral: \"\" defaults to \"be\", but argument kept for clarity\n        const buffer = value.toTwos(noBytes * 8).toArrayLike(Buffer, \"be\", noBytes);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeU8(value) {\n        const buffer = Buffer.alloc(1);\n        buffer.writeUInt8(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeU16(value) {\n        const buffer = Buffer.alloc(2);\n        buffer.writeUInt16BE(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeU32(value) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeUInt32BE(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeU64(value) {\n        this.writeUnsignedBigInteger(value, 8);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeUnsignedBigInteger(value, noBytes) {\n        if (value.cmpn(0) === -1) {\n            throw new Error(\"Value must be non negative\");\n        }\n        // Stryker disable next-line StringLiteral: \"\" defaults to \"be\", but argument kept for clarity\n        const buffer = value.toArrayLike(Buffer, \"be\", noBytes);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeString(value) {\n        // Stryker disable next-line StringLiteral: is equivalent to Buffer.from(value, \"\"), but \"utf8\" kept for clarity\n        const strBuffer = Buffer.from(value, \"utf8\");\n        this.writeI32(strBuffer.length);\n        this.appendBuffer(strBuffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    toBuffer() {\n        return this.buffer;\n    }\n}\nexports.BigEndianByteOutput = BigEndianByteOutput;\n//# sourceMappingURL=BigEndianByteOutput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3NlY3Rpb25zL25vZGVfbW9kdWxlcy9Ac2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHMvdGFyZ2V0L21haW4vQmlnRW5kaWFuQnl0ZU91dHB1dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3NlY3Rpb25zL25vZGVfbW9kdWxlcy9Ac2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHMvdGFyZ2V0L21haW4vQmlnRW5kaWFuQnl0ZU91dHB1dC5qcz81YjU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CaWdFbmRpYW5CeXRlT3V0cHV0ID0gdm9pZCAwO1xuLyoqXG4gKiBXcml0ZXIgdG8gYW4gb3V0cHV0IHN0cmVhbSwgY2FuIHdyaXRlIGRpZmZlcmVudCB0eXBlcyBvZiBiYXNpYyB0eXBlcy4gV3JpdGUgaW4gYmlnLWVuZGlhbiBmb3JtYXQuXG4gKi9cbmNsYXNzIEJpZ0VuZGlhbkJ5dGVPdXRwdXQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBCaWdFbmRpYW5CeXRlT3V0cHV0LCBydW5zIHRoZSBzZXJpYWxpemF0aW9uIGFuZCByZXR1cm5zIHRoZSBieXRlcy5cbiAgICAgKiBAcGFyYW0gc2VyaWFsaXplciB0aGUgc2VyaWFsaXphdGlvbiB0byBoYXBwZW5cbiAgICAgKiBAcmV0dXJucyB0aGUgc2VyaWFsaXplZCBieXRlc1xuICAgICAqL1xuICAgIHN0YXRpYyBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgICAgICBjb25zdCBvdXQgPSBuZXcgQmlnRW5kaWFuQnl0ZU91dHB1dCgpO1xuICAgICAgICBzZXJpYWxpemVyKG91dCk7XG4gICAgICAgIHJldHVybiBvdXQudG9CdWZmZXIoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBiaWctZW5kaWFuIHN0cmVhbS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIgPSAoYnVmZmVyKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmJ1ZmZlciA9IEJ1ZmZlci5jb25jYXQoW3RoaXMuYnVmZmVyLCBidWZmZXJdKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5idWZmZXIgPSBCdWZmZXIuYWxsb2MoMCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgd3JpdGVCeXRlcyh2YWx1ZXMpIHtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIodmFsdWVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZUJvb2xlYW4odmFsdWUpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jKDEpO1xuICAgICAgICBidWZmZXIud3JpdGVVSW50OCh2YWx1ZSA/IDEgOiAwLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZUk4KHZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvYygxKTtcbiAgICAgICAgYnVmZmVyLndyaXRlSW50OCh2YWx1ZSwgMCk7XG4gICAgICAgIHRoaXMuYXBwZW5kQnVmZmVyKGJ1ZmZlcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgd3JpdGVJMTYodmFsdWUpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jKDIpO1xuICAgICAgICBidWZmZXIud3JpdGVJbnQxNkJFKHZhbHVlLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZUkzMih2YWx1ZSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoNCk7XG4gICAgICAgIGJ1ZmZlci53cml0ZUludDMyQkUodmFsdWUsIDApO1xuICAgICAgICB0aGlzLmFwcGVuZEJ1ZmZlcihidWZmZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHdyaXRlSTY0KHZhbHVlKSB7XG4gICAgICAgIHRoaXMud3JpdGVTaWduZWRCaWdJbnRlZ2VyKHZhbHVlLCA4KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVNpZ25lZEJpZ0ludGVnZXIodmFsdWUsIG5vQnl0ZXMpIHtcbiAgICAgICAgLy8gU3RyeWtlciBkaXNhYmxlIG5leHQtbGluZSBTdHJpbmdMaXRlcmFsOiBcIlwiIGRlZmF1bHRzIHRvIFwiYmVcIiwgYnV0IGFyZ3VtZW50IGtlcHQgZm9yIGNsYXJpdHlcbiAgICAgICAgY29uc3QgYnVmZmVyID0gdmFsdWUudG9Ud29zKG5vQnl0ZXMgKiA4KS50b0FycmF5TGlrZShCdWZmZXIsIFwiYmVcIiwgbm9CeXRlcyk7XG4gICAgICAgIHRoaXMuYXBwZW5kQnVmZmVyKGJ1ZmZlcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgd3JpdGVVOCh2YWx1ZSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoMSk7XG4gICAgICAgIGJ1ZmZlci53cml0ZVVJbnQ4KHZhbHVlLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVUxNih2YWx1ZSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoMik7XG4gICAgICAgIGJ1ZmZlci53cml0ZVVJbnQxNkJFKHZhbHVlLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVUzMih2YWx1ZSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoNCk7XG4gICAgICAgIGJ1ZmZlci53cml0ZVVJbnQzMkJFKHZhbHVlLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVU2NCh2YWx1ZSkge1xuICAgICAgICB0aGlzLndyaXRlVW5zaWduZWRCaWdJbnRlZ2VyKHZhbHVlLCA4KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVVuc2lnbmVkQmlnSW50ZWdlcih2YWx1ZSwgbm9CeXRlcykge1xuICAgICAgICBpZiAodmFsdWUuY21wbigwKSA9PT0gLTEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlZhbHVlIG11c3QgYmUgbm9uIG5lZ2F0aXZlXCIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFN0cnlrZXIgZGlzYWJsZSBuZXh0LWxpbmUgU3RyaW5nTGl0ZXJhbDogXCJcIiBkZWZhdWx0cyB0byBcImJlXCIsIGJ1dCBhcmd1bWVudCBrZXB0IGZvciBjbGFyaXR5XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IHZhbHVlLnRvQXJyYXlMaWtlKEJ1ZmZlciwgXCJiZVwiLCBub0J5dGVzKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVN0cmluZyh2YWx1ZSkge1xuICAgICAgICAvLyBTdHJ5a2VyIGRpc2FibGUgbmV4dC1saW5lIFN0cmluZ0xpdGVyYWw6IGlzIGVxdWl2YWxlbnQgdG8gQnVmZmVyLmZyb20odmFsdWUsIFwiXCIpLCBidXQgXCJ1dGY4XCIga2VwdCBmb3IgY2xhcml0eVxuICAgICAgICBjb25zdCBzdHJCdWZmZXIgPSBCdWZmZXIuZnJvbSh2YWx1ZSwgXCJ1dGY4XCIpO1xuICAgICAgICB0aGlzLndyaXRlSTMyKHN0ckJ1ZmZlci5sZW5ndGgpO1xuICAgICAgICB0aGlzLmFwcGVuZEJ1ZmZlcihzdHJCdWZmZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHRvQnVmZmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5idWZmZXI7XG4gICAgfVxufVxuZXhwb3J0cy5CaWdFbmRpYW5CeXRlT3V0cHV0ID0gQmlnRW5kaWFuQnl0ZU91dHB1dDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJpZ0VuZGlhbkJ5dGVPdXRwdXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BigEndianByteOutput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BitInput.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BitInput.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BitInput = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(action-browser)/./node_modules/bn.js/lib/bn.js\"));\n/**\n * Reader of an input stream. Able to read numbers with variable bit length. E.g. two numbers\n * followed by five booleans and then a BN is read from the stream perceived as a consecutive bit\n * array, the first 8 bytes is allocated to the two numbers, the next byte has five bits allocated\n * to booleans, the next 3 bits, plus the next 8 bytes is the BN.\n */\nclass BitInput {\n    /**\n     * Create a new BitInput that reads the buffer given.\n     * @param buffer the buffer to be read\n     */\n    constructor(buffer) {\n        this.offset = 0;\n        this.bitIndex = 0;\n        this.buffer = buffer;\n    }\n    /**\n     * Return a byte buffer of the specified length read from the next bytes.\n     * @param byteLength the number of bytes to read\n     * @returns the read buffer\n     */\n    readBytes(byteLength) {\n        // Stryker disable next-line ConditionalExpression\n        if (this.bitIndex === 0) {\n            return this.readBytesBytewise(byteLength);\n        }\n        else {\n            return this.readBytesBitwise(byteLength);\n        }\n    }\n    /**\n     * Reads the next 8 * byteLength bits one bit at a time and returns them as a byte array with\n     * length byteLength.\n     * @param byteLength the number of bytes to read\n     * @returns the read bytes\n     */\n    readBytesBitwise(byteLength) {\n        const buffer = Buffer.alloc(byteLength);\n        for (let i = 0; i < byteLength; i++) {\n            buffer[i] = this.readUnsignedNumber(8);\n        }\n        return buffer;\n    }\n    /**\n     * Reads the next byteLength bytes from the stream and returns them as a byte array. Assumes that\n     * bitIndex is 0 such that the read bytes matches the next bytes of the BitInput stream.\n     * @param byteLength the number of bytes to read\n     * @returns the read bytes\n     */\n    readBytesBytewise(byteLength) {\n        if (this.offset + byteLength > this.buffer.length) {\n            throw new Error(\"Reached end of buffer\");\n        }\n        const buffer = this.buffer.slice(this.offset, this.offset + byteLength);\n        this.offset += byteLength;\n        return buffer;\n    }\n    /**\n     * Read an unsigned BN of the specified number of bits.\n     * @param bitLength the number of bits to read\n     * @returns the BN created from the read bits\n     */\n    readUnsignedBN(bitLength) {\n        let sum = BitInput.ZERO;\n        for (let i = 0; i < bitLength; i++) {\n            if (this.readBoolean()) {\n                sum = sum.add(BitInput.ONE.shln(i));\n            }\n        }\n        return sum;\n    }\n    /**\n     * Read an unsigned number of the specified number of bits.\n     * @param bitLength the number of bits to read\n     * @returns the number created from the read bits\n     */\n    readUnsignedNumber(bitLength) {\n        if (bitLength > 53) {\n            throw new Error(\">53 bit numbers must be read using BitInput#readUnsignedBN\");\n        }\n        return this.readUnsignedBN(bitLength).toNumber();\n    }\n    /**\n     * Read a signed BN of the specified number of bits.\n     * @param bitLength the number of bits to read\n     * @returns the BN created from the read bits\n     */\n    readSignedBN(bitLength) {\n        const unsigned = this.readUnsignedBN(bitLength);\n        if (unsigned.shrn(bitLength - 1).eqn(1)) {\n            const max = BitInput.ONE.shln(bitLength);\n            return unsigned.sub(max);\n        }\n        return unsigned;\n    }\n    /**\n     * Read a signed number of the specified number of bits.\n     * @param bitLength the number of bits to read\n     * @returns the number created from the read bits\n     */\n    readSignedNumber(bitLength) {\n        if (bitLength > 53) {\n            throw new Error(\">53 bit numbers must be read using BitInput#readSignedBN\");\n        }\n        return this.readSignedBN(bitLength).toNumber();\n    }\n    /**\n     * Read the next boolean.\n     * @returns the read boolean\n     */\n    readBoolean() {\n        if (this.offset >= this.buffer.length) {\n            throw new Error(\"Reached end of buffer\");\n        }\n        const value = this.buffer[this.offset];\n        const isBitSet = (value & (1 << this.bitIndex)) > 0;\n        this.bitIndex++;\n        if (this.bitIndex === 8) {\n            this.bitIndex = 0;\n            this.offset++;\n        }\n        return isBitSet;\n    }\n}\nexports.BitInput = BitInput;\nBitInput.ZERO = new bn_js_1.default(0);\nBitInput.ONE = new bn_js_1.default(1);\n//# sourceMappingURL=BitInput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BitInput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BitOutput.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BitOutput.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BitOutput = void 0;\nconst index_1 = __webpack_require__(/*! ./index */ \"(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\n/**\n * Writer to an output stream. Able to write numbers with variable bit length. E.g. two numbers\n * followed by five booleans and then a BN is packed efficiently into the stream.\n */\nclass BitOutput {\n    constructor() {\n        this.index = 0;\n        this.bitSet = [];\n    }\n    /**\n     * Creates a BitOutput, runs the serialization and returns the bits as a compact bit array.\n     * @param serializer the serialization to happen\n     * @returns the serialized bits\n     */\n    static serializeBits(serializer) {\n        const out = new BitOutput();\n        serializer(out);\n        const length = out.writtenBits();\n        const data = out.toBuffer();\n        return { data, length };\n    }\n    /**\n     * Write a number of bytes from a byte buffer.\n     * @param buffer buffer containing the bytes to be written\n     * @param offset starting offset of byte buffer\n     * @param length number of bytes to write from offset\n     * @returns the BitOutput with the written bytes\n     */\n    writeBytes(buffer, offset = 0, length = buffer.length) {\n        // Stryker disable next-line ConditionalExpression\n        if (this.index === 0) {\n            for (let i = 0; i < length; i++) {\n                this.bitSet.push(buffer[i + offset]);\n            }\n        }\n        else {\n            for (let i = 0; i < length; i++) {\n                this.writeNumberBits(buffer[i + offset], 8);\n            }\n        }\n        return this;\n    }\n    /**\n     * Write the specified number of bits of an unsigned BN to this builder.\n     * @param value the unsigned BN to write\n     * @param bitLength the number of bits of the BN to write\n     * @returns the BitOutput with the written BN\n     */\n    writeUnsignedBN(value, bitLength) {\n        BitOutput.isValueValid(value, bitLength);\n        const fullBytes = bitLength >> 3;\n        const asBuffer = value.toArrayLike(Buffer, \"le\", fullBytes + 1);\n        this.writeBytes(asBuffer, 0, fullBytes);\n        const remainingBits = bitLength - fullBytes * 8;\n        this.writeNumberBits(asBuffer[fullBytes], remainingBits);\n        return this;\n    }\n    /**\n     * Write the specified number of bits of an unsigned number to this builder.\n     * @param value the unsigned number to write\n     * @param bitLength the number of bits of the number to write\n     * @returns the BitOutput with the written number\n     */\n    writeUnsignedNumber(value, bitLength) {\n        if (bitLength > 53) {\n            throw new Error(\">53 bit numbers must be written using BitOutput#writeUnsignedBN\");\n        }\n        return this.writeUnsignedBN(new index_1.BN(value), bitLength);\n    }\n    /**\n     * Writes a number one bit at a time.\n     * @param value the number to be written\n     * @param bitLength the number of bits to write\n     */\n    writeNumberBits(value, bitLength) {\n        for (let i = 0; i < bitLength; i++) {\n            const isBitSet = (value & (1 << i)) !== 0;\n            this.writeBoolean(isBitSet);\n        }\n        return this;\n    }\n    /**\n     * Write the specified number of bits of a signed BN to this builder.\n     * @param value the signed BN to write\n     * @param bitLength the number of bits of the BN to write\n     * @returns the BitOutput with the written BN\n     */\n    writeSignedBN(value, bitLength) {\n        BitOutput.isSignedValueValid(value, bitLength);\n        if (value.cmpn(0) === -1) {\n            const max = BitOutput.ONE.shln(bitLength);\n            return this.writeUnsignedBN(value.add(max), bitLength);\n        }\n        return this.writeUnsignedBN(value, bitLength);\n    }\n    /**\n     * Write the specified number of bits of a signed number to this builder.\n     * @param value the signed number to write\n     * @param bitLength the number of bits of the number to write\n     * @returns the BitOutput with the written number\n     */\n    writeSignedNumber(value, bitLength) {\n        if (bitLength > 53) {\n            throw new Error(\">53 bit numbers must be written using BitOutput#writeSignedBN\");\n        }\n        return this.writeSignedBN(new index_1.BN(value), bitLength);\n    }\n    /**\n     * Write the specified boolean to this builder.\n     * @param bool the boolean to write\n     * @returns the BitOutput with the written boolean\n     */\n    writeBoolean(bool) {\n        if (this.index === 0) {\n            this.bitSet.push(0);\n        }\n        if (bool) {\n            const bit = this.index;\n            this.bitSet[this.bitSet.length - 1] = this.bitSet[this.bitSet.length - 1] | (1 << bit);\n        }\n        this.index++;\n        if (this.index === 8) {\n            this.index = 0;\n        }\n        return this;\n    }\n    /**\n     * Gives the number of bits written so far.\n     * @returns the number of bits written\n     */\n    writtenBits() {\n        if (this.index === 0) {\n            return this.bitSet.length * 8;\n        }\n        else {\n            return this.bitSet.length * 8 - (8 - this.index);\n        }\n    }\n    /**\n     * Create a Buffer from the written values.\n     * @returns the created Buffer\n     */\n    toBuffer() {\n        return Buffer.from(this.bitSet);\n    }\n    static isValueValid(value, bitLength) {\n        const max = BitOutput.ONE.shln(bitLength).sub(BitOutput.ONE);\n        if (value.ltn(0) || value.gt(max)) {\n            throw new Error(value + \" cannot be represented as an unsigned \" + bitLength + \" bit number\");\n        }\n        return max;\n    }\n    static isSignedValueValid(value, bitLength) {\n        const max = BitOutput.ONE.shln(bitLength - 1).sub(BitOutput.ONE);\n        const min = BitOutput.ZERO.sub(BitOutput.ONE.shln(bitLength - 1));\n        if (value.gt(max) || value.lt(min)) {\n            throw new Error(value + \" cannot be represented as a signed \" + bitLength + \" bit number\");\n        }\n        return max;\n    }\n}\nexports.BitOutput = BitOutput;\nBitOutput.ONE = new index_1.BN(1);\nBitOutput.ZERO = new index_1.BN(0);\n//# sourceMappingURL=BitOutput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BitOutput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/LittleEndianByteInput.js":
/*!***************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/LittleEndianByteInput.js ***!
  \***************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LittleEndianByteInput = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(action-browser)/./node_modules/bn.js/lib/bn.js\"));\n/**\n * Reader of an input stream, can read different types of basic types. Reads in little-endian\n * format.\n */\nclass LittleEndianByteInput {\n    /**\n     * Creates a new little-endian stream based on an input buffer.\n     * @param buffer the buffer to wrap.\n     */\n    constructor(buffer) {\n        this.offset = 0;\n        this.buffer = buffer;\n    }\n    /**\n     * @inheritDoc\n     */\n    readBoolean() {\n        const bool = this.buffer.readUInt8(this.offset) !== 0;\n        this.offset++;\n        return bool;\n    }\n    /**\n     * @inheritDoc\n     */\n    readBytes(noBytes) {\n        const buffer = this.buffer.slice(this.offset, this.offset + noBytes);\n        this.offset += noBytes;\n        if (buffer.length !== noBytes) {\n            throw new Error(\"Unable to read bytes\");\n        }\n        return buffer;\n    }\n    /**\n     * @inheritDoc\n     */\n    readI8() {\n        const byte = this.buffer.readInt8(this.offset);\n        this.offset++;\n        return byte;\n    }\n    /**\n     * @inheritDoc\n     */\n    readI16() {\n        const short = this.buffer.readInt16LE(this.offset);\n        this.offset += 2;\n        return short;\n    }\n    /**\n     * @inheritDoc\n     */\n    readI32() {\n        const int = this.buffer.readInt32LE(this.offset);\n        this.offset += 4;\n        return int;\n    }\n    /**\n     * @inheritDoc\n     */\n    readI64() {\n        return this.readSignedBigInteger(8);\n    }\n    /**\n     * @inheritDoc\n     */\n    readSignedBigInteger(noBytes) {\n        const buffer = this.readBytes(noBytes);\n        return new bn_js_1.default(buffer, \"le\").fromTwos(8 * noBytes);\n    }\n    /**\n     * @inheritDoc\n     */\n    readU8() {\n        const byte = this.buffer.readUInt8(this.offset);\n        this.offset++;\n        return byte;\n    }\n    /**\n     * @inheritDoc\n     */\n    readU16() {\n        const short = this.buffer.readUInt16LE(this.offset);\n        this.offset += 2;\n        return short;\n    }\n    /**\n     * @inheritDoc\n     */\n    readU32() {\n        const int = this.buffer.readUInt32LE(this.offset);\n        this.offset += 4;\n        return int;\n    }\n    /**\n     * @inheritDoc\n     */\n    readU64() {\n        return this.readUnsignedBigInteger(8);\n    }\n    /**\n     * @inheritDoc\n     */\n    readUnsignedBigInteger(noBytes) {\n        const buffer = this.readBytes(noBytes);\n        return new bn_js_1.default(buffer, \"le\");\n    }\n    /**\n     * @inheritDoc\n     */\n    readString() {\n        const stringLength = this.readI32();\n        return this.readBytes(stringLength).toString(\"utf8\");\n    }\n    /**\n     * @inheritDoc\n     */\n    readRemaining() {\n        return this.readBytes(this.buffer.length - this.offset);\n    }\n    /**\n     * @inheritDoc\n     */\n    skipBytes(skip) {\n        if (skip < 0) {\n            throw new Error(\"Must skip a non negative number of bytes\");\n        }\n        if (this.buffer.length < this.offset + skip) {\n            throw new Error(\"Cannot skip past buffer size\");\n        }\n        this.offset += skip;\n    }\n}\nexports.LittleEndianByteInput = LittleEndianByteInput;\n//# sourceMappingURL=LittleEndianByteInput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3NlY3Rpb25zL25vZGVfbW9kdWxlcy9Ac2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHMvdGFyZ2V0L21haW4vTGl0dGxlRW5kaWFuQnl0ZUlucHV0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCLGdDQUFnQyxtQkFBTyxDQUFDLDhEQUFPO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9zZWN0aW9ucy9ub2RlX21vZHVsZXMvQHNlY2F0YS1wdWJsaWMvYml0bWFuaXB1bGF0aW9uLXRzL3RhcmdldC9tYWluL0xpdHRsZUVuZGlhbkJ5dGVJbnB1dC5qcz8wZmZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5MaXR0bGVFbmRpYW5CeXRlSW5wdXQgPSB2b2lkIDA7XG5jb25zdCBibl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJibi5qc1wiKSk7XG4vKipcbiAqIFJlYWRlciBvZiBhbiBpbnB1dCBzdHJlYW0sIGNhbiByZWFkIGRpZmZlcmVudCB0eXBlcyBvZiBiYXNpYyB0eXBlcy4gUmVhZHMgaW4gbGl0dGxlLWVuZGlhblxuICogZm9ybWF0LlxuICovXG5jbGFzcyBMaXR0bGVFbmRpYW5CeXRlSW5wdXQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgbGl0dGxlLWVuZGlhbiBzdHJlYW0gYmFzZWQgb24gYW4gaW5wdXQgYnVmZmVyLlxuICAgICAqIEBwYXJhbSBidWZmZXIgdGhlIGJ1ZmZlciB0byB3cmFwLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGJ1ZmZlcikge1xuICAgICAgICB0aGlzLm9mZnNldCA9IDA7XG4gICAgICAgIHRoaXMuYnVmZmVyID0gYnVmZmVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHJlYWRCb29sZWFuKCkge1xuICAgICAgICBjb25zdCBib29sID0gdGhpcy5idWZmZXIucmVhZFVJbnQ4KHRoaXMub2Zmc2V0KSAhPT0gMDtcbiAgICAgICAgdGhpcy5vZmZzZXQrKztcbiAgICAgICAgcmV0dXJuIGJvb2w7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZEJ5dGVzKG5vQnl0ZXMpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gdGhpcy5idWZmZXIuc2xpY2UodGhpcy5vZmZzZXQsIHRoaXMub2Zmc2V0ICsgbm9CeXRlcyk7XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IG5vQnl0ZXM7XG4gICAgICAgIGlmIChidWZmZXIubGVuZ3RoICE9PSBub0J5dGVzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbmFibGUgdG8gcmVhZCBieXRlc1wiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYnVmZmVyO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHJlYWRJOCgpIHtcbiAgICAgICAgY29uc3QgYnl0ZSA9IHRoaXMuYnVmZmVyLnJlYWRJbnQ4KHRoaXMub2Zmc2V0KTtcbiAgICAgICAgdGhpcy5vZmZzZXQrKztcbiAgICAgICAgcmV0dXJuIGJ5dGU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZEkxNigpIHtcbiAgICAgICAgY29uc3Qgc2hvcnQgPSB0aGlzLmJ1ZmZlci5yZWFkSW50MTZMRSh0aGlzLm9mZnNldCk7XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IDI7XG4gICAgICAgIHJldHVybiBzaG9ydDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICByZWFkSTMyKCkge1xuICAgICAgICBjb25zdCBpbnQgPSB0aGlzLmJ1ZmZlci5yZWFkSW50MzJMRSh0aGlzLm9mZnNldCk7XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IDQ7XG4gICAgICAgIHJldHVybiBpbnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZEk2NCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVhZFNpZ25lZEJpZ0ludGVnZXIoOCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZFNpZ25lZEJpZ0ludGVnZXIobm9CeXRlcykge1xuICAgICAgICBjb25zdCBidWZmZXIgPSB0aGlzLnJlYWRCeXRlcyhub0J5dGVzKTtcbiAgICAgICAgcmV0dXJuIG5ldyBibl9qc18xLmRlZmF1bHQoYnVmZmVyLCBcImxlXCIpLmZyb21Ud29zKDggKiBub0J5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICByZWFkVTgoKSB7XG4gICAgICAgIGNvbnN0IGJ5dGUgPSB0aGlzLmJ1ZmZlci5yZWFkVUludDgodGhpcy5vZmZzZXQpO1xuICAgICAgICB0aGlzLm9mZnNldCsrO1xuICAgICAgICByZXR1cm4gYnl0ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICByZWFkVTE2KCkge1xuICAgICAgICBjb25zdCBzaG9ydCA9IHRoaXMuYnVmZmVyLnJlYWRVSW50MTZMRSh0aGlzLm9mZnNldCk7XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IDI7XG4gICAgICAgIHJldHVybiBzaG9ydDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICByZWFkVTMyKCkge1xuICAgICAgICBjb25zdCBpbnQgPSB0aGlzLmJ1ZmZlci5yZWFkVUludDMyTEUodGhpcy5vZmZzZXQpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSA0O1xuICAgICAgICByZXR1cm4gaW50O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHJlYWRVNjQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlYWRVbnNpZ25lZEJpZ0ludGVnZXIoOCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZFVuc2lnbmVkQmlnSW50ZWdlcihub0J5dGVzKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IHRoaXMucmVhZEJ5dGVzKG5vQnl0ZXMpO1xuICAgICAgICByZXR1cm4gbmV3IGJuX2pzXzEuZGVmYXVsdChidWZmZXIsIFwibGVcIik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgcmVhZFN0cmluZygpIHtcbiAgICAgICAgY29uc3Qgc3RyaW5nTGVuZ3RoID0gdGhpcy5yZWFkSTMyKCk7XG4gICAgICAgIHJldHVybiB0aGlzLnJlYWRCeXRlcyhzdHJpbmdMZW5ndGgpLnRvU3RyaW5nKFwidXRmOFwiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICByZWFkUmVtYWluaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZWFkQnl0ZXModGhpcy5idWZmZXIubGVuZ3RoIC0gdGhpcy5vZmZzZXQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHNraXBCeXRlcyhza2lwKSB7XG4gICAgICAgIGlmIChza2lwIDwgMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTXVzdCBza2lwIGEgbm9uIG5lZ2F0aXZlIG51bWJlciBvZiBieXRlc1wiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5idWZmZXIubGVuZ3RoIDwgdGhpcy5vZmZzZXQgKyBza2lwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgc2tpcCBwYXN0IGJ1ZmZlciBzaXplXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IHNraXA7XG4gICAgfVxufVxuZXhwb3J0cy5MaXR0bGVFbmRpYW5CeXRlSW5wdXQgPSBMaXR0bGVFbmRpYW5CeXRlSW5wdXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1MaXR0bGVFbmRpYW5CeXRlSW5wdXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/LittleEndianByteInput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/LittleEndianByteOutput.js":
/*!****************************************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/LittleEndianByteOutput.js ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LittleEndianByteOutput = void 0;\n/**\n * Writer to an output stream, can write different types of basic types. Writes in little-endian\n * format.\n */\nclass LittleEndianByteOutput {\n    /**\n     * Creates a LittleEndianByteOutput, runs the serialization and returns the bytes.\n     * @param serializer the serialization to happen\n     * @returns the serialized bytes\n     */\n    static serialize(serializer) {\n        const out = new LittleEndianByteOutput();\n        serializer(out);\n        return out.toBuffer();\n    }\n    /**\n     * Creates a new little-endian stream.\n     */\n    constructor() {\n        this.appendBuffer = (buffer) => {\n            this.buffer = Buffer.concat([this.buffer, buffer]);\n        };\n        this.buffer = Buffer.alloc(0);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeBytes(values) {\n        this.appendBuffer(values);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeBoolean(value) {\n        const buffer = Buffer.alloc(1);\n        buffer.writeUInt8(value ? 1 : 0, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeI8(value) {\n        const buffer = Buffer.alloc(1);\n        buffer.writeInt8(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeI16(value) {\n        const buffer = Buffer.alloc(2);\n        buffer.writeInt16LE(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeI32(value) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeInt32LE(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeI64(value) {\n        this.writeSignedBigInteger(value, 8);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeSignedBigInteger(value, noBytes) {\n        const buffer = value.toTwos(noBytes * 8).toArrayLike(Buffer, \"le\", noBytes);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeU8(value) {\n        const buffer = Buffer.alloc(1);\n        buffer.writeUInt8(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeU16(value) {\n        const buffer = Buffer.alloc(2);\n        buffer.writeUInt16LE(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeU32(value) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeUInt32LE(value, 0);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeU64(value) {\n        this.writeUnsignedBigInteger(value, 8);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeUnsignedBigInteger(value, noBytes) {\n        if (value.cmpn(0) === -1) {\n            throw new Error(\"Value must be non negative\");\n        }\n        const buffer = value.toArrayLike(Buffer, \"le\", noBytes);\n        this.appendBuffer(buffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    writeString(value) {\n        // Stryker disable next-line StringLiteral: is equivalent to Buffer.from(value, \"\"), but \"utf8\" kept for clarity\n        const strBuffer = Buffer.from(value, \"utf8\");\n        this.writeI32(strBuffer.length);\n        this.appendBuffer(strBuffer);\n    }\n    /**\n     * @inheritDoc\n     */\n    toBuffer() {\n        return this.buffer;\n    }\n}\nexports.LittleEndianByteOutput = LittleEndianByteOutput;\n//# sourceMappingURL=LittleEndianByteOutput.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3NlY3Rpb25zL25vZGVfbW9kdWxlcy9Ac2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHMvdGFyZ2V0L21haW4vTGl0dGxlRW5kaWFuQnl0ZU91dHB1dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9zZWN0aW9ucy9ub2RlX21vZHVsZXMvQHNlY2F0YS1wdWJsaWMvYml0bWFuaXB1bGF0aW9uLXRzL3RhcmdldC9tYWluL0xpdHRsZUVuZGlhbkJ5dGVPdXRwdXQuanM/MmNjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTGl0dGxlRW5kaWFuQnl0ZU91dHB1dCA9IHZvaWQgMDtcbi8qKlxuICogV3JpdGVyIHRvIGFuIG91dHB1dCBzdHJlYW0sIGNhbiB3cml0ZSBkaWZmZXJlbnQgdHlwZXMgb2YgYmFzaWMgdHlwZXMuIFdyaXRlcyBpbiBsaXR0bGUtZW5kaWFuXG4gKiBmb3JtYXQuXG4gKi9cbmNsYXNzIExpdHRsZUVuZGlhbkJ5dGVPdXRwdXQge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBMaXR0bGVFbmRpYW5CeXRlT3V0cHV0LCBydW5zIHRoZSBzZXJpYWxpemF0aW9uIGFuZCByZXR1cm5zIHRoZSBieXRlcy5cbiAgICAgKiBAcGFyYW0gc2VyaWFsaXplciB0aGUgc2VyaWFsaXphdGlvbiB0byBoYXBwZW5cbiAgICAgKiBAcmV0dXJucyB0aGUgc2VyaWFsaXplZCBieXRlc1xuICAgICAqL1xuICAgIHN0YXRpYyBzZXJpYWxpemUoc2VyaWFsaXplcikge1xuICAgICAgICBjb25zdCBvdXQgPSBuZXcgTGl0dGxlRW5kaWFuQnl0ZU91dHB1dCgpO1xuICAgICAgICBzZXJpYWxpemVyKG91dCk7XG4gICAgICAgIHJldHVybiBvdXQudG9CdWZmZXIoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBsaXR0bGUtZW5kaWFuIHN0cmVhbS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIgPSAoYnVmZmVyKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmJ1ZmZlciA9IEJ1ZmZlci5jb25jYXQoW3RoaXMuYnVmZmVyLCBidWZmZXJdKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5idWZmZXIgPSBCdWZmZXIuYWxsb2MoMCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgd3JpdGVCeXRlcyh2YWx1ZXMpIHtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIodmFsdWVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZUJvb2xlYW4odmFsdWUpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jKDEpO1xuICAgICAgICBidWZmZXIud3JpdGVVSW50OCh2YWx1ZSA/IDEgOiAwLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZUk4KHZhbHVlKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvYygxKTtcbiAgICAgICAgYnVmZmVyLndyaXRlSW50OCh2YWx1ZSwgMCk7XG4gICAgICAgIHRoaXMuYXBwZW5kQnVmZmVyKGJ1ZmZlcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgd3JpdGVJMTYodmFsdWUpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jKDIpO1xuICAgICAgICBidWZmZXIud3JpdGVJbnQxNkxFKHZhbHVlLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZUkzMih2YWx1ZSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoNCk7XG4gICAgICAgIGJ1ZmZlci53cml0ZUludDMyTEUodmFsdWUsIDApO1xuICAgICAgICB0aGlzLmFwcGVuZEJ1ZmZlcihidWZmZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHdyaXRlSTY0KHZhbHVlKSB7XG4gICAgICAgIHRoaXMud3JpdGVTaWduZWRCaWdJbnRlZ2VyKHZhbHVlLCA4KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVNpZ25lZEJpZ0ludGVnZXIodmFsdWUsIG5vQnl0ZXMpIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gdmFsdWUudG9Ud29zKG5vQnl0ZXMgKiA4KS50b0FycmF5TGlrZShCdWZmZXIsIFwibGVcIiwgbm9CeXRlcyk7XG4gICAgICAgIHRoaXMuYXBwZW5kQnVmZmVyKGJ1ZmZlcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBpbmhlcml0RG9jXG4gICAgICovXG4gICAgd3JpdGVVOCh2YWx1ZSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoMSk7XG4gICAgICAgIGJ1ZmZlci53cml0ZVVJbnQ4KHZhbHVlLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVUxNih2YWx1ZSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoMik7XG4gICAgICAgIGJ1ZmZlci53cml0ZVVJbnQxNkxFKHZhbHVlLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVUzMih2YWx1ZSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MoNCk7XG4gICAgICAgIGJ1ZmZlci53cml0ZVVJbnQzMkxFKHZhbHVlLCAwKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVU2NCh2YWx1ZSkge1xuICAgICAgICB0aGlzLndyaXRlVW5zaWduZWRCaWdJbnRlZ2VyKHZhbHVlLCA4KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVVuc2lnbmVkQmlnSW50ZWdlcih2YWx1ZSwgbm9CeXRlcykge1xuICAgICAgICBpZiAodmFsdWUuY21wbigwKSA9PT0gLTEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlZhbHVlIG11c3QgYmUgbm9uIG5lZ2F0aXZlXCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IHZhbHVlLnRvQXJyYXlMaWtlKEJ1ZmZlciwgXCJsZVwiLCBub0J5dGVzKTtcbiAgICAgICAgdGhpcy5hcHBlbmRCdWZmZXIoYnVmZmVyKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGluaGVyaXREb2NcbiAgICAgKi9cbiAgICB3cml0ZVN0cmluZyh2YWx1ZSkge1xuICAgICAgICAvLyBTdHJ5a2VyIGRpc2FibGUgbmV4dC1saW5lIFN0cmluZ0xpdGVyYWw6IGlzIGVxdWl2YWxlbnQgdG8gQnVmZmVyLmZyb20odmFsdWUsIFwiXCIpLCBidXQgXCJ1dGY4XCIga2VwdCBmb3IgY2xhcml0eVxuICAgICAgICBjb25zdCBzdHJCdWZmZXIgPSBCdWZmZXIuZnJvbSh2YWx1ZSwgXCJ1dGY4XCIpO1xuICAgICAgICB0aGlzLndyaXRlSTMyKHN0ckJ1ZmZlci5sZW5ndGgpO1xuICAgICAgICB0aGlzLmFwcGVuZEJ1ZmZlcihzdHJCdWZmZXIpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAaW5oZXJpdERvY1xuICAgICAqL1xuICAgIHRvQnVmZmVyKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5idWZmZXI7XG4gICAgfVxufVxuZXhwb3J0cy5MaXR0bGVFbmRpYW5CeXRlT3V0cHV0ID0gTGl0dGxlRW5kaWFuQnl0ZU91dHB1dDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUxpdHRsZUVuZGlhbkJ5dGVPdXRwdXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/LittleEndianByteOutput.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/index.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/index.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BitInput = exports.BitOutput = exports.LittleEndianByteInput = exports.BigEndianByteInput = exports.LittleEndianByteOutput = exports.BigEndianByteOutput = exports.BN = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(action-browser)/./node_modules/bn.js/lib/bn.js\"));\nexports.BN = bn_js_1.default;\nvar BigEndianByteOutput_1 = __webpack_require__(/*! ./BigEndianByteOutput */ \"(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BigEndianByteOutput.js\");\nObject.defineProperty(exports, \"BigEndianByteOutput\", ({ enumerable: true, get: function () { return BigEndianByteOutput_1.BigEndianByteOutput; } }));\nvar LittleEndianByteOutput_1 = __webpack_require__(/*! ./LittleEndianByteOutput */ \"(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/LittleEndianByteOutput.js\");\nObject.defineProperty(exports, \"LittleEndianByteOutput\", ({ enumerable: true, get: function () { return LittleEndianByteOutput_1.LittleEndianByteOutput; } }));\nvar BigEndianByteInput_1 = __webpack_require__(/*! ./BigEndianByteInput */ \"(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BigEndianByteInput.js\");\nObject.defineProperty(exports, \"BigEndianByteInput\", ({ enumerable: true, get: function () { return BigEndianByteInput_1.BigEndianByteInput; } }));\nvar LittleEndianByteInput_1 = __webpack_require__(/*! ./LittleEndianByteInput */ \"(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/LittleEndianByteInput.js\");\nObject.defineProperty(exports, \"LittleEndianByteInput\", ({ enumerable: true, get: function () { return LittleEndianByteInput_1.LittleEndianByteInput; } }));\nvar BitOutput_1 = __webpack_require__(/*! ./BitOutput */ \"(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BitOutput.js\");\nObject.defineProperty(exports, \"BitOutput\", ({ enumerable: true, get: function () { return BitOutput_1.BitOutput; } }));\nvar BitInput_1 = __webpack_require__(/*! ./BitInput */ \"(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/BitInput.js\");\nObject.defineProperty(exports, \"BitInput\", ({ enumerable: true, get: function () { return BitInput_1.BitInput; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3NlY3Rpb25zL25vZGVfbW9kdWxlcy9Ac2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHMvdGFyZ2V0L21haW4vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxpQkFBaUIsR0FBRyw2QkFBNkIsR0FBRywwQkFBMEIsR0FBRyw4QkFBOEIsR0FBRywyQkFBMkIsR0FBRyxVQUFVO0FBQzdLLGdDQUFnQyxtQkFBTyxDQUFDLDhEQUFPO0FBQy9DLFVBQVU7QUFDViw0QkFBNEIsbUJBQU8sQ0FBQyw2S0FBdUI7QUFDM0QsdURBQXNELEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQ25KLCtCQUErQixtQkFBTyxDQUFDLG1MQUEwQjtBQUNqRSwwREFBeUQsRUFBRSxxQ0FBcUMsMkRBQTJELEVBQUM7QUFDNUosMkJBQTJCLG1CQUFPLENBQUMsMktBQXNCO0FBQ3pELHNEQUFxRCxFQUFFLHFDQUFxQyxtREFBbUQsRUFBQztBQUNoSiw4QkFBOEIsbUJBQU8sQ0FBQyxpTEFBeUI7QUFDL0QseURBQXdELEVBQUUscUNBQXFDLHlEQUF5RCxFQUFDO0FBQ3pKLGtCQUFrQixtQkFBTyxDQUFDLHlKQUFhO0FBQ3ZDLDZDQUE0QyxFQUFFLHFDQUFxQyxpQ0FBaUMsRUFBQztBQUNySCxpQkFBaUIsbUJBQU8sQ0FBQyx1SkFBWTtBQUNyQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDbEgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vc2VjdGlvbnMvbm9kZV9tb2R1bGVzL0BzZWNhdGEtcHVibGljL2JpdG1hbmlwdWxhdGlvbi10cy90YXJnZXQvbWFpbi9pbmRleC5qcz81OTVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CaXRJbnB1dCA9IGV4cG9ydHMuQml0T3V0cHV0ID0gZXhwb3J0cy5MaXR0bGVFbmRpYW5CeXRlSW5wdXQgPSBleHBvcnRzLkJpZ0VuZGlhbkJ5dGVJbnB1dCA9IGV4cG9ydHMuTGl0dGxlRW5kaWFuQnl0ZU91dHB1dCA9IGV4cG9ydHMuQmlnRW5kaWFuQnl0ZU91dHB1dCA9IGV4cG9ydHMuQk4gPSB2b2lkIDA7XG5jb25zdCBibl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJibi5qc1wiKSk7XG5leHBvcnRzLkJOID0gYm5fanNfMS5kZWZhdWx0O1xudmFyIEJpZ0VuZGlhbkJ5dGVPdXRwdXRfMSA9IHJlcXVpcmUoXCIuL0JpZ0VuZGlhbkJ5dGVPdXRwdXRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCaWdFbmRpYW5CeXRlT3V0cHV0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCaWdFbmRpYW5CeXRlT3V0cHV0XzEuQmlnRW5kaWFuQnl0ZU91dHB1dDsgfSB9KTtcbnZhciBMaXR0bGVFbmRpYW5CeXRlT3V0cHV0XzEgPSByZXF1aXJlKFwiLi9MaXR0bGVFbmRpYW5CeXRlT3V0cHV0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTGl0dGxlRW5kaWFuQnl0ZU91dHB1dFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gTGl0dGxlRW5kaWFuQnl0ZU91dHB1dF8xLkxpdHRsZUVuZGlhbkJ5dGVPdXRwdXQ7IH0gfSk7XG52YXIgQmlnRW5kaWFuQnl0ZUlucHV0XzEgPSByZXF1aXJlKFwiLi9CaWdFbmRpYW5CeXRlSW5wdXRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCaWdFbmRpYW5CeXRlSW5wdXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJpZ0VuZGlhbkJ5dGVJbnB1dF8xLkJpZ0VuZGlhbkJ5dGVJbnB1dDsgfSB9KTtcbnZhciBMaXR0bGVFbmRpYW5CeXRlSW5wdXRfMSA9IHJlcXVpcmUoXCIuL0xpdHRsZUVuZGlhbkJ5dGVJbnB1dFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxpdHRsZUVuZGlhbkJ5dGVJbnB1dFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gTGl0dGxlRW5kaWFuQnl0ZUlucHV0XzEuTGl0dGxlRW5kaWFuQnl0ZUlucHV0OyB9IH0pO1xudmFyIEJpdE91dHB1dF8xID0gcmVxdWlyZShcIi4vQml0T3V0cHV0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQml0T3V0cHV0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCaXRPdXRwdXRfMS5CaXRPdXRwdXQ7IH0gfSk7XG52YXIgQml0SW5wdXRfMSA9IHJlcXVpcmUoXCIuL0JpdElucHV0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQml0SW5wdXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJpdElucHV0XzEuQml0SW5wdXQ7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/target/main/PbcFile.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/target/main/PbcFile.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PbcFile = void 0;\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nconst Sections_1 = __webpack_require__(/*! ./Sections */ \"(action-browser)/./node_modules/@partisiablockchain/sections/target/main/Sections.js\");\n/**\n * Provides utility for splitting a .pbc file into its sections. The documentation for the .pbc\n * format can be found <a\n * href=\"https://partisiablockchain.gitlab.io/documentation/smart-contracts/smart-contract-binary-formats.html#partisia-blockchain-contract-file\">here</a>.\n *\n * <p>A .pbc file is a single file that contains all the necessary elements needed to deploy a smart\n * contract to the Partisia Blockchain.\n *\n * <p>A .pbc file contains an ABI section, which is a binary interface containing the signatures of\n * the available actions and named types of a contract, and a WASM section, which is the compiled,\n * executable WebAssembly code of a contract.\n *\n * <p>A .pbc file of a ZK-contract will also contain a ZKBC section, which is a bytecode format that\n * contains the circuit to be executed in a ZK-computation.\n */\nclass PbcFile {\n    constructor(abiBytes, wasmBytes, zkbcBytes, isZk) {\n        this.abiBytes = abiBytes;\n        this.wasmBytes = wasmBytes;\n        this.zkbcBytes = zkbcBytes;\n        this.isZk = isZk;\n    }\n    /**\n     * Create a PbcFile from a byte array following the PBC <a\n     * href=\"https://partisiablockchain.gitlab.io/documentation/smart-contracts/smart-contract-binary-formats.html#partisia-blockchain-contract-file\">format</a>.\n     *\n     * @param pbcBytes built contract bytes in .pbc format.\n     * @return the .pbc file split into it's sections\n     * @throws Error if the given bytes don't contain the PBSC header string, an ABI\n     *     section or a WASM section or if the sectioned part of the bytes is ill-formed.\n     */\n    static fromBytes(pbcBytes) {\n        const inputStream = new bitmanipulation_ts_1.BigEndianByteInput(pbcBytes);\n        const inputHeaderBytes = inputStream.readBytes(4);\n        if (!inputHeaderBytes.equals(PbcFile.PBC_HEADER_BYTES)) {\n            throw Error(\"Given bytes do not contain PBC header!\");\n        }\n        let sections;\n        try {\n            sections = Sections_1.Sections.fromBytes(inputStream, PbcFile.IDENTIFIERS);\n        }\n        catch (e) {\n            throw Error(\"Exception encountered while parsing sectioned bytes:\\n\" + e);\n        }\n        return this.fromSections(sections);\n    }\n    static fromSections(sections) {\n        if (!sections.hasSection(this.ABI_IDENTIFIER_BYTE)) {\n            throw Error(\"Given bytes contain no ABI section!\");\n        }\n        if (!sections.hasSection(this.WASM_IDENTIFIER_BYTE)) {\n            throw Error(\"Given bytes contain no WASM section!\");\n        }\n        const abiBytes = sections.getSection(this.ABI_IDENTIFIER_BYTE);\n        const wasmBytes = sections.getSection(this.WASM_IDENTIFIER_BYTE);\n        let zkbcBytes = undefined;\n        let isZk = false;\n        if (sections.hasSection(this.ZK_IDENTIFIER_BYTE)) {\n            zkbcBytes = sections.getSection(this.ZK_IDENTIFIER_BYTE);\n            isZk = true;\n        }\n        return new PbcFile(abiBytes, wasmBytes, zkbcBytes, isZk);\n    }\n    /**\n     * Build ZKWA formatted bytes, following the definition of the ZKWA format <a\n     * href=\"https://partisiablockchain.gitlab.io/documentation/smart-contracts/smart-contract-binary-formats.html#zkwa-format\">here</a>.\n     * Both a WASM and ZKBC section must be present, to create ZKWA bytes.\n     *\n     * <p>ZKWA is the format used to deploy ZK-contracts to the Partisia Blockchain.\n     *\n     * @return the ZKWA formatted bytes.\n     * @throws Error if no ZKBC section is present.\n     */\n    getZkwaBytes() {\n        if (!this.isZk) {\n            throw Error(\"Could not construct ZKWA file, the ZKBC section was missing in the given bytes.\");\n        }\n        return bitmanipulation_ts_1.BigEndianByteOutput.serialize((bigEndianByteOutput) => {\n            bigEndianByteOutput.writeU8(PbcFile.WASM_IDENTIFIER_BYTE);\n            bigEndianByteOutput.writeU32(this.wasmBytes.length);\n            bigEndianByteOutput.writeBytes(this.wasmBytes);\n            bigEndianByteOutput.writeU8(PbcFile.ZK_IDENTIFIER_BYTE);\n            bigEndianByteOutput.writeU32(this.zkbcBytes.length);\n            bigEndianByteOutput.writeBytes(this.zkbcBytes);\n        });\n    }\n    /**\n     * Returns the content bytes of the ABI section.\n     *\n     * @return the ABI content bytes.\n     */\n    getAbiBytes() {\n        return this.abiBytes;\n    }\n    /**\n     * Returns the content bytes of the WASM section.\n     *\n     * @return the WASM content bytes.\n     */\n    getWasmBytes() {\n        return this.wasmBytes;\n    }\n    /**\n     * Returns the content bytes of the ZKBC section.\n     *\n     * @return the ZKBC content bytes.\n     */\n    getZkbcBytes() {\n        if (!this.isZk) {\n            throw Error(\"Cannot get ZKBC bytes from a public contract\");\n        }\n        return this.zkbcBytes;\n    }\n}\nexports.PbcFile = PbcFile;\n/** The header bytes of the .pbc format. */\nPbcFile.PBC_HEADER_BYTES = new Buffer([0x50, 0x42, 0x53, 0x43]);\n/** Identifier byte indicating the beginning of an ABI section of a pbc file. */\nPbcFile.ABI_IDENTIFIER_BYTE = 0x1;\n/** Identifier byte indicating the beginning of an WASM section of a pbc file. */\nPbcFile.WASM_IDENTIFIER_BYTE = 0x2;\n/** Identifier byte indicating the beginning of an ZKBC section of a pbc file. */\nPbcFile.ZK_IDENTIFIER_BYTE = 0x3;\n/**\n * Identifiers given in the order corresponding to the <a\n * href=\"https://partisiablockchain.gitlab.io/documentation/smart-contracts/smart-contract-binary-formats.html#partisia-blockchain-file-format\">\".pbc\n * format\"</a>.\n */\nPbcFile.IDENTIFIERS = Buffer.from([\n    PbcFile.ABI_IDENTIFIER_BYTE,\n    PbcFile.WASM_IDENTIFIER_BYTE,\n    PbcFile.ZK_IDENTIFIER_BYTE,\n]);\n//# sourceMappingURL=PbcFile.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3NlY3Rpb25zL3RhcmdldC9tYWluL1BiY0ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLDZCQUE2QixtQkFBTyxDQUFDLDJLQUFtQztBQUN4RSxtQkFBbUIsbUJBQU8sQ0FBQyx3R0FBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9zZWN0aW9ucy90YXJnZXQvbWFpbi9QYmNGaWxlLmpzPzZjOTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBiY0ZpbGUgPSB2b2lkIDA7XG5jb25zdCBiaXRtYW5pcHVsYXRpb25fdHNfMSA9IHJlcXVpcmUoXCJAc2VjYXRhLXB1YmxpYy9iaXRtYW5pcHVsYXRpb24tdHNcIik7XG5jb25zdCBTZWN0aW9uc18xID0gcmVxdWlyZShcIi4vU2VjdGlvbnNcIik7XG4vKipcbiAqIFByb3ZpZGVzIHV0aWxpdHkgZm9yIHNwbGl0dGluZyBhIC5wYmMgZmlsZSBpbnRvIGl0cyBzZWN0aW9ucy4gVGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSAucGJjXG4gKiBmb3JtYXQgY2FuIGJlIGZvdW5kIDxhXG4gKiBocmVmPVwiaHR0cHM6Ly9wYXJ0aXNpYWJsb2NrY2hhaW4uZ2l0bGFiLmlvL2RvY3VtZW50YXRpb24vc21hcnQtY29udHJhY3RzL3NtYXJ0LWNvbnRyYWN0LWJpbmFyeS1mb3JtYXRzLmh0bWwjcGFydGlzaWEtYmxvY2tjaGFpbi1jb250cmFjdC1maWxlXCI+aGVyZTwvYT4uXG4gKlxuICogPHA+QSAucGJjIGZpbGUgaXMgYSBzaW5nbGUgZmlsZSB0aGF0IGNvbnRhaW5zIGFsbCB0aGUgbmVjZXNzYXJ5IGVsZW1lbnRzIG5lZWRlZCB0byBkZXBsb3kgYSBzbWFydFxuICogY29udHJhY3QgdG8gdGhlIFBhcnRpc2lhIEJsb2NrY2hhaW4uXG4gKlxuICogPHA+QSAucGJjIGZpbGUgY29udGFpbnMgYW4gQUJJIHNlY3Rpb24sIHdoaWNoIGlzIGEgYmluYXJ5IGludGVyZmFjZSBjb250YWluaW5nIHRoZSBzaWduYXR1cmVzIG9mXG4gKiB0aGUgYXZhaWxhYmxlIGFjdGlvbnMgYW5kIG5hbWVkIHR5cGVzIG9mIGEgY29udHJhY3QsIGFuZCBhIFdBU00gc2VjdGlvbiwgd2hpY2ggaXMgdGhlIGNvbXBpbGVkLFxuICogZXhlY3V0YWJsZSBXZWJBc3NlbWJseSBjb2RlIG9mIGEgY29udHJhY3QuXG4gKlxuICogPHA+QSAucGJjIGZpbGUgb2YgYSBaSy1jb250cmFjdCB3aWxsIGFsc28gY29udGFpbiBhIFpLQkMgc2VjdGlvbiwgd2hpY2ggaXMgYSBieXRlY29kZSBmb3JtYXQgdGhhdFxuICogY29udGFpbnMgdGhlIGNpcmN1aXQgdG8gYmUgZXhlY3V0ZWQgaW4gYSBaSy1jb21wdXRhdGlvbi5cbiAqL1xuY2xhc3MgUGJjRmlsZSB7XG4gICAgY29uc3RydWN0b3IoYWJpQnl0ZXMsIHdhc21CeXRlcywgemtiY0J5dGVzLCBpc1prKSB7XG4gICAgICAgIHRoaXMuYWJpQnl0ZXMgPSBhYmlCeXRlcztcbiAgICAgICAgdGhpcy53YXNtQnl0ZXMgPSB3YXNtQnl0ZXM7XG4gICAgICAgIHRoaXMuemtiY0J5dGVzID0gemtiY0J5dGVzO1xuICAgICAgICB0aGlzLmlzWmsgPSBpc1prO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBQYmNGaWxlIGZyb20gYSBieXRlIGFycmF5IGZvbGxvd2luZyB0aGUgUEJDIDxhXG4gICAgICogaHJlZj1cImh0dHBzOi8vcGFydGlzaWFibG9ja2NoYWluLmdpdGxhYi5pby9kb2N1bWVudGF0aW9uL3NtYXJ0LWNvbnRyYWN0cy9zbWFydC1jb250cmFjdC1iaW5hcnktZm9ybWF0cy5odG1sI3BhcnRpc2lhLWJsb2NrY2hhaW4tY29udHJhY3QtZmlsZVwiPmZvcm1hdDwvYT4uXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGJjQnl0ZXMgYnVpbHQgY29udHJhY3QgYnl0ZXMgaW4gLnBiYyBmb3JtYXQuXG4gICAgICogQHJldHVybiB0aGUgLnBiYyBmaWxlIHNwbGl0IGludG8gaXQncyBzZWN0aW9uc1xuICAgICAqIEB0aHJvd3MgRXJyb3IgaWYgdGhlIGdpdmVuIGJ5dGVzIGRvbid0IGNvbnRhaW4gdGhlIFBCU0MgaGVhZGVyIHN0cmluZywgYW4gQUJJXG4gICAgICogICAgIHNlY3Rpb24gb3IgYSBXQVNNIHNlY3Rpb24gb3IgaWYgdGhlIHNlY3Rpb25lZCBwYXJ0IG9mIHRoZSBieXRlcyBpcyBpbGwtZm9ybWVkLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tQnl0ZXMocGJjQnl0ZXMpIHtcbiAgICAgICAgY29uc3QgaW5wdXRTdHJlYW0gPSBuZXcgYml0bWFuaXB1bGF0aW9uX3RzXzEuQmlnRW5kaWFuQnl0ZUlucHV0KHBiY0J5dGVzKTtcbiAgICAgICAgY29uc3QgaW5wdXRIZWFkZXJCeXRlcyA9IGlucHV0U3RyZWFtLnJlYWRCeXRlcyg0KTtcbiAgICAgICAgaWYgKCFpbnB1dEhlYWRlckJ5dGVzLmVxdWFscyhQYmNGaWxlLlBCQ19IRUFERVJfQllURVMpKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIkdpdmVuIGJ5dGVzIGRvIG5vdCBjb250YWluIFBCQyBoZWFkZXIhXCIpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBzZWN0aW9ucztcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHNlY3Rpb25zID0gU2VjdGlvbnNfMS5TZWN0aW9ucy5mcm9tQnl0ZXMoaW5wdXRTdHJlYW0sIFBiY0ZpbGUuSURFTlRJRklFUlMpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIkV4Y2VwdGlvbiBlbmNvdW50ZXJlZCB3aGlsZSBwYXJzaW5nIHNlY3Rpb25lZCBieXRlczpcXG5cIiArIGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmZyb21TZWN0aW9ucyhzZWN0aW9ucyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tU2VjdGlvbnMoc2VjdGlvbnMpIHtcbiAgICAgICAgaWYgKCFzZWN0aW9ucy5oYXNTZWN0aW9uKHRoaXMuQUJJX0lERU5USUZJRVJfQllURSkpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiR2l2ZW4gYnl0ZXMgY29udGFpbiBubyBBQkkgc2VjdGlvbiFcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzZWN0aW9ucy5oYXNTZWN0aW9uKHRoaXMuV0FTTV9JREVOVElGSUVSX0JZVEUpKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIkdpdmVuIGJ5dGVzIGNvbnRhaW4gbm8gV0FTTSBzZWN0aW9uIVwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhYmlCeXRlcyA9IHNlY3Rpb25zLmdldFNlY3Rpb24odGhpcy5BQklfSURFTlRJRklFUl9CWVRFKTtcbiAgICAgICAgY29uc3Qgd2FzbUJ5dGVzID0gc2VjdGlvbnMuZ2V0U2VjdGlvbih0aGlzLldBU01fSURFTlRJRklFUl9CWVRFKTtcbiAgICAgICAgbGV0IHprYmNCeXRlcyA9IHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IGlzWmsgPSBmYWxzZTtcbiAgICAgICAgaWYgKHNlY3Rpb25zLmhhc1NlY3Rpb24odGhpcy5aS19JREVOVElGSUVSX0JZVEUpKSB7XG4gICAgICAgICAgICB6a2JjQnl0ZXMgPSBzZWN0aW9ucy5nZXRTZWN0aW9uKHRoaXMuWktfSURFTlRJRklFUl9CWVRFKTtcbiAgICAgICAgICAgIGlzWmsgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUGJjRmlsZShhYmlCeXRlcywgd2FzbUJ5dGVzLCB6a2JjQnl0ZXMsIGlzWmspO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBCdWlsZCBaS1dBIGZvcm1hdHRlZCBieXRlcywgZm9sbG93aW5nIHRoZSBkZWZpbml0aW9uIG9mIHRoZSBaS1dBIGZvcm1hdCA8YVxuICAgICAqIGhyZWY9XCJodHRwczovL3BhcnRpc2lhYmxvY2tjaGFpbi5naXRsYWIuaW8vZG9jdW1lbnRhdGlvbi9zbWFydC1jb250cmFjdHMvc21hcnQtY29udHJhY3QtYmluYXJ5LWZvcm1hdHMuaHRtbCN6a3dhLWZvcm1hdFwiPmhlcmU8L2E+LlxuICAgICAqIEJvdGggYSBXQVNNIGFuZCBaS0JDIHNlY3Rpb24gbXVzdCBiZSBwcmVzZW50LCB0byBjcmVhdGUgWktXQSBieXRlcy5cbiAgICAgKlxuICAgICAqIDxwPlpLV0EgaXMgdGhlIGZvcm1hdCB1c2VkIHRvIGRlcGxveSBaSy1jb250cmFjdHMgdG8gdGhlIFBhcnRpc2lhIEJsb2NrY2hhaW4uXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHRoZSBaS1dBIGZvcm1hdHRlZCBieXRlcy5cbiAgICAgKiBAdGhyb3dzIEVycm9yIGlmIG5vIFpLQkMgc2VjdGlvbiBpcyBwcmVzZW50LlxuICAgICAqL1xuICAgIGdldFprd2FCeXRlcygpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzWmspIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwiQ291bGQgbm90IGNvbnN0cnVjdCBaS1dBIGZpbGUsIHRoZSBaS0JDIHNlY3Rpb24gd2FzIG1pc3NpbmcgaW4gdGhlIGdpdmVuIGJ5dGVzLlwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYml0bWFuaXB1bGF0aW9uX3RzXzEuQmlnRW5kaWFuQnl0ZU91dHB1dC5zZXJpYWxpemUoKGJpZ0VuZGlhbkJ5dGVPdXRwdXQpID0+IHtcbiAgICAgICAgICAgIGJpZ0VuZGlhbkJ5dGVPdXRwdXQud3JpdGVVOChQYmNGaWxlLldBU01fSURFTlRJRklFUl9CWVRFKTtcbiAgICAgICAgICAgIGJpZ0VuZGlhbkJ5dGVPdXRwdXQud3JpdGVVMzIodGhpcy53YXNtQnl0ZXMubGVuZ3RoKTtcbiAgICAgICAgICAgIGJpZ0VuZGlhbkJ5dGVPdXRwdXQud3JpdGVCeXRlcyh0aGlzLndhc21CeXRlcyk7XG4gICAgICAgICAgICBiaWdFbmRpYW5CeXRlT3V0cHV0LndyaXRlVTgoUGJjRmlsZS5aS19JREVOVElGSUVSX0JZVEUpO1xuICAgICAgICAgICAgYmlnRW5kaWFuQnl0ZU91dHB1dC53cml0ZVUzMih0aGlzLnprYmNCeXRlcy5sZW5ndGgpO1xuICAgICAgICAgICAgYmlnRW5kaWFuQnl0ZU91dHB1dC53cml0ZUJ5dGVzKHRoaXMuemtiY0J5dGVzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNvbnRlbnQgYnl0ZXMgb2YgdGhlIEFCSSBzZWN0aW9uLlxuICAgICAqXG4gICAgICogQHJldHVybiB0aGUgQUJJIGNvbnRlbnQgYnl0ZXMuXG4gICAgICovXG4gICAgZ2V0QWJpQnl0ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFiaUJ5dGVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjb250ZW50IGJ5dGVzIG9mIHRoZSBXQVNNIHNlY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHRoZSBXQVNNIGNvbnRlbnQgYnl0ZXMuXG4gICAgICovXG4gICAgZ2V0V2FzbUJ5dGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy53YXNtQnl0ZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNvbnRlbnQgYnl0ZXMgb2YgdGhlIFpLQkMgc2VjdGlvbi5cbiAgICAgKlxuICAgICAqIEByZXR1cm4gdGhlIFpLQkMgY29udGVudCBieXRlcy5cbiAgICAgKi9cbiAgICBnZXRaa2JjQnl0ZXMoKSB7XG4gICAgICAgIGlmICghdGhpcy5pc1prKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIkNhbm5vdCBnZXQgWktCQyBieXRlcyBmcm9tIGEgcHVibGljIGNvbnRyYWN0XCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnprYmNCeXRlcztcbiAgICB9XG59XG5leHBvcnRzLlBiY0ZpbGUgPSBQYmNGaWxlO1xuLyoqIFRoZSBoZWFkZXIgYnl0ZXMgb2YgdGhlIC5wYmMgZm9ybWF0LiAqL1xuUGJjRmlsZS5QQkNfSEVBREVSX0JZVEVTID0gbmV3IEJ1ZmZlcihbMHg1MCwgMHg0MiwgMHg1MywgMHg0M10pO1xuLyoqIElkZW50aWZpZXIgYnl0ZSBpbmRpY2F0aW5nIHRoZSBiZWdpbm5pbmcgb2YgYW4gQUJJIHNlY3Rpb24gb2YgYSBwYmMgZmlsZS4gKi9cblBiY0ZpbGUuQUJJX0lERU5USUZJRVJfQllURSA9IDB4MTtcbi8qKiBJZGVudGlmaWVyIGJ5dGUgaW5kaWNhdGluZyB0aGUgYmVnaW5uaW5nIG9mIGFuIFdBU00gc2VjdGlvbiBvZiBhIHBiYyBmaWxlLiAqL1xuUGJjRmlsZS5XQVNNX0lERU5USUZJRVJfQllURSA9IDB4Mjtcbi8qKiBJZGVudGlmaWVyIGJ5dGUgaW5kaWNhdGluZyB0aGUgYmVnaW5uaW5nIG9mIGFuIFpLQkMgc2VjdGlvbiBvZiBhIHBiYyBmaWxlLiAqL1xuUGJjRmlsZS5aS19JREVOVElGSUVSX0JZVEUgPSAweDM7XG4vKipcbiAqIElkZW50aWZpZXJzIGdpdmVuIGluIHRoZSBvcmRlciBjb3JyZXNwb25kaW5nIHRvIHRoZSA8YVxuICogaHJlZj1cImh0dHBzOi8vcGFydGlzaWFibG9ja2NoYWluLmdpdGxhYi5pby9kb2N1bWVudGF0aW9uL3NtYXJ0LWNvbnRyYWN0cy9zbWFydC1jb250cmFjdC1iaW5hcnktZm9ybWF0cy5odG1sI3BhcnRpc2lhLWJsb2NrY2hhaW4tZmlsZS1mb3JtYXRcIj5cIi5wYmNcbiAqIGZvcm1hdFwiPC9hPi5cbiAqL1xuUGJjRmlsZS5JREVOVElGSUVSUyA9IEJ1ZmZlci5mcm9tKFtcbiAgICBQYmNGaWxlLkFCSV9JREVOVElGSUVSX0JZVEUsXG4gICAgUGJjRmlsZS5XQVNNX0lERU5USUZJRVJfQllURSxcbiAgICBQYmNGaWxlLlpLX0lERU5USUZJRVJfQllURSxcbl0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGJjRmlsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/target/main/PbcFile.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/target/main/Sections.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/target/main/Sections.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Sections = void 0;\nconst bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@partisiablockchain/sections/node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\n/**\n * Sections of a sectioned file. A section follows the following <a\n * href=\"https://partisiablockchain.gitlab.io/documentation/smart-contracts/smart-contract-binary-formats.html#sections\">format</a>.\n *\n * <p>A section consists of an identifier byte, a 32-bit unsigned integer indicating the length of\n * the section's content and then the section's content bytes.\n *\n * <p>Can be used to build sectioned files, eg. a <a\n * href=\"https://partisiablockchain.gitlab.io/documentation/smart-contracts/smart-contract-binary-formats.html#partisia-blockchain-file-format\">.pbc\n * file</a>.\n */\nclass Sections {\n    /**\n     * Creates an empty collection of sections.\n     *\n     * @param allowedIdentifiers byte array containing the allowed identifiers for the given sections.\n     */\n    constructor(allowedIdentifiers) {\n        this.sections = new Map();\n        this.allowedIdentifiers = allowedIdentifiers;\n    }\n    /**\n     * Returns the bytes of the section corresponding to the given identifier.\n     *\n     * @param identifier identifier of the section to be returned\n     * @return the section content bytes\n     */\n    getSection(identifier) {\n        return this.sections.get(identifier);\n    }\n    /**\n     * Serializes the added sections into a byte array. The sections are ordered by their identifiers\n     * from lowest to highest.\n     *\n     * @return the serialized sections.\n     */\n    getSerializedBytes() {\n        return bitmanipulation_ts_1.BigEndianByteOutput.serialize((bigEndianByteOutput) => {\n            for (const identifier of this.allowedIdentifiers) {\n                if (this.sections.has(identifier)) {\n                    bigEndianByteOutput.writeU8(identifier);\n                    bigEndianByteOutput.writeU32(this.sections.get(identifier).length);\n                    bigEndianByteOutput.writeBytes(this.sections.get(identifier));\n                }\n            }\n        });\n    }\n    /**\n     * Adds a section of bytes with a given header byte to the collection of sections. If a section\n     * with the provided identifier has already been added then the content of that section is\n     * overwritten.\n     *\n     * @param identifier identifier byte indicating the type of the section to be added.\n     * @param sectionBytes the binary data of the section to be added.\n     * @throws Error if the given identifier is not in the set of allowed identifiers.\n     */\n    addSection(identifier, sectionBytes) {\n        if (this.allowedIdentifiers.indexOf(identifier) === -1) {\n            throw Error(`Section identifier ${identifier} is not allowed.`);\n        }\n        this.sections.set(identifier, sectionBytes);\n    }\n    /**\n     * Check if the sections contains a section with the given identifier.\n     *\n     * @param identifier identifier byte indicating the type of the section.\n     * @return whether a section with the given identifier is contained.\n     */\n    hasSection(identifier) {\n        return this.sections.has(identifier);\n    }\n    /**\n     * Creates Sections by parsing sectioned binary data. Sections must come in ascending order by id.\n     *\n     * @param byteInput Stream of bytes to parse.\n     * @param allowedIdentifiers List of allowed section identifiers\n     * @return the parsed sections.\n     * @exception Error If the input bytes are encoded incorrectly.\n     */\n    static fromBytes(byteInput, allowedIdentifiers) {\n        const sections = new Sections(allowedIdentifiers);\n        let previousSectionId = 0;\n        let sectionId = this.readNextSectionId(byteInput);\n        while (sectionId !== null) {\n            const maxIdReached = previousSectionId == 255;\n            if (maxIdReached) {\n                throw Error(`Invalid section ${sectionId}: Sections past a section with the id 255 are not allowed.`);\n            }\n            const duplicateSectionId = sections.hasSection(sectionId);\n            if (duplicateSectionId) {\n                throw Error(`Invalid section ${sectionId}: Duplicated section id`);\n            }\n            const incorrectlyOrdered = sectionId < previousSectionId;\n            if (incorrectlyOrdered) {\n                throw Error(`Invalid section ${sectionId}: incorrectly ordered. Expected section` +\n                    ` with id of at least ${previousSectionId + 1}`);\n            }\n            const sectionContent = this.readSectionContent(byteInput);\n            sections.addSection(sectionId, sectionContent);\n            previousSectionId = sectionId;\n            sectionId = this.readNextSectionId(byteInput);\n        }\n        return sections;\n    }\n    static readNextSectionId(byteInput) {\n        try {\n            return byteInput.readU8();\n        }\n        catch (_a) {\n            return null;\n        }\n    }\n    static readSectionContent(byteInput) {\n        // Read length of the section's content\n        const sectionLen = byteInput.readU32();\n        // Try to read and return the indicated number of bytes\n        return byteInput.readBytes(sectionLen);\n    }\n}\nexports.Sections = Sections;\n//# sourceMappingURL=Sections.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/target/main/Sections.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/sections/target/main/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/sections/target/main/index.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PbcFile = exports.Sections = void 0;\nvar Sections_1 = __webpack_require__(/*! ./Sections */ \"(action-browser)/./node_modules/@partisiablockchain/sections/target/main/Sections.js\");\nObject.defineProperty(exports, \"Sections\", ({ enumerable: true, get: function () { return Sections_1.Sections; } }));\nvar PbcFile_1 = __webpack_require__(/*! ./PbcFile */ \"(action-browser)/./node_modules/@partisiablockchain/sections/target/main/PbcFile.js\");\nObject.defineProperty(exports, \"PbcFile\", ({ enumerable: true, get: function () { return PbcFile_1.PbcFile; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3NlY3Rpb25zL3RhcmdldC9tYWluL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxnQkFBZ0I7QUFDbEMsaUJBQWlCLG1CQUFPLENBQUMsd0dBQVk7QUFDckMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILGdCQUFnQixtQkFBTyxDQUFDLHNHQUFXO0FBQ25DLDJDQUEwQyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUMvRyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi9zZWN0aW9ucy90YXJnZXQvbWFpbi9pbmRleC5qcz8wYzcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QYmNGaWxlID0gZXhwb3J0cy5TZWN0aW9ucyA9IHZvaWQgMDtcbnZhciBTZWN0aW9uc18xID0gcmVxdWlyZShcIi4vU2VjdGlvbnNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTZWN0aW9uc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gU2VjdGlvbnNfMS5TZWN0aW9uczsgfSB9KTtcbnZhciBQYmNGaWxlXzEgPSByZXF1aXJlKFwiLi9QYmNGaWxlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUGJjRmlsZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUGJjRmlsZV8xLlBiY0ZpbGU7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/sections/target/main/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/BinarySecretShares.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/BinarySecretShares.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Share = exports.BinarySecretShares = void 0;\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nvar bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nvar main_1 = __webpack_require__(/*! ../main */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/index.js\");\nvar EncryptedShares_1 = __webpack_require__(/*! ./EncryptedShares */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/EncryptedShares.js\");\nvar CryptoUtils_1 = __webpack_require__(/*! ./util/CryptoUtils */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/CryptoUtils.js\");\nvar BlindedBinaryShares_1 = __webpack_require__(/*! ./BlindedBinaryShares */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/BlindedBinaryShares.js\");\nvar Blindings_1 = __webpack_require__(/*! ./Blindings */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/Blindings.js\");\n/**\n * Binary data which has been broken into secret shares. BinarySecretShares are distributed among ZK\n * nodes when inputting a secret variable, and received from ZK nodes when reconstructing a secret\n * variable.\n */\nvar BinarySecretShares = /** @class */ (function () {\n    /**\n     * Constructs secret shares from a list of shares. The list contains a share for each\n     * sending/receiving party of the secret data.\n     *\n     * @param secretShares the list of shares\n     */\n    function BinarySecretShares(secretShares) {\n        this.secretShares = secretShares;\n    }\n    /**\n     * Creates binary secret shares from binary secret data. For each secret bit a random polynomial\n     * of degree 1 is created with the secret bit embedded as the constant term. To create each share\n     * of the bit the polynomial is evaluated at a point.\n     *\n     * @param variableData binary secret variable data to create the secret shares from\n     * @param rng randomness generator used to generate random polynomials\n     * @return the created shares.\n     */\n    BinarySecretShares.create = function (variableData, rng) {\n        var random = rng !== null && rng !== void 0 ? rng : crypto_1.randomBytes;\n        var sharedElements = [];\n        for (var i = 0; i < this.ALPHAS.length; i++) {\n            sharedElements.push([]);\n        }\n        for (var i = 0; i < variableData.length; i++) {\n            var secret = this.isBitSet(variableData.data, i)\n                ? main_1.BinaryExtensionFieldElement.ONE\n                : main_1.BinaryExtensionFieldElement.ZERO;\n            var polynomial = this.generatePolynomial(secret, random);\n            for (var j = 0; j < this.ALPHAS.length; j++) {\n                var share = polynomial.evaluate(this.ALPHAS[j]);\n                sharedElements[j].push(share);\n            }\n        }\n        return new BinarySecretShares(sharedElements.map(function (s) { return new Share(s); }));\n    };\n    /**\n     * Create binary secret shares from bytes read from ZK nodes.\n     *\n     * @param rawShares list of raw shares read from ZK nodes\n     * @return the created shares\n     */\n    BinarySecretShares.read = function (rawShares) {\n        var readShares = rawShares.map(function (s) { return Share.read(s); });\n        return new BinarySecretShares(readShares);\n    };\n    /**\n     * Generates a random polynomial of degree 1:\n     *\n     * <p><i>f(x)= secret + random*x</i>\n     *\n     * <p>such that f(0) match the provided secret.\n     *\n     * @param secret the secret to be embedded in the constant term\n     * @param rng randomness generator used to generate random byte\n     * @return a random polynomial generated with the secret and a random number as coefficients.\n     */\n    BinarySecretShares.generatePolynomial = function (secret, rng) {\n        var randomByte = rng(1)[0];\n        var random = main_1.BinaryExtensionFieldElement.createElement(randomByte);\n        return main_1.BinaryExtensionFieldElement.createPoly([secret, random]);\n    };\n    BinarySecretShares.isBitSet = function (data, index) {\n        var byteIndex = Math.floor(index / 8);\n        var byteValue = data[byteIndex];\n        var bitIndex = index % 8;\n        var bitValue = byteValue & (1 << bitIndex);\n        return bitValue !== 0;\n    };\n    /**\n     * Reconstruct the secret variable data from these BinarySecretShares. First the shares of each\n     * bit of the secret variable data is grouped. Then, a polynomial is interpolated from the shares\n     * of each bit. The constant term of this polynomial is the value of the secret bit. Lastly, the\n     * secret bits are collected in a byte array to form the secret variable data.\n     *\n     * @return the reconstructed binary secret variable data\n     */\n    BinarySecretShares.prototype.reconstructSecret = function () {\n        var _this = this;\n        return bitmanipulation_ts_1.BitOutput.serializeBits(function (out) {\n            for (var i = 0; i < _this.getBitLength(); i++) {\n                out.writeBoolean(_this.reconstructSecretBit(i));\n            }\n        });\n    };\n    /**\n     * Reconstructs one bit of the secret variable data which these binary secret shares constitute. A\n     * polynomial is interpolated from the shares of the bit, and the constant term of this polynomial\n     * is returned as the reconstructed bit.\n     *\n     * @param i index of the bit to reconstruct\n     * @return the reconstructed bit\n     */\n    BinarySecretShares.prototype.reconstructSecretBit = function (i) {\n        var sharesOfBit = this.secretShares.map(function (share) { return share.bitElements[i]; });\n        var polynomial = main_1.Lagrange.interpolateCheckDegree(BinarySecretShares.ALPHAS, sharesOfBit, 1, main_1.BinaryExtensionFieldElement.ZERO, main_1.BinaryExtensionFieldElement.ONE);\n        return !polynomial.getConstantTerm().isZero();\n    };\n    BinarySecretShares.prototype.getBitLength = function () {\n        return this.secretShares[0].bitElements.length;\n    };\n    /**\n     * Encrypts the secret shares to prepare them for sending on-chain. Each share is encrypted using\n     * a shared key. The shared key is created from an ephemeral (temporary) private key and the\n     * public key of the receiving engine. This allows only the receiving engine to recover the value\n     * of the share. The private key is ephemeral such that two identical shares will be encrypted\n     * differently in order to prevent replay attacks.\n     *\n     * @param ephemeralKey The temporary key to encrypt the shares with\n     * @param sender the address of sender of the secret input\n     * @param engineKeys the keys of the engines that are to receive the encrypted shares\n     * @return the encrypted shares\n     */\n    BinarySecretShares.prototype.encrypt = function (ephemeralKey, sender, engineKeys) {\n        if (this.secretShares.length !== engineKeys.length) {\n            throw new Error(\"Number of engines (\".concat(engineKeys.length, \") did not match number of shares (\").concat(this.secretShares.length, \")\"));\n        }\n        var shares = [];\n        for (var i = 0; i < engineKeys.length; i++) {\n            var share = this.secretShares[i];\n            var engineKey = engineKeys[i];\n            var encryptedShare = share.encrypt(ephemeralKey, sender, engineKey);\n            shares.push(encryptedShare);\n        }\n        return new EncryptedShares_1.EncryptedShares(shares);\n    };\n    /**\n     * Applies blinding to the shares to prepare them for sending off-chain. If blinding were not\n     * applied, secret shares could easily be guessed for small input sizes, since hashes of the\n     * shares are put directly on the blockchain.\n     *\n     * @param rng used to generate blindings\n     * @return the shares concatenated with blindings\n     */\n    BinarySecretShares.prototype.applyBlinding = function (rng) {\n        var blindings = Blindings_1.Blindings.generate(this.noOfShares(), rng);\n        var blindedShares = [];\n        for (var i = 0; i < blindings.blindings.length; i++) {\n            var share = this.secretShares[i];\n            var blinding = blindings.blindings[i];\n            var blindedShare = share.serializeWithBlinding(blinding);\n            blindedShares.push(blindedShare);\n        }\n        return new BlindedBinaryShares_1.BlindedBinaryShares(blindedShares);\n    };\n    /**\n     * Returns the amount of shares.\n     *\n     * @return the size of the share list\n     */\n    BinarySecretShares.prototype.noOfShares = function () {\n        return this.secretShares.length;\n    };\n    BinarySecretShares.prototype.isEqualTo = function (that) {\n        if (that.secretShares.length !== this.secretShares.length) {\n            return false;\n        }\n        for (var i = 0; i < this.secretShares.length; i++) {\n            if (!that.secretShares[i].isEqualTo(this.secretShares[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    BinarySecretShares.ALPHAS = main_1.BinaryExtensionFieldElement.computationAlphas();\n    return BinarySecretShares;\n}());\nexports.BinarySecretShares = BinarySecretShares;\n/**\n * Secret shares are disjoint parts of a secret input. A secret share consists of a list of\n * BinaryExtensionFieldElements which are in turn secret shares of a single bit.\n */\nvar Share = /** @class */ (function () {\n    /**\n     * Constructs a secret share from a list of bit elements.\n     *\n     * @param bitElements the bit elements that constitutes the share\n     */\n    function Share(bitElements) {\n        this.bitElements = bitElements;\n    }\n    /**\n     * Read a binary share from a stream, in the format specified by the ZK nodes. This is used when\n     * shares are fetched from ZK nodes during reconstruction of a secret variable.\n     *\n     * @param shareBytes the buffer to read the share from\n     * @return the read share\n     */\n    Share.read = function (shareBytes) {\n        var stream = new bitmanipulation_ts_1.BigEndianByteInput(shareBytes);\n        var numOfElements = stream.readI32();\n        var sharesOfBits = [];\n        for (var i = 0; i < numOfElements; i++) {\n            var bitLength = stream.readI32();\n            for (var j = 0; j < bitLength; j++) {\n                var shareOfBit = main_1.BinaryExtensionFieldElement.createElement(stream.readI8());\n                sharesOfBits.push(shareOfBit);\n            }\n        }\n        return new Share(sharesOfBits);\n    };\n    /**\n     * Encrypts a share using a shared key. The shared key is created from an ephemeral (temporary)\n     * private key and the public key of the receiving party. This allows only the receiving party\n     * to recover the value of the share. The private key is ephemeral such that two identical\n     * shares will be encrypted differently in order to prevent replay attacks. The identity\n     * (address) of the sender is encrypted along with the share such that a third party cannot\n     * spoof the identity of the sender.\n     *\n     * @param ephemeralKey The temporary key to encrypt the share with\n     * @param sender the address of the sender of the secret input\n     * @param enginePublicKey the key of the engine that is to receive the encrypted share\n     * @return the encrypted share\n     */\n    Share.prototype.encrypt = function (ephemeralKey, sender, enginePublicKey) {\n        var aes = CryptoUtils_1.CryptoUtils.createAesForParty(ephemeralKey, enginePublicKey.asBuffer());\n        return Buffer.concat([\n            aes.update(this.serialize()),\n            aes.update(Buffer.from(sender, \"hex\")),\n            aes.final(),\n        ]);\n    };\n    /**\n     * Serializes each bit element of the share.\n     *\n     * @return the serialized share\n     */\n    Share.prototype.serialize = function () {\n        return Buffer.from(this.bitElements.map(function (b) { return b.value; }));\n    };\n    /**\n     * Applies the supplied blinding by serializing this share along with the blinding.\n     *\n     * @param blinding the blinding to apply\n     * @return the serialized share and blinding\n     */\n    Share.prototype.serializeWithBlinding = function (blinding) {\n        return Buffer.concat([this.serialize(), blinding]);\n    };\n    Share.prototype.isEqualTo = function (that) {\n        if (that.bitElements.length !== this.bitElements.length) {\n            return false;\n        }\n        for (var i = 0; i < this.bitElements.length; i++) {\n            if (!that.bitElements[i].isEqualTo(this.bitElements[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return Share;\n}());\nexports.Share = Share;\n//# sourceMappingURL=BinarySecretShares.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/BinarySecretShares.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/BlindedBinaryShares.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/BlindedBinaryShares.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlindedBinaryShares = void 0;\nvar ShareCommitments_1 = __webpack_require__(/*! ./ShareCommitments */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/ShareCommitments.js\");\nvar CryptoUtils_1 = __webpack_require__(/*! ./util/CryptoUtils */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/CryptoUtils.js\");\n/**\n * Blinded secret shares of binary data. When inputting a secret off-chain, blinded shares of the\n * secret are created, then hashed and put on the blockchain to commit to the value of the secret.\n * Afterwards, the blinded shares are sent directly and securely to the individual parties\n * (engines), who can then verify their value against the hashes on the blockchain. Without\n * blinding, for small input sizes, other parties than the one receiving the share could guess the\n * value of the share by trying all possible hashes.\n */\nvar BlindedBinaryShares = /** @class */ (function () {\n    /**\n     * Constructs blinded shares for a list of shares. The list contains a blinded share for each\n     * receiving party of the secret input.\n     *\n     * @param shares the blinded shares\n     */\n    function BlindedBinaryShares(shares) {\n        this.shares = shares;\n    }\n    /**\n     * Hash each blinded share in order to conceal its value. The hashes are then used as commitments\n     * to the values of the shares.\n     *\n     * @return ShareCommitments created from the hashes of the blinded shares\n     */\n    BlindedBinaryShares.prototype.hash = function () {\n        var commitments = [];\n        for (var _i = 0, _a = this.shares; _i < _a.length; _i++) {\n            var blindedShare = _a[_i];\n            var commitment = CryptoUtils_1.CryptoUtils.hashBuffer(blindedShare);\n            commitments.push(commitment);\n        }\n        return new ShareCommitments_1.ShareCommitments(commitments);\n    };\n    return BlindedBinaryShares;\n}());\nexports.BlindedBinaryShares = BlindedBinaryShares;\n//# sourceMappingURL=BlindedBinaryShares.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi9CbGluZGVkQmluYXJ5U2hhcmVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQix5QkFBeUIsbUJBQU8sQ0FBQyx5SEFBb0I7QUFDckQsb0JBQW9CLG1CQUFPLENBQUMseUhBQW9CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsZ0JBQWdCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi96ay1jbGllbnQvdGFyZ2V0L21haW4vQmxpbmRlZEJpbmFyeVNoYXJlcy5qcz81MjIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CbGluZGVkQmluYXJ5U2hhcmVzID0gdm9pZCAwO1xudmFyIFNoYXJlQ29tbWl0bWVudHNfMSA9IHJlcXVpcmUoXCIuL1NoYXJlQ29tbWl0bWVudHNcIik7XG52YXIgQ3J5cHRvVXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWwvQ3J5cHRvVXRpbHNcIik7XG4vKipcbiAqIEJsaW5kZWQgc2VjcmV0IHNoYXJlcyBvZiBiaW5hcnkgZGF0YS4gV2hlbiBpbnB1dHRpbmcgYSBzZWNyZXQgb2ZmLWNoYWluLCBibGluZGVkIHNoYXJlcyBvZiB0aGVcbiAqIHNlY3JldCBhcmUgY3JlYXRlZCwgdGhlbiBoYXNoZWQgYW5kIHB1dCBvbiB0aGUgYmxvY2tjaGFpbiB0byBjb21taXQgdG8gdGhlIHZhbHVlIG9mIHRoZSBzZWNyZXQuXG4gKiBBZnRlcndhcmRzLCB0aGUgYmxpbmRlZCBzaGFyZXMgYXJlIHNlbnQgZGlyZWN0bHkgYW5kIHNlY3VyZWx5IHRvIHRoZSBpbmRpdmlkdWFsIHBhcnRpZXNcbiAqIChlbmdpbmVzKSwgd2hvIGNhbiB0aGVuIHZlcmlmeSB0aGVpciB2YWx1ZSBhZ2FpbnN0IHRoZSBoYXNoZXMgb24gdGhlIGJsb2NrY2hhaW4uIFdpdGhvdXRcbiAqIGJsaW5kaW5nLCBmb3Igc21hbGwgaW5wdXQgc2l6ZXMsIG90aGVyIHBhcnRpZXMgdGhhbiB0aGUgb25lIHJlY2VpdmluZyB0aGUgc2hhcmUgY291bGQgZ3Vlc3MgdGhlXG4gKiB2YWx1ZSBvZiB0aGUgc2hhcmUgYnkgdHJ5aW5nIGFsbCBwb3NzaWJsZSBoYXNoZXMuXG4gKi9cbnZhciBCbGluZGVkQmluYXJ5U2hhcmVzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdHMgYmxpbmRlZCBzaGFyZXMgZm9yIGEgbGlzdCBvZiBzaGFyZXMuIFRoZSBsaXN0IGNvbnRhaW5zIGEgYmxpbmRlZCBzaGFyZSBmb3IgZWFjaFxuICAgICAqIHJlY2VpdmluZyBwYXJ0eSBvZiB0aGUgc2VjcmV0IGlucHV0LlxuICAgICAqXG4gICAgICogQHBhcmFtIHNoYXJlcyB0aGUgYmxpbmRlZCBzaGFyZXNcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBCbGluZGVkQmluYXJ5U2hhcmVzKHNoYXJlcykge1xuICAgICAgICB0aGlzLnNoYXJlcyA9IHNoYXJlcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogSGFzaCBlYWNoIGJsaW5kZWQgc2hhcmUgaW4gb3JkZXIgdG8gY29uY2VhbCBpdHMgdmFsdWUuIFRoZSBoYXNoZXMgYXJlIHRoZW4gdXNlZCBhcyBjb21taXRtZW50c1xuICAgICAqIHRvIHRoZSB2YWx1ZXMgb2YgdGhlIHNoYXJlcy5cbiAgICAgKlxuICAgICAqIEByZXR1cm4gU2hhcmVDb21taXRtZW50cyBjcmVhdGVkIGZyb20gdGhlIGhhc2hlcyBvZiB0aGUgYmxpbmRlZCBzaGFyZXNcbiAgICAgKi9cbiAgICBCbGluZGVkQmluYXJ5U2hhcmVzLnByb3RvdHlwZS5oYXNoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgY29tbWl0bWVudHMgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IHRoaXMuc2hhcmVzOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgdmFyIGJsaW5kZWRTaGFyZSA9IF9hW19pXTtcbiAgICAgICAgICAgIHZhciBjb21taXRtZW50ID0gQ3J5cHRvVXRpbHNfMS5DcnlwdG9VdGlscy5oYXNoQnVmZmVyKGJsaW5kZWRTaGFyZSk7XG4gICAgICAgICAgICBjb21taXRtZW50cy5wdXNoKGNvbW1pdG1lbnQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgU2hhcmVDb21taXRtZW50c18xLlNoYXJlQ29tbWl0bWVudHMoY29tbWl0bWVudHMpO1xuICAgIH07XG4gICAgcmV0dXJuIEJsaW5kZWRCaW5hcnlTaGFyZXM7XG59KCkpO1xuZXhwb3J0cy5CbGluZGVkQmluYXJ5U2hhcmVzID0gQmxpbmRlZEJpbmFyeVNoYXJlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJsaW5kZWRCaW5hcnlTaGFyZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/BlindedBinaryShares.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/Blindings.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/Blindings.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Blindings = void 0;\n/**\n * Blindings are random bytes which conceals the value of a secret share, when hashed alongside the\n * share.\n */\nvar Blindings = /** @class */ (function () {\n    function Blindings(blindings) {\n        this.blindings = blindings;\n    }\n    /**\n     * Generates blindings for a number of engines using a random number generator. Each blinding is\n     * used to blind the value of one secret share.\n     *\n     * @param numOfEngines the number of engines to generate blindings for\n     * @param rng random number generator used to generate random bytes\n     * @return the generated blindings\n     */\n    Blindings.generate = function (numOfEngines, rng) {\n        var generatedBlindings = [];\n        for (var i = 0; i < numOfEngines; i++) {\n            generatedBlindings.push(rng(this.SIZE_OF_BLINDING));\n        }\n        return new Blindings(generatedBlindings);\n    };\n    /** Size of the blinding in bytes. */\n    Blindings.SIZE_OF_BLINDING = 32;\n    return Blindings;\n}());\nexports.Blindings = Blindings;\n//# sourceMappingURL=Blindings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi9CbGluZGluZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixrQkFBa0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi9CbGluZGluZ3MuanM/ZDBjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxpbmRpbmdzID0gdm9pZCAwO1xuLyoqXG4gKiBCbGluZGluZ3MgYXJlIHJhbmRvbSBieXRlcyB3aGljaCBjb25jZWFscyB0aGUgdmFsdWUgb2YgYSBzZWNyZXQgc2hhcmUsIHdoZW4gaGFzaGVkIGFsb25nc2lkZSB0aGVcbiAqIHNoYXJlLlxuICovXG52YXIgQmxpbmRpbmdzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJsaW5kaW5ncyhibGluZGluZ3MpIHtcbiAgICAgICAgdGhpcy5ibGluZGluZ3MgPSBibGluZGluZ3M7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBibGluZGluZ3MgZm9yIGEgbnVtYmVyIG9mIGVuZ2luZXMgdXNpbmcgYSByYW5kb20gbnVtYmVyIGdlbmVyYXRvci4gRWFjaCBibGluZGluZyBpc1xuICAgICAqIHVzZWQgdG8gYmxpbmQgdGhlIHZhbHVlIG9mIG9uZSBzZWNyZXQgc2hhcmUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbnVtT2ZFbmdpbmVzIHRoZSBudW1iZXIgb2YgZW5naW5lcyB0byBnZW5lcmF0ZSBibGluZGluZ3MgZm9yXG4gICAgICogQHBhcmFtIHJuZyByYW5kb20gbnVtYmVyIGdlbmVyYXRvciB1c2VkIHRvIGdlbmVyYXRlIHJhbmRvbSBieXRlc1xuICAgICAqIEByZXR1cm4gdGhlIGdlbmVyYXRlZCBibGluZGluZ3NcbiAgICAgKi9cbiAgICBCbGluZGluZ3MuZ2VuZXJhdGUgPSBmdW5jdGlvbiAobnVtT2ZFbmdpbmVzLCBybmcpIHtcbiAgICAgICAgdmFyIGdlbmVyYXRlZEJsaW5kaW5ncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bU9mRW5naW5lczsgaSsrKSB7XG4gICAgICAgICAgICBnZW5lcmF0ZWRCbGluZGluZ3MucHVzaChybmcodGhpcy5TSVpFX09GX0JMSU5ESU5HKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBCbGluZGluZ3MoZ2VuZXJhdGVkQmxpbmRpbmdzKTtcbiAgICB9O1xuICAgIC8qKiBTaXplIG9mIHRoZSBibGluZGluZyBpbiBieXRlcy4gKi9cbiAgICBCbGluZGluZ3MuU0laRV9PRl9CTElORElORyA9IDMyO1xuICAgIHJldHVybiBCbGluZGluZ3M7XG59KCkpO1xuZXhwb3J0cy5CbGluZGluZ3MgPSBCbGluZGluZ3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CbGluZGluZ3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/Blindings.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/EncryptedShares.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/EncryptedShares.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.EncryptedShares = void 0;\n/**\n * Encrypted secret shares of binary data. The secret shares have been encrypted for each of the\n * parties (engines) that will receive them. The order of the encrypted shares match the order of\n * the engines.\n */\nvar EncryptedShares = /** @class */ (function () {\n    /**\n     * Constructs encrypted shares from a list of shares. The list contains an encrypted share for\n     * each receiving party of the secret input.\n     *\n     * @param shares the encrypted shares\n     */\n    function EncryptedShares(shares) {\n        this.shares = shares;\n    }\n    return EncryptedShares;\n}());\nexports.EncryptedShares = EncryptedShares;\n//# sourceMappingURL=EncryptedShares.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi9FbmNyeXB0ZWRTaGFyZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi96ay1jbGllbnQvdGFyZ2V0L21haW4vRW5jcnlwdGVkU2hhcmVzLmpzP2FkODQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVuY3J5cHRlZFNoYXJlcyA9IHZvaWQgMDtcbi8qKlxuICogRW5jcnlwdGVkIHNlY3JldCBzaGFyZXMgb2YgYmluYXJ5IGRhdGEuIFRoZSBzZWNyZXQgc2hhcmVzIGhhdmUgYmVlbiBlbmNyeXB0ZWQgZm9yIGVhY2ggb2YgdGhlXG4gKiBwYXJ0aWVzIChlbmdpbmVzKSB0aGF0IHdpbGwgcmVjZWl2ZSB0aGVtLiBUaGUgb3JkZXIgb2YgdGhlIGVuY3J5cHRlZCBzaGFyZXMgbWF0Y2ggdGhlIG9yZGVyIG9mXG4gKiB0aGUgZW5naW5lcy5cbiAqL1xudmFyIEVuY3J5cHRlZFNoYXJlcyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGVuY3J5cHRlZCBzaGFyZXMgZnJvbSBhIGxpc3Qgb2Ygc2hhcmVzLiBUaGUgbGlzdCBjb250YWlucyBhbiBlbmNyeXB0ZWQgc2hhcmUgZm9yXG4gICAgICogZWFjaCByZWNlaXZpbmcgcGFydHkgb2YgdGhlIHNlY3JldCBpbnB1dC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzaGFyZXMgdGhlIGVuY3J5cHRlZCBzaGFyZXNcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBFbmNyeXB0ZWRTaGFyZXMoc2hhcmVzKSB7XG4gICAgICAgIHRoaXMuc2hhcmVzID0gc2hhcmVzO1xuICAgIH1cbiAgICByZXR1cm4gRW5jcnlwdGVkU2hhcmVzO1xufSgpKTtcbmV4cG9ydHMuRW5jcnlwdGVkU2hhcmVzID0gRW5jcnlwdGVkU2hhcmVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RW5jcnlwdGVkU2hhcmVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/EncryptedShares.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/RealZkClient.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/RealZkClient.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RealZkClient = void 0;\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nvar CryptoUtils_1 = __webpack_require__(/*! ./util/CryptoUtils */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/CryptoUtils.js\");\nvar ZkRpcBuilder_1 = __webpack_require__(/*! ./ZkRpcBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/ZkRpcBuilder.js\");\nvar RealZkNodes_1 = __webpack_require__(/*! ./node/RealZkNodes */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/node/RealZkNodes.js\");\nvar RealZkClient = /** @class */ (function () {\n    function RealZkClient(zkContractAddress, realNodes, rng, blockchainClient) {\n        this.zkContractAddress = zkContractAddress;\n        this.realNodes = realNodes;\n        this.rng = rng;\n        this.blockchainClient = blockchainClient;\n    }\n    RealZkClient.prototype.getZkContractNodes = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(this.cachedZkContractNodes == null)) return [3 /*break*/, 2];\n                        _a = this;\n                        return [4 /*yield*/, this.realNodes.getNodes(this.zkContractAddress)];\n                    case 1:\n                        _a.cachedZkContractNodes = _b.sent();\n                        _b.label = 2;\n                    case 2: return [2 /*return*/, this.cachedZkContractNodes];\n                }\n            });\n        });\n    };\n    RealZkClient.create = function (contract, blockchainClient) {\n        var realNodes = RealZkNodes_1.RealZkNodes.create(blockchainClient);\n        return new RealZkClient(contract, realNodes, crypto_1.randomBytes, blockchainClient);\n    };\n    RealZkClient.createForTest = function (contract, blockchainClient, rng) {\n        return __awaiter(this, void 0, void 0, function () {\n            var realNodes;\n            return __generator(this, function (_a) {\n                realNodes = RealZkNodes_1.RealZkNodes.create(blockchainClient);\n                return [2 /*return*/, new RealZkClient(contract, realNodes, rng, blockchainClient)];\n            });\n        });\n    };\n    RealZkClient.prototype.buildOnChainInputTransaction = function (sender, secretInput, publicRpc) {\n        return __awaiter(this, void 0, void 0, function () {\n            var publicKeysOfNodes, key, rpc;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getZkContractNodes()];\n                    case 1:\n                        publicKeysOfNodes = (_a.sent()).getPublicKeysOfNodes();\n                        key = CryptoUtils_1.CryptoUtils.generateKeyPair();\n                        rpc = ZkRpcBuilder_1.ZkRpcBuilder.zkInputOnChain(sender, secretInput, publicRpc, publicKeysOfNodes, key);\n                        return [2 /*return*/, { address: this.zkContractAddress, rpc: rpc }];\n                }\n            });\n        });\n    };\n    RealZkClient.prototype.buildOffChainInputTransaction = function (secretInput, publicRpc) {\n        var offChainInputRpc = ZkRpcBuilder_1.ZkRpcBuilder.zkInputOffChain(secretInput, publicRpc, this.rng);\n        var transaction = {\n            address: this.zkContractAddress,\n            rpc: offChainInputRpc.rpc,\n        };\n        return { blindedShares: offChainInputRpc.blindedShares, transaction: transaction };\n    };\n    RealZkClient.prototype.sendOffChainInputToNodes = function (zkContract, sender, onChainTransaction, shares) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getZkContractNodes()];\n                    case 1: return [2 /*return*/, (_a.sent()).sendSharesToNodes(onChainTransaction, sender, shares)];\n                }\n            });\n        });\n    };\n    RealZkClient.prototype.fetchSecretVariable = function (owner, variableId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var zkContractNodes, secretShares;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getZkContractNodes()];\n                    case 1:\n                        zkContractNodes = _a.sent();\n                        return [4 /*yield*/, zkContractNodes.fetchSharesFromNodes(owner, variableId)];\n                    case 2:\n                        secretShares = _a.sent();\n                        return [2 /*return*/, secretShares.reconstructSecret()];\n                }\n            });\n        });\n    };\n    RealZkClient.prototype.getAttestationWithSignatures = function (contractAddress, attestationId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var zkContract, attestations, i, element;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.blockchainClient.getContractState(contractAddress)];\n                    case 1:\n                        zkContract = _a.sent();\n                        if (zkContract === undefined) {\n                            throw new Error(\"Couldn't get contract data\");\n                        }\n                        attestations = zkContract.serializedContract.attestations;\n                        for (i = 0; i < attestations.length; i++) {\n                            element = attestations[i];\n                            if (element.key == attestationId) {\n                                return [2 /*return*/, {\n                                        data: Buffer.from(element.value.data.data, \"base64\"),\n                                        signatures: element.value.signatures,\n                                    }];\n                            }\n                        }\n                        throw new Error(\"Unable to get signatures for the attestation with id \" + attestationId);\n                }\n            });\n        });\n    };\n    return RealZkClient;\n}());\nexports.RealZkClient = RealZkClient;\n//# sourceMappingURL=RealZkClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/RealZkClient.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/ShareCommitments.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/ShareCommitments.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ShareCommitments = void 0;\n/**\n * Share commitments are hashes of blinded shares, used to commit to the values of said shares, by\n * putting the hashes on the blockchain.\n */\nvar ShareCommitments = /** @class */ (function () {\n    /**\n     * Constructs ShareCommitments from a list of hashes.\n     *\n     * @param blindedHashedShares hashes of the blinded shares to commit to\n     */\n    function ShareCommitments(blindedHashedShares) {\n        this.blindedHashedShares = blindedHashedShares;\n    }\n    /**\n     * Serializes each blinded hashed share.\n     *\n     * @return the serialized share commitments\n     */\n    ShareCommitments.prototype.serialize = function () {\n        return Buffer.concat(this.blindedHashedShares);\n    };\n    return ShareCommitments;\n}());\nexports.ShareCommitments = ShareCommitments;\n//# sourceMappingURL=ShareCommitments.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi9TaGFyZUNvbW1pdG1lbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vemstY2xpZW50L3RhcmdldC9tYWluL1NoYXJlQ29tbWl0bWVudHMuanM/OWQxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2hhcmVDb21taXRtZW50cyA9IHZvaWQgMDtcbi8qKlxuICogU2hhcmUgY29tbWl0bWVudHMgYXJlIGhhc2hlcyBvZiBibGluZGVkIHNoYXJlcywgdXNlZCB0byBjb21taXQgdG8gdGhlIHZhbHVlcyBvZiBzYWlkIHNoYXJlcywgYnlcbiAqIHB1dHRpbmcgdGhlIGhhc2hlcyBvbiB0aGUgYmxvY2tjaGFpbi5cbiAqL1xudmFyIFNoYXJlQ29tbWl0bWVudHMgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBTaGFyZUNvbW1pdG1lbnRzIGZyb20gYSBsaXN0IG9mIGhhc2hlcy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBibGluZGVkSGFzaGVkU2hhcmVzIGhhc2hlcyBvZiB0aGUgYmxpbmRlZCBzaGFyZXMgdG8gY29tbWl0IHRvXG4gICAgICovXG4gICAgZnVuY3Rpb24gU2hhcmVDb21taXRtZW50cyhibGluZGVkSGFzaGVkU2hhcmVzKSB7XG4gICAgICAgIHRoaXMuYmxpbmRlZEhhc2hlZFNoYXJlcyA9IGJsaW5kZWRIYXNoZWRTaGFyZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNlcmlhbGl6ZXMgZWFjaCBibGluZGVkIGhhc2hlZCBzaGFyZS5cbiAgICAgKlxuICAgICAqIEByZXR1cm4gdGhlIHNlcmlhbGl6ZWQgc2hhcmUgY29tbWl0bWVudHNcbiAgICAgKi9cbiAgICBTaGFyZUNvbW1pdG1lbnRzLnByb3RvdHlwZS5zZXJpYWxpemUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBCdWZmZXIuY29uY2F0KHRoaXMuYmxpbmRlZEhhc2hlZFNoYXJlcyk7XG4gICAgfTtcbiAgICByZXR1cm4gU2hhcmVDb21taXRtZW50cztcbn0oKSk7XG5leHBvcnRzLlNoYXJlQ29tbWl0bWVudHMgPSBTaGFyZUNvbW1pdG1lbnRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2hhcmVDb21taXRtZW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/ShareCommitments.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/ZkRpcBuilder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/ZkRpcBuilder.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ZkRpcBuilder = void 0;\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nvar bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nvar CryptoUtils_1 = __webpack_require__(/*! ./util/CryptoUtils */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/CryptoUtils.js\");\nvar BinarySecretShares_1 = __webpack_require__(/*! ./BinarySecretShares */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/BinarySecretShares.js\");\nvar ZERO_KNOWLEDGE_INPUT_OFF_CHAIN = 0x04;\nvar ZERO_KNOWLEDGE_INPUT_ON_CHAIN = 0x05;\n/**\n * Build the rpc for inputting secret binary data on-chain to a ZK contract, using a supplied key\n * pair and random number generator.\n *\n * @param sender the sender of the input, which is encrypted along with the input data\n * @param secretInput the binary input to create rpc from\n * @param additionalRpc additional rpc to send along with transaction. Must as a minimum include\n *     the zk input shortname\n * @param engineKeys the public keys of the ZK engines associated with the ZK contract\n * @param encryptionKey the key pair used for encrypting the secret\n * @param rng randomness generator used when generating shares of the secret\n * @return the rpc\n */\nfunction zkInputOnChain(sender, secretInput, additionalRpc, engineKeys, encryptionKey, rng) {\n    var actualEncryptionKey = encryptionKey !== null && encryptionKey !== void 0 ? encryptionKey : CryptoUtils_1.CryptoUtils.generateKeyPair();\n    var actualRng = rng !== null && rng !== void 0 ? rng : crypto_1.randomBytes;\n    var secretShares = BinarySecretShares_1.BinarySecretShares.create(secretInput, actualRng);\n    var encryptedShares = secretShares.encrypt(actualEncryptionKey, sender, engineKeys);\n    var concatenatedEncryptedShares = Buffer.concat(encryptedShares.shares);\n    return bitmanipulation_ts_1.BigEndianByteOutput.serialize(function (out) {\n        out.writeU8(ZERO_KNOWLEDGE_INPUT_ON_CHAIN);\n        var bitLengths = [secretInput.length];\n        out.writeI32(bitLengths.length);\n        for (var _i = 0, bitLengths_1 = bitLengths; _i < bitLengths_1.length; _i++) {\n            var bitLength = bitLengths_1[_i];\n            out.writeI32(bitLength);\n        }\n        out.writeBytes(Buffer.from(actualEncryptionKey.getPublic().encodeCompressed()));\n        out.writeI32(concatenatedEncryptedShares.length);\n        out.writeBytes(concatenatedEncryptedShares);\n        out.writeBytes(additionalRpc);\n    });\n}\n/**\n * Build the rpc for inputting secret binary data on-chain to a ZK contract, using a supplied\n * random number generator.\n *\n * @param secretInput the binary input to create rpc from\n * @param additionalRpc additional rpc to send along with transaction. Must as a minimum include\n *     the zk input shortname\n * @param rng randomness generator used when generating shares of the secret, as well as blindings\n * @return off-chain input consisting of an rpc to be sent to the real wasm binder and blinded\n *     shares to be sent to ZK nodes associated with the contract\n */\nfunction zkInputOffChain(secretInput, additionalRpc, rng) {\n    var actualRng = rng !== null && rng !== void 0 ? rng : crypto_1.randomBytes;\n    var secretShares = BinarySecretShares_1.BinarySecretShares.create(secretInput, actualRng);\n    var blindedShares = secretShares.applyBlinding(actualRng);\n    var shareCommitments = blindedShares.hash();\n    var rpc = bitmanipulation_ts_1.BigEndianByteOutput.serialize(function (out) {\n        out.writeU8(ZERO_KNOWLEDGE_INPUT_OFF_CHAIN);\n        var bitLengths = [secretInput.length];\n        out.writeI32(bitLengths.length);\n        for (var _i = 0, bitLengths_2 = bitLengths; _i < bitLengths_2.length; _i++) {\n            var bitLength = bitLengths_2[_i];\n            out.writeI32(bitLength);\n        }\n        out.writeBytes(shareCommitments.serialize());\n        out.writeBytes(additionalRpc);\n    });\n    return { blindedShares: blindedShares, rpc: rpc };\n}\nexports.ZkRpcBuilder = {\n    zkInputOnChain: zkInputOnChain,\n    zkInputOffChain: zkInputOffChain,\n};\n//# sourceMappingURL=ZkRpcBuilder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi9aa1JwY0J1aWxkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGVBQWUsbUJBQU8sQ0FBQyxzQkFBUTtBQUMvQiwyQkFBMkIsbUJBQU8sQ0FBQyxpSUFBbUM7QUFDdEUsb0JBQW9CLG1CQUFPLENBQUMseUhBQW9CO0FBQ2hELDJCQUEyQixtQkFBTyxDQUFDLDZIQUFzQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCwwQkFBMEI7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELDBCQUEwQjtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGFBQWE7QUFDYjtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi96ay1jbGllbnQvdGFyZ2V0L21haW4vWmtScGNCdWlsZGVyLmpzP2EwNWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlprUnBjQnVpbGRlciA9IHZvaWQgMDtcbnZhciBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG52YXIgYml0bWFuaXB1bGF0aW9uX3RzXzEgPSByZXF1aXJlKFwiQHNlY2F0YS1wdWJsaWMvYml0bWFuaXB1bGF0aW9uLXRzXCIpO1xudmFyIENyeXB0b1V0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsL0NyeXB0b1V0aWxzXCIpO1xudmFyIEJpbmFyeVNlY3JldFNoYXJlc18xID0gcmVxdWlyZShcIi4vQmluYXJ5U2VjcmV0U2hhcmVzXCIpO1xudmFyIFpFUk9fS05PV0xFREdFX0lOUFVUX09GRl9DSEFJTiA9IDB4MDQ7XG52YXIgWkVST19LTk9XTEVER0VfSU5QVVRfT05fQ0hBSU4gPSAweDA1O1xuLyoqXG4gKiBCdWlsZCB0aGUgcnBjIGZvciBpbnB1dHRpbmcgc2VjcmV0IGJpbmFyeSBkYXRhIG9uLWNoYWluIHRvIGEgWksgY29udHJhY3QsIHVzaW5nIGEgc3VwcGxpZWQga2V5XG4gKiBwYWlyIGFuZCByYW5kb20gbnVtYmVyIGdlbmVyYXRvci5cbiAqXG4gKiBAcGFyYW0gc2VuZGVyIHRoZSBzZW5kZXIgb2YgdGhlIGlucHV0LCB3aGljaCBpcyBlbmNyeXB0ZWQgYWxvbmcgd2l0aCB0aGUgaW5wdXQgZGF0YVxuICogQHBhcmFtIHNlY3JldElucHV0IHRoZSBiaW5hcnkgaW5wdXQgdG8gY3JlYXRlIHJwYyBmcm9tXG4gKiBAcGFyYW0gYWRkaXRpb25hbFJwYyBhZGRpdGlvbmFsIHJwYyB0byBzZW5kIGFsb25nIHdpdGggdHJhbnNhY3Rpb24uIE11c3QgYXMgYSBtaW5pbXVtIGluY2x1ZGVcbiAqICAgICB0aGUgemsgaW5wdXQgc2hvcnRuYW1lXG4gKiBAcGFyYW0gZW5naW5lS2V5cyB0aGUgcHVibGljIGtleXMgb2YgdGhlIFpLIGVuZ2luZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBaSyBjb250cmFjdFxuICogQHBhcmFtIGVuY3J5cHRpb25LZXkgdGhlIGtleSBwYWlyIHVzZWQgZm9yIGVuY3J5cHRpbmcgdGhlIHNlY3JldFxuICogQHBhcmFtIHJuZyByYW5kb21uZXNzIGdlbmVyYXRvciB1c2VkIHdoZW4gZ2VuZXJhdGluZyBzaGFyZXMgb2YgdGhlIHNlY3JldFxuICogQHJldHVybiB0aGUgcnBjXG4gKi9cbmZ1bmN0aW9uIHprSW5wdXRPbkNoYWluKHNlbmRlciwgc2VjcmV0SW5wdXQsIGFkZGl0aW9uYWxScGMsIGVuZ2luZUtleXMsIGVuY3J5cHRpb25LZXksIHJuZykge1xuICAgIHZhciBhY3R1YWxFbmNyeXB0aW9uS2V5ID0gZW5jcnlwdGlvbktleSAhPT0gbnVsbCAmJiBlbmNyeXB0aW9uS2V5ICE9PSB2b2lkIDAgPyBlbmNyeXB0aW9uS2V5IDogQ3J5cHRvVXRpbHNfMS5DcnlwdG9VdGlscy5nZW5lcmF0ZUtleVBhaXIoKTtcbiAgICB2YXIgYWN0dWFsUm5nID0gcm5nICE9PSBudWxsICYmIHJuZyAhPT0gdm9pZCAwID8gcm5nIDogY3J5cHRvXzEucmFuZG9tQnl0ZXM7XG4gICAgdmFyIHNlY3JldFNoYXJlcyA9IEJpbmFyeVNlY3JldFNoYXJlc18xLkJpbmFyeVNlY3JldFNoYXJlcy5jcmVhdGUoc2VjcmV0SW5wdXQsIGFjdHVhbFJuZyk7XG4gICAgdmFyIGVuY3J5cHRlZFNoYXJlcyA9IHNlY3JldFNoYXJlcy5lbmNyeXB0KGFjdHVhbEVuY3J5cHRpb25LZXksIHNlbmRlciwgZW5naW5lS2V5cyk7XG4gICAgdmFyIGNvbmNhdGVuYXRlZEVuY3J5cHRlZFNoYXJlcyA9IEJ1ZmZlci5jb25jYXQoZW5jcnlwdGVkU2hhcmVzLnNoYXJlcyk7XG4gICAgcmV0dXJuIGJpdG1hbmlwdWxhdGlvbl90c18xLkJpZ0VuZGlhbkJ5dGVPdXRwdXQuc2VyaWFsaXplKGZ1bmN0aW9uIChvdXQpIHtcbiAgICAgICAgb3V0LndyaXRlVTgoWkVST19LTk9XTEVER0VfSU5QVVRfT05fQ0hBSU4pO1xuICAgICAgICB2YXIgYml0TGVuZ3RocyA9IFtzZWNyZXRJbnB1dC5sZW5ndGhdO1xuICAgICAgICBvdXQud3JpdGVJMzIoYml0TGVuZ3Rocy5sZW5ndGgpO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIGJpdExlbmd0aHNfMSA9IGJpdExlbmd0aHM7IF9pIDwgYml0TGVuZ3Roc18xLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgdmFyIGJpdExlbmd0aCA9IGJpdExlbmd0aHNfMVtfaV07XG4gICAgICAgICAgICBvdXQud3JpdGVJMzIoYml0TGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICBvdXQud3JpdGVCeXRlcyhCdWZmZXIuZnJvbShhY3R1YWxFbmNyeXB0aW9uS2V5LmdldFB1YmxpYygpLmVuY29kZUNvbXByZXNzZWQoKSkpO1xuICAgICAgICBvdXQud3JpdGVJMzIoY29uY2F0ZW5hdGVkRW5jcnlwdGVkU2hhcmVzLmxlbmd0aCk7XG4gICAgICAgIG91dC53cml0ZUJ5dGVzKGNvbmNhdGVuYXRlZEVuY3J5cHRlZFNoYXJlcyk7XG4gICAgICAgIG91dC53cml0ZUJ5dGVzKGFkZGl0aW9uYWxScGMpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBCdWlsZCB0aGUgcnBjIGZvciBpbnB1dHRpbmcgc2VjcmV0IGJpbmFyeSBkYXRhIG9uLWNoYWluIHRvIGEgWksgY29udHJhY3QsIHVzaW5nIGEgc3VwcGxpZWRcbiAqIHJhbmRvbSBudW1iZXIgZ2VuZXJhdG9yLlxuICpcbiAqIEBwYXJhbSBzZWNyZXRJbnB1dCB0aGUgYmluYXJ5IGlucHV0IHRvIGNyZWF0ZSBycGMgZnJvbVxuICogQHBhcmFtIGFkZGl0aW9uYWxScGMgYWRkaXRpb25hbCBycGMgdG8gc2VuZCBhbG9uZyB3aXRoIHRyYW5zYWN0aW9uLiBNdXN0IGFzIGEgbWluaW11bSBpbmNsdWRlXG4gKiAgICAgdGhlIHprIGlucHV0IHNob3J0bmFtZVxuICogQHBhcmFtIHJuZyByYW5kb21uZXNzIGdlbmVyYXRvciB1c2VkIHdoZW4gZ2VuZXJhdGluZyBzaGFyZXMgb2YgdGhlIHNlY3JldCwgYXMgd2VsbCBhcyBibGluZGluZ3NcbiAqIEByZXR1cm4gb2ZmLWNoYWluIGlucHV0IGNvbnNpc3Rpbmcgb2YgYW4gcnBjIHRvIGJlIHNlbnQgdG8gdGhlIHJlYWwgd2FzbSBiaW5kZXIgYW5kIGJsaW5kZWRcbiAqICAgICBzaGFyZXMgdG8gYmUgc2VudCB0byBaSyBub2RlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGNvbnRyYWN0XG4gKi9cbmZ1bmN0aW9uIHprSW5wdXRPZmZDaGFpbihzZWNyZXRJbnB1dCwgYWRkaXRpb25hbFJwYywgcm5nKSB7XG4gICAgdmFyIGFjdHVhbFJuZyA9IHJuZyAhPT0gbnVsbCAmJiBybmcgIT09IHZvaWQgMCA/IHJuZyA6IGNyeXB0b18xLnJhbmRvbUJ5dGVzO1xuICAgIHZhciBzZWNyZXRTaGFyZXMgPSBCaW5hcnlTZWNyZXRTaGFyZXNfMS5CaW5hcnlTZWNyZXRTaGFyZXMuY3JlYXRlKHNlY3JldElucHV0LCBhY3R1YWxSbmcpO1xuICAgIHZhciBibGluZGVkU2hhcmVzID0gc2VjcmV0U2hhcmVzLmFwcGx5QmxpbmRpbmcoYWN0dWFsUm5nKTtcbiAgICB2YXIgc2hhcmVDb21taXRtZW50cyA9IGJsaW5kZWRTaGFyZXMuaGFzaCgpO1xuICAgIHZhciBycGMgPSBiaXRtYW5pcHVsYXRpb25fdHNfMS5CaWdFbmRpYW5CeXRlT3V0cHV0LnNlcmlhbGl6ZShmdW5jdGlvbiAob3V0KSB7XG4gICAgICAgIG91dC53cml0ZVU4KFpFUk9fS05PV0xFREdFX0lOUFVUX09GRl9DSEFJTik7XG4gICAgICAgIHZhciBiaXRMZW5ndGhzID0gW3NlY3JldElucHV0Lmxlbmd0aF07XG4gICAgICAgIG91dC53cml0ZUkzMihiaXRMZW5ndGhzLmxlbmd0aCk7XG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgYml0TGVuZ3Roc18yID0gYml0TGVuZ3RoczsgX2kgPCBiaXRMZW5ndGhzXzIubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgYml0TGVuZ3RoID0gYml0TGVuZ3Roc18yW19pXTtcbiAgICAgICAgICAgIG91dC53cml0ZUkzMihiaXRMZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIG91dC53cml0ZUJ5dGVzKHNoYXJlQ29tbWl0bWVudHMuc2VyaWFsaXplKCkpO1xuICAgICAgICBvdXQud3JpdGVCeXRlcyhhZGRpdGlvbmFsUnBjKTtcbiAgICB9KTtcbiAgICByZXR1cm4geyBibGluZGVkU2hhcmVzOiBibGluZGVkU2hhcmVzLCBycGM6IHJwYyB9O1xufVxuZXhwb3J0cy5aa1JwY0J1aWxkZXIgPSB7XG4gICAgemtJbnB1dE9uQ2hhaW46IHprSW5wdXRPbkNoYWluLFxuICAgIHprSW5wdXRPZmZDaGFpbjogemtJbnB1dE9mZkNoYWluLFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVprUnBjQnVpbGRlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/ZkRpcBuilder.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SignatureProviderKeyPair = exports.Client = exports.RealZkClient = exports.BlindedBinaryShares = exports.CryptoUtils = exports.BlockchainPublicKey = exports.ZkRpcBuilder = exports.BinarySecretShares = exports.Polynomial = exports.Lagrange = exports.BinaryExtensionFieldElement = void 0;\nvar BinaryExtensionFieldElement_1 = __webpack_require__(/*! ./util/BinaryExtensionFieldElement */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/BinaryExtensionFieldElement.js\");\nObject.defineProperty(exports, \"BinaryExtensionFieldElement\", ({ enumerable: true, get: function () { return BinaryExtensionFieldElement_1.BinaryExtensionFieldElement; } }));\nvar Lagrange_1 = __webpack_require__(/*! ./util/Lagrange */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Lagrange.js\");\nObject.defineProperty(exports, \"Lagrange\", ({ enumerable: true, get: function () { return Lagrange_1.Lagrange; } }));\nvar Polynomial_1 = __webpack_require__(/*! ./util/Polynomial */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Polynomial.js\");\nObject.defineProperty(exports, \"Polynomial\", ({ enumerable: true, get: function () { return Polynomial_1.Polynomial; } }));\nvar BinarySecretShares_1 = __webpack_require__(/*! ./BinarySecretShares */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/BinarySecretShares.js\");\nObject.defineProperty(exports, \"BinarySecretShares\", ({ enumerable: true, get: function () { return BinarySecretShares_1.BinarySecretShares; } }));\nvar ZkRpcBuilder_1 = __webpack_require__(/*! ./ZkRpcBuilder */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/ZkRpcBuilder.js\");\nObject.defineProperty(exports, \"ZkRpcBuilder\", ({ enumerable: true, get: function () { return ZkRpcBuilder_1.ZkRpcBuilder; } }));\nvar BlockchainPublicKey_1 = __webpack_require__(/*! ./util/BlockchainPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/BlockchainPublicKey.js\");\nObject.defineProperty(exports, \"BlockchainPublicKey\", ({ enumerable: true, get: function () { return BlockchainPublicKey_1.BlockchainPublicKey; } }));\nvar CryptoUtils_1 = __webpack_require__(/*! ./util/CryptoUtils */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/CryptoUtils.js\");\nObject.defineProperty(exports, \"CryptoUtils\", ({ enumerable: true, get: function () { return CryptoUtils_1.CryptoUtils; } }));\nvar BlindedBinaryShares_1 = __webpack_require__(/*! ./BlindedBinaryShares */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/BlindedBinaryShares.js\");\nObject.defineProperty(exports, \"BlindedBinaryShares\", ({ enumerable: true, get: function () { return BlindedBinaryShares_1.BlindedBinaryShares; } }));\nvar RealZkClient_1 = __webpack_require__(/*! ./RealZkClient */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/RealZkClient.js\");\nObject.defineProperty(exports, \"RealZkClient\", ({ enumerable: true, get: function () { return RealZkClient_1.RealZkClient; } }));\nvar Client_1 = __webpack_require__(/*! ./util/Client */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Client.js\");\nObject.defineProperty(exports, \"Client\", ({ enumerable: true, get: function () { return Client_1.Client; } }));\nvar SignatureProviderKeyPair_1 = __webpack_require__(/*! ./util/SignatureProviderKeyPair */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/SignatureProviderKeyPair.js\");\nObject.defineProperty(exports, \"SignatureProviderKeyPair\", ({ enumerable: true, get: function () { return SignatureProviderKeyPair_1.SignatureProviderKeyPair; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0MsR0FBRyxjQUFjLEdBQUcsb0JBQW9CLEdBQUcsMkJBQTJCLEdBQUcsbUJBQW1CLEdBQUcsMkJBQTJCLEdBQUcsb0JBQW9CLEdBQUcsMEJBQTBCLEdBQUcsa0JBQWtCLEdBQUcsZ0JBQWdCLEdBQUcsbUNBQW1DO0FBQzVSLG9DQUFvQyxtQkFBTyxDQUFDLHlKQUFvQztBQUNoRiwrREFBOEQsRUFBRSxxQ0FBcUMscUVBQXFFLEVBQUM7QUFDM0ssaUJBQWlCLG1CQUFPLENBQUMsbUhBQWlCO0FBQzFDLDRDQUEyQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNsSCxtQkFBbUIsbUJBQU8sQ0FBQyx1SEFBbUI7QUFDOUMsOENBQTZDLEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDO0FBQ3hILDJCQUEyQixtQkFBTyxDQUFDLDZIQUFzQjtBQUN6RCxzREFBcUQsRUFBRSxxQ0FBcUMsbURBQW1ELEVBQUM7QUFDaEoscUJBQXFCLG1CQUFPLENBQUMsaUhBQWdCO0FBQzdDLGdEQUErQyxFQUFFLHFDQUFxQyx1Q0FBdUMsRUFBQztBQUM5SCw0QkFBNEIsbUJBQU8sQ0FBQyx5SUFBNEI7QUFDaEUsdURBQXNELEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQ25KLG9CQUFvQixtQkFBTyxDQUFDLHlIQUFvQjtBQUNoRCwrQ0FBOEMsRUFBRSxxQ0FBcUMscUNBQXFDLEVBQUM7QUFDM0gsNEJBQTRCLG1CQUFPLENBQUMsK0hBQXVCO0FBQzNELHVEQUFzRCxFQUFFLHFDQUFxQyxxREFBcUQsRUFBQztBQUNuSixxQkFBcUIsbUJBQU8sQ0FBQyxpSEFBZ0I7QUFDN0MsZ0RBQStDLEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQzlILGVBQWUsbUJBQU8sQ0FBQywrR0FBZTtBQUN0QywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUM7QUFDNUcsaUNBQWlDLG1CQUFPLENBQUMsbUpBQWlDO0FBQzFFLDREQUEyRCxFQUFFLHFDQUFxQywrREFBK0QsRUFBQztBQUNsSyIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi96ay1jbGllbnQvdGFyZ2V0L21haW4vaW5kZXguanM/MTQwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmF0dXJlUHJvdmlkZXJLZXlQYWlyID0gZXhwb3J0cy5DbGllbnQgPSBleHBvcnRzLlJlYWxaa0NsaWVudCA9IGV4cG9ydHMuQmxpbmRlZEJpbmFyeVNoYXJlcyA9IGV4cG9ydHMuQ3J5cHRvVXRpbHMgPSBleHBvcnRzLkJsb2NrY2hhaW5QdWJsaWNLZXkgPSBleHBvcnRzLlprUnBjQnVpbGRlciA9IGV4cG9ydHMuQmluYXJ5U2VjcmV0U2hhcmVzID0gZXhwb3J0cy5Qb2x5bm9taWFsID0gZXhwb3J0cy5MYWdyYW5nZSA9IGV4cG9ydHMuQmluYXJ5RXh0ZW5zaW9uRmllbGRFbGVtZW50ID0gdm9pZCAwO1xudmFyIEJpbmFyeUV4dGVuc2lvbkZpZWxkRWxlbWVudF8xID0gcmVxdWlyZShcIi4vdXRpbC9CaW5hcnlFeHRlbnNpb25GaWVsZEVsZW1lbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCaW5hcnlFeHRlbnNpb25GaWVsZEVsZW1lbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJpbmFyeUV4dGVuc2lvbkZpZWxkRWxlbWVudF8xLkJpbmFyeUV4dGVuc2lvbkZpZWxkRWxlbWVudDsgfSB9KTtcbnZhciBMYWdyYW5nZV8xID0gcmVxdWlyZShcIi4vdXRpbC9MYWdyYW5nZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxhZ3JhbmdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBMYWdyYW5nZV8xLkxhZ3JhbmdlOyB9IH0pO1xudmFyIFBvbHlub21pYWxfMSA9IHJlcXVpcmUoXCIuL3V0aWwvUG9seW5vbWlhbFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlBvbHlub21pYWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFBvbHlub21pYWxfMS5Qb2x5bm9taWFsOyB9IH0pO1xudmFyIEJpbmFyeVNlY3JldFNoYXJlc18xID0gcmVxdWlyZShcIi4vQmluYXJ5U2VjcmV0U2hhcmVzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQmluYXJ5U2VjcmV0U2hhcmVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCaW5hcnlTZWNyZXRTaGFyZXNfMS5CaW5hcnlTZWNyZXRTaGFyZXM7IH0gfSk7XG52YXIgWmtScGNCdWlsZGVyXzEgPSByZXF1aXJlKFwiLi9aa1JwY0J1aWxkZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJaa1JwY0J1aWxkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFprUnBjQnVpbGRlcl8xLlprUnBjQnVpbGRlcjsgfSB9KTtcbnZhciBCbG9ja2NoYWluUHVibGljS2V5XzEgPSByZXF1aXJlKFwiLi91dGlsL0Jsb2NrY2hhaW5QdWJsaWNLZXlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCbG9ja2NoYWluUHVibGljS2V5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCbG9ja2NoYWluUHVibGljS2V5XzEuQmxvY2tjaGFpblB1YmxpY0tleTsgfSB9KTtcbnZhciBDcnlwdG9VdGlsc18xID0gcmVxdWlyZShcIi4vdXRpbC9DcnlwdG9VdGlsc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNyeXB0b1V0aWxzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDcnlwdG9VdGlsc18xLkNyeXB0b1V0aWxzOyB9IH0pO1xudmFyIEJsaW5kZWRCaW5hcnlTaGFyZXNfMSA9IHJlcXVpcmUoXCIuL0JsaW5kZWRCaW5hcnlTaGFyZXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCbGluZGVkQmluYXJ5U2hhcmVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCbGluZGVkQmluYXJ5U2hhcmVzXzEuQmxpbmRlZEJpbmFyeVNoYXJlczsgfSB9KTtcbnZhciBSZWFsWmtDbGllbnRfMSA9IHJlcXVpcmUoXCIuL1JlYWxaa0NsaWVudFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlYWxaa0NsaWVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVhbFprQ2xpZW50XzEuUmVhbFprQ2xpZW50OyB9IH0pO1xudmFyIENsaWVudF8xID0gcmVxdWlyZShcIi4vdXRpbC9DbGllbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIENsaWVudF8xLkNsaWVudDsgfSB9KTtcbnZhciBTaWduYXR1cmVQcm92aWRlcktleVBhaXJfMSA9IHJlcXVpcmUoXCIuL3V0aWwvU2lnbmF0dXJlUHJvdmlkZXJLZXlQYWlyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2lnbmF0dXJlUHJvdmlkZXJLZXlQYWlyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBTaWduYXR1cmVQcm92aWRlcktleVBhaXJfMS5TaWduYXR1cmVQcm92aWRlcktleVBhaXI7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/node/RealContractNode.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/node/RealContractNode.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RealContractNode = void 0;\nvar BlockchainPublicKey_1 = __webpack_require__(/*! ../util/BlockchainPublicKey */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/BlockchainPublicKey.js\");\nvar bitmanipulation_ts_1 = __webpack_require__(/*! @secata-public/bitmanipulation-ts */ \"(action-browser)/./node_modules/@secata-public/bitmanipulation-ts/target/main/index.js\");\nvar Api_1 = __webpack_require__(/*! ../util/Api */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Api.js\");\nvar RealContractNode = /** @class */ (function () {\n    function RealContractNode(contract, nodeAddress, publicKey, restInterface) {\n        this.contract = contract;\n        this.identity = nodeAddress;\n        this.publicKey = publicKey;\n        this.restInterface = restInterface;\n    }\n    RealContractNode.prototype.fetchSharesFromNode = function (signedMessage, variableId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var url, response;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        url = this.outputUrl(variableId);\n                        return [4 /*yield*/, (0, Api_1.postRequest)(url, createSignatureDto(signedMessage.toString(\"base64\")))];\n                    case 1:\n                        response = _a.sent();\n                        if (response === undefined) {\n                            throw new Error(\"Result when fetching shares is undefined\");\n                        }\n                        return [2 /*return*/, Buffer.from(response.data, \"base64\")];\n                }\n            });\n        });\n    };\n    RealContractNode.prototype.getPublicKey = function () {\n        var val = Buffer.from(this.publicKey, \"base64\");\n        return BlockchainPublicKey_1.BlockchainPublicKey.fromBuffer(val);\n    };\n    RealContractNode.prototype.sendShareToNode = function (account, inputTransaction, share) {\n        var url = this.inputUrl(this.contract, account, inputTransaction);\n        var inputDto = { data: share.toString(\"base64\") };\n        return (0, Api_1.putRequest)(url, inputDto);\n    };\n    RealContractNode.prototype.createMessage = function (variableId) {\n        var _this = this;\n        return bitmanipulation_ts_1.BigEndianByteOutput.serialize(function (out) {\n            out.writeBytes(Buffer.from(RealContractNode.VARIABLE_HEADER));\n            out.writeBytes(Buffer.from(_this.identity, \"hex\"));\n            out.writeBytes(Buffer.from(_this.contract, \"hex\"));\n            out.writeI32(variableId);\n        });\n    };\n    RealContractNode.prototype.outputUrl = function (variableId) {\n        return \"\".concat(this.restInterface, \"/real/binary/output/variable/\").concat(this.contract, \"/\").concat(variableId);\n    };\n    RealContractNode.prototype.inputUrl = function (contractAddress, accountAddress, transactionHash) {\n        return \"\".concat(this.restInterface, \"/real/binary/input/\").concat(contractAddress, \"/\").concat(accountAddress, \"/\").concat(transactionHash);\n    };\n    RealContractNode.VARIABLE_HEADER = [\n        \"s\",\n        \"h\",\n        \"a\",\n        \"m\",\n        \"i\",\n        \"r\",\n        \"v\",\n        \"a\",\n        \"r\",\n        \"i\",\n        \"a\",\n        \"b\",\n        \"l\",\n        \"e\",\n    ].map(function (s) { return s.charCodeAt(0); });\n    return RealContractNode;\n}());\nexports.RealContractNode = RealContractNode;\nfunction createSignatureDto(signature) {\n    return { signature: signature };\n}\n//# sourceMappingURL=RealContractNode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/node/RealContractNode.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/node/RealContractNodes.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/node/RealContractNodes.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TimeSleeper = exports.RealContractNodes = void 0;\nexports.timeout = timeout;\nvar __1 = __webpack_require__(/*! .. */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/index.js\");\nvar RealContractNodes = /** @class */ (function () {\n    function RealContractNodes(nodes, timeSleeper, numberOfSends) {\n        this.nodes = nodes;\n        this.timeSleeper = timeSleeper !== null && timeSleeper !== void 0 ? timeSleeper : new TimeSleeper(timeout);\n        this.numberOfSends = numberOfSends !== null && numberOfSends !== void 0 ? numberOfSends : 4;\n    }\n    RealContractNodes.prototype.fetchSharesFromNodes = function (owner, variableId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var sharesFromNodes;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(this.nodes.map(function (node) { return __awaiter(_this, void 0, void 0, function () {\n                            var messageToBeSigned, signedMessage;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        messageToBeSigned = node.createMessage(variableId);\n                                        return [4 /*yield*/, owner.sign(__1.CryptoUtils.hashBuffer(messageToBeSigned))];\n                                    case 1:\n                                        signedMessage = _a.sent();\n                                        return [2 /*return*/, node.fetchSharesFromNode(signedMessage, variableId)];\n                                }\n                            });\n                        }); }))];\n                    case 1:\n                        sharesFromNodes = _a.sent();\n                        return [2 /*return*/, __1.BinarySecretShares.read(sharesFromNodes)];\n                }\n            });\n        });\n    };\n    RealContractNodes.prototype.sendSharesToNodes = function (transactionHash, sender, blindedShares) {\n        return __awaiter(this, void 0, void 0, function () {\n            var hasSucceeded, i, numberOfSucceeded;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        hasSucceeded = [false, false, false, false];\n                        i = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < this.numberOfSends)) return [3 /*break*/, 6];\n                        if (!(i != 0)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.timeSleeper.sleep(5000 * i)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [4 /*yield*/, Promise.all(this.nodes.map(function (node, index) { return __awaiter(_this, void 0, void 0, function () {\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        if (!!hasSucceeded[index]) return [3 /*break*/, 2];\n                                        return [4 /*yield*/, node\n                                                .sendShareToNode(sender, transactionHash, blindedShares.shares[index])\n                                                .then(function (bool) { return (hasSucceeded[index] = bool); })\n                                                // eslint-disable-next-line @typescript-eslint/no-empty-function\n                                                .catch(function () { })];\n                                    case 1:\n                                        _a.sent();\n                                        _a.label = 2;\n                                    case 2: return [2 /*return*/];\n                                }\n                            });\n                        }); }))];\n                    case 4:\n                        _a.sent();\n                        if (!hasSucceeded.includes(false)) {\n                            return [2 /*return*/];\n                        }\n                        _a.label = 5;\n                    case 5:\n                        i++;\n                        return [3 /*break*/, 1];\n                    case 6:\n                        numberOfSucceeded = hasSucceeded.filter(function (p) { return p; }).length;\n                        if (numberOfSucceeded < this.nodes.length - 1) {\n                            throw Error(\"Unable to send shares to nodes\");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RealContractNodes.prototype.getPublicKeysOfNodes = function () {\n        return this.nodes.map(function (node) { return node.getPublicKey(); });\n    };\n    return RealContractNodes;\n}());\nexports.RealContractNodes = RealContractNodes;\nfunction timeout(msec) {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new Promise(function (f) { return setTimeout(f, msec); })];\n        });\n    });\n}\nvar TimeSleeper = /** @class */ (function () {\n    function TimeSleeper(sleepFun) {\n        this.sleepFun = sleepFun;\n    }\n    /**\n     * Sleep.\n     *\n     * @param millis duration to sleep for\n     */\n    TimeSleeper.prototype.sleep = function (millis) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.sleepFun(millis)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return TimeSleeper;\n}());\nexports.TimeSleeper = TimeSleeper;\n//# sourceMappingURL=RealContractNodes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/node/RealContractNodes.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/node/RealZkNodes.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/node/RealZkNodes.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RealZkNodes = void 0;\nvar RealContractNode_1 = __webpack_require__(/*! ./RealContractNode */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/node/RealContractNode.js\");\nvar RealContractNodes_1 = __webpack_require__(/*! ./RealContractNodes */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/node/RealContractNodes.js\");\n/** Get node information about the REAL Nodes associated with a contract. */\nvar RealZkNodes = /** @class */ (function () {\n    function RealZkNodes(blockchainClient) {\n        this.blockchainClient = blockchainClient;\n    }\n    RealZkNodes.create = function (blockchainClient) {\n        return new RealZkNodes(blockchainClient);\n    };\n    /**\n     * Create the RealZkNodes used for communicating with the nodes and chain when sending inputs and\n     * getting secrets from the nodes.\n     *\n     * @param contractAddress address of the zk contract.\n     * @return the nodes to send interactions with.\n     */\n    RealZkNodes.prototype.getNodes = function (contractAddress) {\n        return __awaiter(this, void 0, void 0, function () {\n            var zkContract, nodelist, nodes, i, engineInformation, identity, publicKey, restInterface;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.blockchainClient.getContractState(contractAddress)];\n                    case 1:\n                        zkContract = _a.sent();\n                        if (zkContract === undefined) {\n                            throw new Error(\"Couldn't get contract data\");\n                        }\n                        nodelist = zkContract.serializedContract.engines.engines;\n                        nodes = new Array();\n                        for (i = 0; i < nodelist.length; i++) {\n                            engineInformation = nodelist[i];\n                            identity = engineInformation.identity;\n                            publicKey = engineInformation.publicKey;\n                            restInterface = engineInformation.restInterface;\n                            nodes.push(new RealContractNode_1.RealContractNode(contractAddress, identity, publicKey, restInterface));\n                        }\n                        return [2 /*return*/, new RealContractNodes_1.RealContractNodes(nodes)];\n                }\n            });\n        });\n    };\n    return RealZkNodes;\n}());\nexports.RealZkNodes = RealZkNodes;\n//# sourceMappingURL=RealZkNodes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/node/RealZkNodes.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Api.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/util/Api.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRequest = getRequest;\nexports.putRequest = putRequest;\nexports.postRequest = postRequest;\nvar postHeaders = {\n    Accept: \"application/json, text/plain, */*\",\n    \"Content-Type\": \"application/json\",\n};\nvar getHeaders = {\n    Accept: \"application/json, text/plain, */*\",\n};\nfunction buildOptions(method, headers, entityBytes) {\n    var result = { method: method, headers: headers, body: null };\n    if (entityBytes != null) {\n        result.body = JSON.stringify(entityBytes);\n    }\n    return result;\n}\n/**\n * Make a http get-request.\n *\n * @param url the url to request.\n * @return a promise containing the result of the get request.\n */\nfunction getRequest(url) {\n    var options = buildOptions(\"GET\", getHeaders, null);\n    return handleFetch(fetch(url, options));\n}\n/**\n * Make a http put-request.\n *\n * @param url the url to request.\n * @param object the object to put.\n * @return a promise containing whether the put succeeded or not.\n */\nfunction putRequest(url, object) {\n    var options = buildOptions(\"PUT\", postHeaders, object);\n    return fetch(url, options)\n        .then(function (response) { return response.ok; })\n        .catch(function () { return false; });\n}\n/**\n * Make a http post-request.\n *\n * @param url the url to request.\n * @param object the object to post.\n * @return a promise containing the result of the post request.\n */\nfunction postRequest(url, object) {\n    var options = buildOptions(\"POST\", postHeaders, object);\n    return handleFetch(fetch(url, options));\n}\nfunction handleFetch(promise) {\n    return promise\n        .then(function (response) {\n        if (response.status === 200) {\n            return response.json();\n        }\n    })\n        .catch(function () { return undefined; });\n}\n//# sourceMappingURL=Api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL0FwaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHFCQUFxQjtBQUN6RCw2QkFBNkIsZUFBZTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsNkJBQTZCLG1CQUFtQjtBQUNoRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL0FwaS5qcz8zN2FmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRSZXF1ZXN0ID0gZ2V0UmVxdWVzdDtcbmV4cG9ydHMucHV0UmVxdWVzdCA9IHB1dFJlcXVlc3Q7XG5leHBvcnRzLnBvc3RSZXF1ZXN0ID0gcG9zdFJlcXVlc3Q7XG52YXIgcG9zdEhlYWRlcnMgPSB7XG4gICAgQWNjZXB0OiBcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKlwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxufTtcbnZhciBnZXRIZWFkZXJzID0ge1xuICAgIEFjY2VwdDogXCJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLypcIixcbn07XG5mdW5jdGlvbiBidWlsZE9wdGlvbnMobWV0aG9kLCBoZWFkZXJzLCBlbnRpdHlCeXRlcykge1xuICAgIHZhciByZXN1bHQgPSB7IG1ldGhvZDogbWV0aG9kLCBoZWFkZXJzOiBoZWFkZXJzLCBib2R5OiBudWxsIH07XG4gICAgaWYgKGVudGl0eUJ5dGVzICE9IG51bGwpIHtcbiAgICAgICAgcmVzdWx0LmJvZHkgPSBKU09OLnN0cmluZ2lmeShlbnRpdHlCeXRlcyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIE1ha2UgYSBodHRwIGdldC1yZXF1ZXN0LlxuICpcbiAqIEBwYXJhbSB1cmwgdGhlIHVybCB0byByZXF1ZXN0LlxuICogQHJldHVybiBhIHByb21pc2UgY29udGFpbmluZyB0aGUgcmVzdWx0IG9mIHRoZSBnZXQgcmVxdWVzdC5cbiAqL1xuZnVuY3Rpb24gZ2V0UmVxdWVzdCh1cmwpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGJ1aWxkT3B0aW9ucyhcIkdFVFwiLCBnZXRIZWFkZXJzLCBudWxsKTtcbiAgICByZXR1cm4gaGFuZGxlRmV0Y2goZmV0Y2godXJsLCBvcHRpb25zKSk7XG59XG4vKipcbiAqIE1ha2UgYSBodHRwIHB1dC1yZXF1ZXN0LlxuICpcbiAqIEBwYXJhbSB1cmwgdGhlIHVybCB0byByZXF1ZXN0LlxuICogQHBhcmFtIG9iamVjdCB0aGUgb2JqZWN0IHRvIHB1dC5cbiAqIEByZXR1cm4gYSBwcm9taXNlIGNvbnRhaW5pbmcgd2hldGhlciB0aGUgcHV0IHN1Y2NlZWRlZCBvciBub3QuXG4gKi9cbmZ1bmN0aW9uIHB1dFJlcXVlc3QodXJsLCBvYmplY3QpIHtcbiAgICB2YXIgb3B0aW9ucyA9IGJ1aWxkT3B0aW9ucyhcIlBVVFwiLCBwb3N0SGVhZGVycywgb2JqZWN0KTtcbiAgICByZXR1cm4gZmV0Y2godXJsLCBvcHRpb25zKVxuICAgICAgICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsgcmV0dXJuIHJlc3BvbnNlLm9rOyB9KVxuICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKCkgeyByZXR1cm4gZmFsc2U7IH0pO1xufVxuLyoqXG4gKiBNYWtlIGEgaHR0cCBwb3N0LXJlcXVlc3QuXG4gKlxuICogQHBhcmFtIHVybCB0aGUgdXJsIHRvIHJlcXVlc3QuXG4gKiBAcGFyYW0gb2JqZWN0IHRoZSBvYmplY3QgdG8gcG9zdC5cbiAqIEByZXR1cm4gYSBwcm9taXNlIGNvbnRhaW5pbmcgdGhlIHJlc3VsdCBvZiB0aGUgcG9zdCByZXF1ZXN0LlxuICovXG5mdW5jdGlvbiBwb3N0UmVxdWVzdCh1cmwsIG9iamVjdCkge1xuICAgIHZhciBvcHRpb25zID0gYnVpbGRPcHRpb25zKFwiUE9TVFwiLCBwb3N0SGVhZGVycywgb2JqZWN0KTtcbiAgICByZXR1cm4gaGFuZGxlRmV0Y2goZmV0Y2godXJsLCBvcHRpb25zKSk7XG59XG5mdW5jdGlvbiBoYW5kbGVGZXRjaChwcm9taXNlKSB7XG4gICAgcmV0dXJuIHByb21pc2VcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgfVxuICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbiAoKSB7IHJldHVybiB1bmRlZmluZWQ7IH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Api.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/BinaryExtensionFieldElement.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/util/BinaryExtensionFieldElement.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BinaryExtensionFieldElement = void 0;\nvar Polynomial_1 = __webpack_require__(/*! ./Polynomial */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Polynomial.js\");\n/**\n * A binary extension field element.\n */\nvar BinaryExtensionFieldElement = /** @class */ (function () {\n    function BinaryExtensionFieldElement(value) {\n        this.value = value;\n    }\n    /**\n     * Create a polynomial.\n     * @param coefficients the coefficients of the polynomial\n     */\n    BinaryExtensionFieldElement.createPoly = function (coefficients) {\n        return Polynomial_1.Polynomial.create(coefficients, this.ZERO);\n    };\n    /**\n     * Create a new field element with the given value.\n     * @param value the value\n     */\n    BinaryExtensionFieldElement.createElement = function (value) {\n        return new BinaryExtensionFieldElement(value & 15);\n    };\n    /**\n     * Get the computation alphas for this field.\n     * @returns the computation alphas\n     */\n    BinaryExtensionFieldElement.computationAlphas = function () {\n        return Constants.computationAlphas;\n    };\n    /** @inheritDoc */\n    BinaryExtensionFieldElement.prototype.add = function (other) {\n        return Constants.elements[other.value ^ this.value];\n    };\n    /** @inheritDoc */\n    BinaryExtensionFieldElement.prototype.subtract = function (other) {\n        return Constants.elements[other.value ^ this.value];\n    };\n    /** @inheritDoc */\n    BinaryExtensionFieldElement.prototype.multiply = function (other) {\n        var index = other.value * 16 + this.value;\n        return Constants.elements[Constants.lookup[index]];\n    };\n    /** @inheritDoc */\n    BinaryExtensionFieldElement.prototype.modInverse = function () {\n        return Constants.elements[Constants.multiplicativeInverse[this.value]];\n    };\n    /** @inheritDoc */\n    BinaryExtensionFieldElement.prototype.negate = function () {\n        return this;\n    };\n    /** @inheritDoc */\n    BinaryExtensionFieldElement.prototype.squareRoot = function () {\n        return Constants.elements[Constants.squareRootLookUp[this.value]];\n    };\n    /** @inheritDoc */\n    BinaryExtensionFieldElement.prototype.isZero = function () {\n        return this.value === 0;\n    };\n    /** @inheritDoc */\n    BinaryExtensionFieldElement.prototype.isOne = function () {\n        return this.value === 1;\n    };\n    /** @inheritDoc */\n    BinaryExtensionFieldElement.prototype.isEqualTo = function (that) {\n        return that.value === this.value;\n    };\n    /**\n     * The zero element.\n     */\n    BinaryExtensionFieldElement.ZERO = BinaryExtensionFieldElement.createElement(0);\n    /**\n     * The one element.\n     */\n    BinaryExtensionFieldElement.ONE = BinaryExtensionFieldElement.createElement(1);\n    return BinaryExtensionFieldElement;\n}());\nexports.BinaryExtensionFieldElement = BinaryExtensionFieldElement;\nvar Constants = {\n    elements: [\n        BinaryExtensionFieldElement.createElement(0),\n        BinaryExtensionFieldElement.createElement(1),\n        BinaryExtensionFieldElement.createElement(2),\n        BinaryExtensionFieldElement.createElement(3),\n        BinaryExtensionFieldElement.createElement(4),\n        BinaryExtensionFieldElement.createElement(5),\n        BinaryExtensionFieldElement.createElement(6),\n        BinaryExtensionFieldElement.createElement(7),\n        BinaryExtensionFieldElement.createElement(8),\n        BinaryExtensionFieldElement.createElement(9),\n        BinaryExtensionFieldElement.createElement(10),\n        BinaryExtensionFieldElement.createElement(11),\n        BinaryExtensionFieldElement.createElement(12),\n        BinaryExtensionFieldElement.createElement(13),\n        BinaryExtensionFieldElement.createElement(14),\n        BinaryExtensionFieldElement.createElement(15),\n    ],\n    computationAlphas: [\n        BinaryExtensionFieldElement.createElement(1),\n        BinaryExtensionFieldElement.createElement(2),\n        BinaryExtensionFieldElement.createElement(3),\n        BinaryExtensionFieldElement.createElement(4),\n    ],\n    multiplicativeInverse: [\n        0, 0x01, 0x09, 0x0e, 0x0d, 0x0b, 0x07, 0x06, 0x0f, 0x02, 0x0c, 0x05, 0x0a, 0x04, 0x03, 0x08,\n    ],\n    squareRootLookUp: [\n        0, 0x01, 0x05, 0x04, 0x02, 0x03, 0x07, 0x06, 0x0a, 0x0b, 0x0f, 0x0e, 0x08, 0x09, 0x0d, 0x0c,\n    ],\n    lookup: [\n        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,\n        0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0, 0x02, 0x04, 0x06, 0x08, 0x0a, 0x0c, 0x0e,\n        0x03, 0x01, 0x07, 0x05, 0x0b, 0x09, 0x0f, 0x0d, 0, 0x03, 0x06, 0x05, 0x0c, 0x0f, 0x0a, 0x09,\n        0x0b, 0x08, 0x0d, 0x0e, 0x07, 0x04, 0x01, 0x02, 0, 0x04, 0x08, 0x0c, 0x03, 0x07, 0x0b, 0x0f,\n        0x06, 0x02, 0x0e, 0x0a, 0x05, 0x01, 0x0d, 0x09, 0, 0x05, 0x0a, 0x0f, 0x07, 0x02, 0x0d, 0x08,\n        0x0e, 0x0b, 0x04, 0x01, 0x09, 0x0c, 0x03, 0x06, 0, 0x06, 0x0c, 0x0a, 0x0b, 0x0d, 0x07, 0x01,\n        0x05, 0x03, 0x09, 0x0f, 0x0e, 0x08, 0x02, 0x04, 0, 0x07, 0x0e, 0x09, 0x0f, 0x08, 0x01, 0x06,\n        0x0d, 0x0a, 0x03, 0x04, 0x02, 0x05, 0x0c, 0x0b, 0, 0x08, 0x03, 0x0b, 0x06, 0x0e, 0x05, 0x0d,\n        0x0c, 0x04, 0x0f, 0x07, 0x0a, 0x02, 0x09, 0x01, 0, 0x09, 0x01, 0x08, 0x02, 0x0b, 0x03, 0x0a,\n        0x04, 0x0d, 0x05, 0x0c, 0x06, 0x0f, 0x07, 0x0e, 0, 0x0a, 0x07, 0x0d, 0x0e, 0x04, 0x09, 0x03,\n        0x0f, 0x05, 0x08, 0x02, 0x01, 0x0b, 0x06, 0x0c, 0, 0x0b, 0x05, 0x0e, 0x0a, 0x01, 0x0f, 0x04,\n        0x07, 0x0c, 0x02, 0x09, 0x0d, 0x06, 0x08, 0x03, 0, 0x0c, 0x0b, 0x07, 0x05, 0x09, 0x0e, 0x02,\n        0x0a, 0x06, 0x01, 0x0d, 0x0f, 0x03, 0x04, 0x08, 0, 0x0d, 0x09, 0x04, 0x01, 0x0c, 0x08, 0x05,\n        0x02, 0x0f, 0x0b, 0x06, 0x03, 0x0e, 0x0a, 0x07, 0, 0x0e, 0x0f, 0x01, 0x0d, 0x03, 0x02, 0x0c,\n        0x09, 0x07, 0x06, 0x08, 0x04, 0x0a, 0x0b, 0x05, 0, 0x0f, 0x0d, 0x02, 0x09, 0x06, 0x04, 0x0b,\n        0x01, 0x0e, 0x0c, 0x03, 0x08, 0x07, 0x05, 0x0a,\n    ],\n};\n//# sourceMappingURL=BinaryExtensionFieldElement.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/BinaryExtensionFieldElement.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/BlockchainPublicKey.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/util/BlockchainPublicKey.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockchainPublicKey = void 0;\n/** A public key on the PBC blockchain. */\nvar BlockchainPublicKey = /** @class */ (function () {\n    function BlockchainPublicKey(val) {\n        this.val = val;\n    }\n    /**\n     * Returns the blockchain public key encoded as a hex string.\n     *\n     * @return the hex string.\n     */\n    BlockchainPublicKey.prototype.asString = function () {\n        return this.val.toString(\"hex\");\n    };\n    /**\n     * Returns the blockchain public key as bytes.\n     *\n     * @return the bytes.\n     */\n    BlockchainPublicKey.prototype.asBuffer = function () {\n        return Buffer.from(this.val);\n    };\n    /**\n     * Creates a public key from a hex string.\n     *\n     * @param val the encoded public key.\n     * @return the blockchain public key.\n     */\n    BlockchainPublicKey.fromString = function (val) {\n        var buffer = Buffer.from(val, \"hex\");\n        this.validateLength(buffer);\n        return new BlockchainPublicKey(buffer);\n    };\n    /**\n     * Creates a public key from bytes.\n     *\n     * @param val the encoded public key.\n     * @return the blockchain public key.\n     */\n    BlockchainPublicKey.fromBuffer = function (val) {\n        var buffer = Buffer.from(val);\n        this.validateLength(buffer);\n        return new BlockchainPublicKey(val);\n    };\n    BlockchainPublicKey.validateLength = function (val) {\n        if (val.length !== BlockchainPublicKey.PUBLIC_KEY_LENGTH) {\n            throw new Error(\"BlockchainPublicKey expects exactly \".concat(BlockchainPublicKey.PUBLIC_KEY_LENGTH, \" bytes, but found \").concat(val.length));\n        }\n    };\n    BlockchainPublicKey.PUBLIC_KEY_LENGTH = 33;\n    return BlockchainPublicKey;\n}());\nexports.BlockchainPublicKey = BlockchainPublicKey;\n//# sourceMappingURL=BlockchainPublicKey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL0Jsb2NrY2hhaW5QdWJsaWNLZXkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL0Jsb2NrY2hhaW5QdWJsaWNLZXkuanM/MGFmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgKEMpIDIwMjIgLSAyMDIzIFBhcnRpc2lhIEJsb2NrY2hhaW4gRm91bmRhdGlvblxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbiAqIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4gKiAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuICpcbiAqIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuICogYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2ZcbiAqIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbiAqIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG4gKiBhbG9uZyB3aXRoIHRoaXMgcHJvZ3JhbS4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiAqXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxvY2tjaGFpblB1YmxpY0tleSA9IHZvaWQgMDtcbi8qKiBBIHB1YmxpYyBrZXkgb24gdGhlIFBCQyBibG9ja2NoYWluLiAqL1xudmFyIEJsb2NrY2hhaW5QdWJsaWNLZXkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQmxvY2tjaGFpblB1YmxpY0tleSh2YWwpIHtcbiAgICAgICAgdGhpcy52YWwgPSB2YWw7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGJsb2NrY2hhaW4gcHVibGljIGtleSBlbmNvZGVkIGFzIGEgaGV4IHN0cmluZy5cbiAgICAgKlxuICAgICAqIEByZXR1cm4gdGhlIGhleCBzdHJpbmcuXG4gICAgICovXG4gICAgQmxvY2tjaGFpblB1YmxpY0tleS5wcm90b3R5cGUuYXNTdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbC50b1N0cmluZyhcImhleFwiKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGJsb2NrY2hhaW4gcHVibGljIGtleSBhcyBieXRlcy5cbiAgICAgKlxuICAgICAqIEByZXR1cm4gdGhlIGJ5dGVzLlxuICAgICAqL1xuICAgIEJsb2NrY2hhaW5QdWJsaWNLZXkucHJvdG90eXBlLmFzQnVmZmVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20odGhpcy52YWwpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHB1YmxpYyBrZXkgZnJvbSBhIGhleCBzdHJpbmcuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsIHRoZSBlbmNvZGVkIHB1YmxpYyBrZXkuXG4gICAgICogQHJldHVybiB0aGUgYmxvY2tjaGFpbiBwdWJsaWMga2V5LlxuICAgICAqL1xuICAgIEJsb2NrY2hhaW5QdWJsaWNLZXkuZnJvbVN0cmluZyA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgdmFyIGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKHZhbCwgXCJoZXhcIik7XG4gICAgICAgIHRoaXMudmFsaWRhdGVMZW5ndGgoYnVmZmVyKTtcbiAgICAgICAgcmV0dXJuIG5ldyBCbG9ja2NoYWluUHVibGljS2V5KGJ1ZmZlcik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgcHVibGljIGtleSBmcm9tIGJ5dGVzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbCB0aGUgZW5jb2RlZCBwdWJsaWMga2V5LlxuICAgICAqIEByZXR1cm4gdGhlIGJsb2NrY2hhaW4gcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBCbG9ja2NoYWluUHVibGljS2V5LmZyb21CdWZmZXIgPSBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgIHZhciBidWZmZXIgPSBCdWZmZXIuZnJvbSh2YWwpO1xuICAgICAgICB0aGlzLnZhbGlkYXRlTGVuZ3RoKGJ1ZmZlcik7XG4gICAgICAgIHJldHVybiBuZXcgQmxvY2tjaGFpblB1YmxpY0tleSh2YWwpO1xuICAgIH07XG4gICAgQmxvY2tjaGFpblB1YmxpY0tleS52YWxpZGF0ZUxlbmd0aCA9IGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgICAgaWYgKHZhbC5sZW5ndGggIT09IEJsb2NrY2hhaW5QdWJsaWNLZXkuUFVCTElDX0tFWV9MRU5HVEgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkJsb2NrY2hhaW5QdWJsaWNLZXkgZXhwZWN0cyBleGFjdGx5IFwiLmNvbmNhdChCbG9ja2NoYWluUHVibGljS2V5LlBVQkxJQ19LRVlfTEVOR1RILCBcIiBieXRlcywgYnV0IGZvdW5kIFwiKS5jb25jYXQodmFsLmxlbmd0aCkpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBCbG9ja2NoYWluUHVibGljS2V5LlBVQkxJQ19LRVlfTEVOR1RIID0gMzM7XG4gICAgcmV0dXJuIEJsb2NrY2hhaW5QdWJsaWNLZXk7XG59KCkpO1xuZXhwb3J0cy5CbG9ja2NoYWluUHVibGljS2V5ID0gQmxvY2tjaGFpblB1YmxpY0tleTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJsb2NrY2hhaW5QdWJsaWNLZXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/BlockchainPublicKey.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Client.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/util/Client.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Client = void 0;\nvar Api_1 = __webpack_require__(/*! ./Api */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Api.js\");\n/** A client for interacting with contracts and accounts on a Partisia blockchain (PBC). */\nvar Client = /** @class */ (function () {\n    /**\n     * Create a new client.\n     *\n     * @param host the url of the host.\n     * @param numOfShards number of shards, default is 3.\n     */\n    function Client(host, numOfShards) {\n        this.host = host;\n        this.numOfShards = numOfShards !== null && numOfShards !== void 0 ? numOfShards : 3;\n    }\n    Client.prototype.contractStateQueryUrl = function (address) {\n        return \"\".concat(this.host).concat(this.shardForAddress(address), \"/blockchain/contracts/\").concat(address, \"?requireContractState=true\");\n    };\n    Client.prototype.shardForAddress = function (address) {\n        if (this.numOfShards == 0) {\n            return \"\";\n        }\n        var numOfShards = this.numOfShards;\n        var buffer = Buffer.from(address, \"hex\");\n        var shardIndex = Math.abs(buffer.readInt32BE(17)) % numOfShards;\n        return \"/shards/Shard\" + shardIndex;\n    };\n    /**\n     * Retrieve a contract state from the blockchain.\n     *\n     * @param address The address of the contract.\n     * @return A promise containing the retrieved contract state.\n     */\n    Client.prototype.getContractState = function (address) {\n        var url = this.contractStateQueryUrl(address);\n        return (0, Api_1.getRequest)(url);\n    };\n    return Client;\n}());\nexports.Client = Client;\n//# sourceMappingURL=Client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL0NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2QsWUFBWSxtQkFBTyxDQUFDLG9HQUFPO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL0NsaWVudC5qcz8zYmY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCAoQykgMjAyMiAtIDIwMjMgUGFydGlzaWEgQmxvY2tjaGFpbiBGb3VuZGF0aW9uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbiAqIGl0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEFmZmVybyBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbiAqIGFsb25nIHdpdGggdGhpcyBwcm9ncmFtLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5DbGllbnQgPSB2b2lkIDA7XG52YXIgQXBpXzEgPSByZXF1aXJlKFwiLi9BcGlcIik7XG4vKiogQSBjbGllbnQgZm9yIGludGVyYWN0aW5nIHdpdGggY29udHJhY3RzIGFuZCBhY2NvdW50cyBvbiBhIFBhcnRpc2lhIGJsb2NrY2hhaW4gKFBCQykuICovXG52YXIgQ2xpZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBjbGllbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gaG9zdCB0aGUgdXJsIG9mIHRoZSBob3N0LlxuICAgICAqIEBwYXJhbSBudW1PZlNoYXJkcyBudW1iZXIgb2Ygc2hhcmRzLCBkZWZhdWx0IGlzIDMuXG4gICAgICovXG4gICAgZnVuY3Rpb24gQ2xpZW50KGhvc3QsIG51bU9mU2hhcmRzKSB7XG4gICAgICAgIHRoaXMuaG9zdCA9IGhvc3Q7XG4gICAgICAgIHRoaXMubnVtT2ZTaGFyZHMgPSBudW1PZlNoYXJkcyAhPT0gbnVsbCAmJiBudW1PZlNoYXJkcyAhPT0gdm9pZCAwID8gbnVtT2ZTaGFyZHMgOiAzO1xuICAgIH1cbiAgICBDbGllbnQucHJvdG90eXBlLmNvbnRyYWN0U3RhdGVRdWVyeVVybCA9IGZ1bmN0aW9uIChhZGRyZXNzKSB7XG4gICAgICAgIHJldHVybiBcIlwiLmNvbmNhdCh0aGlzLmhvc3QpLmNvbmNhdCh0aGlzLnNoYXJkRm9yQWRkcmVzcyhhZGRyZXNzKSwgXCIvYmxvY2tjaGFpbi9jb250cmFjdHMvXCIpLmNvbmNhdChhZGRyZXNzLCBcIj9yZXF1aXJlQ29udHJhY3RTdGF0ZT10cnVlXCIpO1xuICAgIH07XG4gICAgQ2xpZW50LnByb3RvdHlwZS5zaGFyZEZvckFkZHJlc3MgPSBmdW5jdGlvbiAoYWRkcmVzcykge1xuICAgICAgICBpZiAodGhpcy5udW1PZlNoYXJkcyA9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbnVtT2ZTaGFyZHMgPSB0aGlzLm51bU9mU2hhcmRzO1xuICAgICAgICB2YXIgYnVmZmVyID0gQnVmZmVyLmZyb20oYWRkcmVzcywgXCJoZXhcIik7XG4gICAgICAgIHZhciBzaGFyZEluZGV4ID0gTWF0aC5hYnMoYnVmZmVyLnJlYWRJbnQzMkJFKDE3KSkgJSBudW1PZlNoYXJkcztcbiAgICAgICAgcmV0dXJuIFwiL3NoYXJkcy9TaGFyZFwiICsgc2hhcmRJbmRleDtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIGEgY29udHJhY3Qgc3RhdGUgZnJvbSB0aGUgYmxvY2tjaGFpbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhZGRyZXNzIFRoZSBhZGRyZXNzIG9mIHRoZSBjb250cmFjdC5cbiAgICAgKiBAcmV0dXJuIEEgcHJvbWlzZSBjb250YWluaW5nIHRoZSByZXRyaWV2ZWQgY29udHJhY3Qgc3RhdGUuXG4gICAgICovXG4gICAgQ2xpZW50LnByb3RvdHlwZS5nZXRDb250cmFjdFN0YXRlID0gZnVuY3Rpb24gKGFkZHJlc3MpIHtcbiAgICAgICAgdmFyIHVybCA9IHRoaXMuY29udHJhY3RTdGF0ZVF1ZXJ5VXJsKGFkZHJlc3MpO1xuICAgICAgICByZXR1cm4gKDAsIEFwaV8xLmdldFJlcXVlc3QpKHVybCk7XG4gICAgfTtcbiAgICByZXR1cm4gQ2xpZW50O1xufSgpKTtcbmV4cG9ydHMuQ2xpZW50ID0gQ2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Client.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/CryptoUtils.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/util/CryptoUtils.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CryptoUtils = void 0;\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nvar elliptic_1 = __webpack_require__(/*! elliptic */ \"(action-browser)/./node_modules/elliptic/lib/elliptic.js\");\nvar hash_js_1 = __webpack_require__(/*! hash.js */ \"(action-browser)/./node_modules/hash.js/lib/hash.js\");\nvar ec = new elliptic_1.ec(\"secp256k1\");\n/**\n * Generates a new key pair.\n *\n * @return the generated key pair.\n */\nfunction generateKeyPair() {\n    return ec.genKeyPair();\n}\n/**\n * Create a shared secret from a private and a public key.\n * @param keyPair the private key.\n * @param publicKey the public key.\n * @return the shared secret.\n */\nfunction createSharedKey(keyPair, publicKey) {\n    var pairFromBuffer = ec.keyFromPublic(publicKey);\n    var sharedRandom = keyPair.derive(pairFromBuffer.getPublic());\n    var sharedBuffer = sharedRandom.toArrayLike(Buffer, \"be\");\n    if (sharedRandom.bitLength() % 8 === 0) {\n        // Ensure that a sign bit is present in the byte encoding\n        sharedBuffer = Buffer.concat([Buffer.alloc(1), sharedBuffer]);\n    }\n    return hashBuffer(sharedBuffer);\n}\n/**\n * Create an aes cipher from a private key and the public key of the receiver of the encrypted message.\n *\n * @param keyPair the private key.\n * @param publicKey the public key of the receiver.\n */\nfunction createAesForParty(keyPair, publicKey) {\n    var sharedKey = createSharedKey(keyPair, publicKey);\n    var iv = sharedKey.slice(0, 16);\n    var secretKey = sharedKey.slice(16, 32);\n    return (0, crypto_1.createCipheriv)(\"aes-128-cbc\", secretKey, iv);\n}\n/**\n * Serializes a signature into byte.\n *\n * @param signature the signature.\n * @return the bytes.\n */\nfunction signatureToBuffer(signature) {\n    if (signature.recoveryParam == null) {\n        throw new Error(\"Recovery parameter is null\");\n    }\n    return Buffer.concat([\n        Buffer.from([signature.recoveryParam]),\n        signature.r.toArrayLike(Buffer, \"be\", 32),\n        signature.s.toArrayLike(Buffer, \"be\", 32),\n    ]);\n}\n/**\n * Computes the account address based on a key pair.\n *\n * @param keyPair the keypair of the account.\n * @return the address of the account.\n */\nfunction keyPairToAccountAddress(keyPair) {\n    var publicKey = keyPair.getPublic(false, \"array\");\n    var hash = (0, hash_js_1.sha256)();\n    hash.update(publicKey);\n    return \"00\" + hash.digest(\"hex\").substring(24);\n}\n/**\n * Creates a keypair based on the private key.\n *\n * @param privateKey the private key as a hex string.\n * @return the keypair.\n */\nfunction privateKeyToKeypair(privateKey) {\n    return ec.keyFromPrivate(privateKey);\n}\n/**\n * Computes the public key from a private key.\n *\n * @param privateKey the private key.\n * @return the public key.\n */\nfunction privateKeyToPublicKey(privateKey) {\n    var keyPair = privateKeyToKeypair(privateKey);\n    return Buffer.from(keyPair.getPublic(true, \"array\"));\n}\n/**\n * Computes the account address based on a private key.\n *\n * @param privateKey the private key.\n * @return the account address.\n */\nfunction privateKeyToAccountAddress(privateKey) {\n    return keyPairToAccountAddress(privateKeyToKeypair(privateKey));\n}\n/**\n * Computes the account address based on a public key.\n *\n * @param publicKey the public key.\n * @return the account address.\n */\nfunction publicKeyToAccountAddress(publicKey) {\n    return keyPairToAccountAddress(ec.keyFromPublic(publicKey));\n}\n/**\n * Hashes the buffers.\n *\n * @param buffers the buffers to be hashed.\n * @return the hash.\n */\nfunction hashBuffers(buffers) {\n    var hash = (0, hash_js_1.sha256)();\n    for (var _i = 0, buffers_1 = buffers; _i < buffers_1.length; _i++) {\n        var buffer = buffers_1[_i];\n        hash.update(buffer);\n    }\n    return Buffer.from(hash.digest());\n}\n/**\n * Hashes the buffer.\n *\n * @param buffer the buffer to be hashed.\n * @return the hash.\n */\nfunction hashBuffer(buffer) {\n    return hashBuffers([buffer]);\n}\n/** A collection of useful crypto functions. */\nexports.CryptoUtils = {\n    generateKeyPair: generateKeyPair,\n    createSharedKey: createSharedKey,\n    createAesForParty: createAesForParty,\n    signatureToBuffer: signatureToBuffer,\n    keyPairToAccountAddress: keyPairToAccountAddress,\n    privateKeyToKeypair: privateKeyToKeypair,\n    privateKeyToPublicKey: privateKeyToPublicKey,\n    privateKeyToAccountAddress: privateKeyToAccountAddress,\n    publicKeyToAccountAddress: publicKeyToAccountAddress,\n    hashBuffers: hashBuffers,\n    hashBuffer: hashBuffer,\n};\n//# sourceMappingURL=CryptoUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/CryptoUtils.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Lagrange.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/util/Lagrange.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Lagrange = void 0;\nvar Polynomial_1 = __webpack_require__(/*! ./Polynomial */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Polynomial.js\");\n/**\n * Try to interpolate a polynomial that passes through the supplied points.\n *\n * @param xs x-coordinates in the points\n * @param ys y-coordinates in the points\n * @param zero 0 element in the Finite Field.\n * @param one 1 element in the Finite Field.\n *\n * @returns the interpolated polynomial or null if unable to interpolate\n */\nfunction interpolate(xs, ys, zero, one) {\n    if (xs.length !== ys.length) {\n        throw new Error(\"xs and ys must be of same size\");\n    }\n    if (xs.length === 0) {\n        throw new Error(\"xs and ys must have at least one element\");\n    }\n    var n = xs.length;\n    var c = Array(n).fill(one);\n    c[0] = one;\n    for (var i = 0; i < n; i++) {\n        for (var j = i; j > 0; j--) {\n            c[j] = c[j - 1].subtract(c[j].multiply(xs[i]));\n        }\n        c[0] = c[0].multiply(xs[i].negate());\n    }\n    var coefficients = Array(n).fill(zero);\n    // Stryker disable next-line ArrayDeclaration\n    var tc = Array(n).fill(zero);\n    tc[n - 1] = one;\n    for (var i = 0; i < n; i++) {\n        var denominator = one;\n        for (var j = 0; j < n; j++) {\n            if (i !== j) {\n                denominator = denominator.multiply(xs[i].subtract(xs[j]));\n            }\n        }\n        var t = ys[i].multiply(denominator.modInverse());\n        coefficients[n - 1] = coefficients[n - 1].add(t.multiply(tc[n - 1]));\n        for (var j = n - 2; j >= 0; j--) {\n            tc[j] = c[j + 1].add(tc[j + 1].multiply(xs[i]));\n            coefficients[j] = coefficients[j].add(t.multiply(tc[j]));\n        }\n    }\n    return Polynomial_1.Polynomial.create(coefficients, zero);\n}\n/**\n * Interpolate the minimal polynomial that passes through all the supplied points. And verify that\n * the polynomial has a degree less that maximalDegree.\n *\n * @param xs x-coordinates in the points\n * @param ys y-coordinates in the points\n * @param zero 0 element in the Finite Field.\n * @param one 1 element in the Finite Field.\n * @param maximalDegree the expected maximal degree\n * @return the interpolated polynomial\n */\nfunction interpolateCheckDegree(xs, ys, maximalDegree, zero, one) {\n    var poly = interpolate(xs, ys, zero, one);\n    if (poly.degree() > maximalDegree) {\n        throw new Error(\"Interpolated polynomial has too high degree. Expected maximal=\".concat(maximalDegree, \", actual=\").concat(poly.degree()));\n    }\n    return poly;\n}\n/**\n * Utility for lagrange interpolation.\n */\nexports.Lagrange = {\n    interpolate: interpolate,\n    interpolateCheckDegree: interpolateCheckDegree,\n};\n//# sourceMappingURL=Lagrange.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL0xhZ3JhbmdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixtQkFBbUIsbUJBQU8sQ0FBQyxrSEFBYztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLE9BQU87QUFDM0Isd0JBQXdCLE9BQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixPQUFPO0FBQzNCO0FBQ0Esd0JBQXdCLE9BQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFFBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktdjAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL0xhZ3JhbmdlLmpzPzQwZDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxhZ3JhbmdlID0gdm9pZCAwO1xudmFyIFBvbHlub21pYWxfMSA9IHJlcXVpcmUoXCIuL1BvbHlub21pYWxcIik7XG4vKipcbiAqIFRyeSB0byBpbnRlcnBvbGF0ZSBhIHBvbHlub21pYWwgdGhhdCBwYXNzZXMgdGhyb3VnaCB0aGUgc3VwcGxpZWQgcG9pbnRzLlxuICpcbiAqIEBwYXJhbSB4cyB4LWNvb3JkaW5hdGVzIGluIHRoZSBwb2ludHNcbiAqIEBwYXJhbSB5cyB5LWNvb3JkaW5hdGVzIGluIHRoZSBwb2ludHNcbiAqIEBwYXJhbSB6ZXJvIDAgZWxlbWVudCBpbiB0aGUgRmluaXRlIEZpZWxkLlxuICogQHBhcmFtIG9uZSAxIGVsZW1lbnQgaW4gdGhlIEZpbml0ZSBGaWVsZC5cbiAqXG4gKiBAcmV0dXJucyB0aGUgaW50ZXJwb2xhdGVkIHBvbHlub21pYWwgb3IgbnVsbCBpZiB1bmFibGUgdG8gaW50ZXJwb2xhdGVcbiAqL1xuZnVuY3Rpb24gaW50ZXJwb2xhdGUoeHMsIHlzLCB6ZXJvLCBvbmUpIHtcbiAgICBpZiAoeHMubGVuZ3RoICE9PSB5cy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwieHMgYW5kIHlzIG11c3QgYmUgb2Ygc2FtZSBzaXplXCIpO1xuICAgIH1cbiAgICBpZiAoeHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInhzIGFuZCB5cyBtdXN0IGhhdmUgYXQgbGVhc3Qgb25lIGVsZW1lbnRcIik7XG4gICAgfVxuICAgIHZhciBuID0geHMubGVuZ3RoO1xuICAgIHZhciBjID0gQXJyYXkobikuZmlsbChvbmUpO1xuICAgIGNbMF0gPSBvbmU7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgZm9yICh2YXIgaiA9IGk7IGogPiAwOyBqLS0pIHtcbiAgICAgICAgICAgIGNbal0gPSBjW2ogLSAxXS5zdWJ0cmFjdChjW2pdLm11bHRpcGx5KHhzW2ldKSk7XG4gICAgICAgIH1cbiAgICAgICAgY1swXSA9IGNbMF0ubXVsdGlwbHkoeHNbaV0ubmVnYXRlKCkpO1xuICAgIH1cbiAgICB2YXIgY29lZmZpY2llbnRzID0gQXJyYXkobikuZmlsbCh6ZXJvKTtcbiAgICAvLyBTdHJ5a2VyIGRpc2FibGUgbmV4dC1saW5lIEFycmF5RGVjbGFyYXRpb25cbiAgICB2YXIgdGMgPSBBcnJheShuKS5maWxsKHplcm8pO1xuICAgIHRjW24gLSAxXSA9IG9uZTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG47IGkrKykge1xuICAgICAgICB2YXIgZGVub21pbmF0b3IgPSBvbmU7XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbjsgaisrKSB7XG4gICAgICAgICAgICBpZiAoaSAhPT0gaikge1xuICAgICAgICAgICAgICAgIGRlbm9taW5hdG9yID0gZGVub21pbmF0b3IubXVsdGlwbHkoeHNbaV0uc3VidHJhY3QoeHNbal0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2YXIgdCA9IHlzW2ldLm11bHRpcGx5KGRlbm9taW5hdG9yLm1vZEludmVyc2UoKSk7XG4gICAgICAgIGNvZWZmaWNpZW50c1tuIC0gMV0gPSBjb2VmZmljaWVudHNbbiAtIDFdLmFkZCh0Lm11bHRpcGx5KHRjW24gLSAxXSkpO1xuICAgICAgICBmb3IgKHZhciBqID0gbiAtIDI7IGogPj0gMDsgai0tKSB7XG4gICAgICAgICAgICB0Y1tqXSA9IGNbaiArIDFdLmFkZCh0Y1tqICsgMV0ubXVsdGlwbHkoeHNbaV0pKTtcbiAgICAgICAgICAgIGNvZWZmaWNpZW50c1tqXSA9IGNvZWZmaWNpZW50c1tqXS5hZGQodC5tdWx0aXBseSh0Y1tqXSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBQb2x5bm9taWFsXzEuUG9seW5vbWlhbC5jcmVhdGUoY29lZmZpY2llbnRzLCB6ZXJvKTtcbn1cbi8qKlxuICogSW50ZXJwb2xhdGUgdGhlIG1pbmltYWwgcG9seW5vbWlhbCB0aGF0IHBhc3NlcyB0aHJvdWdoIGFsbCB0aGUgc3VwcGxpZWQgcG9pbnRzLiBBbmQgdmVyaWZ5IHRoYXRcbiAqIHRoZSBwb2x5bm9taWFsIGhhcyBhIGRlZ3JlZSBsZXNzIHRoYXQgbWF4aW1hbERlZ3JlZS5cbiAqXG4gKiBAcGFyYW0geHMgeC1jb29yZGluYXRlcyBpbiB0aGUgcG9pbnRzXG4gKiBAcGFyYW0geXMgeS1jb29yZGluYXRlcyBpbiB0aGUgcG9pbnRzXG4gKiBAcGFyYW0gemVybyAwIGVsZW1lbnQgaW4gdGhlIEZpbml0ZSBGaWVsZC5cbiAqIEBwYXJhbSBvbmUgMSBlbGVtZW50IGluIHRoZSBGaW5pdGUgRmllbGQuXG4gKiBAcGFyYW0gbWF4aW1hbERlZ3JlZSB0aGUgZXhwZWN0ZWQgbWF4aW1hbCBkZWdyZWVcbiAqIEByZXR1cm4gdGhlIGludGVycG9sYXRlZCBwb2x5bm9taWFsXG4gKi9cbmZ1bmN0aW9uIGludGVycG9sYXRlQ2hlY2tEZWdyZWUoeHMsIHlzLCBtYXhpbWFsRGVncmVlLCB6ZXJvLCBvbmUpIHtcbiAgICB2YXIgcG9seSA9IGludGVycG9sYXRlKHhzLCB5cywgemVybywgb25lKTtcbiAgICBpZiAocG9seS5kZWdyZWUoKSA+IG1heGltYWxEZWdyZWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW50ZXJwb2xhdGVkIHBvbHlub21pYWwgaGFzIHRvbyBoaWdoIGRlZ3JlZS4gRXhwZWN0ZWQgbWF4aW1hbD1cIi5jb25jYXQobWF4aW1hbERlZ3JlZSwgXCIsIGFjdHVhbD1cIikuY29uY2F0KHBvbHkuZGVncmVlKCkpKTtcbiAgICB9XG4gICAgcmV0dXJuIHBvbHk7XG59XG4vKipcbiAqIFV0aWxpdHkgZm9yIGxhZ3JhbmdlIGludGVycG9sYXRpb24uXG4gKi9cbmV4cG9ydHMuTGFncmFuZ2UgPSB7XG4gICAgaW50ZXJwb2xhdGU6IGludGVycG9sYXRlLFxuICAgIGludGVycG9sYXRlQ2hlY2tEZWdyZWU6IGludGVycG9sYXRlQ2hlY2tEZWdyZWUsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TGFncmFuZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Lagrange.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Polynomial.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/util/Polynomial.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Polynomial = void 0;\n/** Polynomials with coefficients in a finite field. */\nvar Polynomial = /** @class */ (function () {\n    function Polynomial(coefficients) {\n        this.coefficients = coefficients;\n    }\n    /**\n     * Construct a polynomial from a set of coefficients. The degree of the resultant polynomial is\n     * assumed to be equal to the number of coefficients minus 1. The constant term of the polynomial\n     * is assumed to be stored in the first position of the coefficients.\n     *\n     * @param coefficients the coefficients of the polynomial\n     * @param zero zero element of the field\n     * @return the constructed polynomial\n     */\n    Polynomial.create = function (coefficients, zero) {\n        return new Polynomial(this.filterHighZeroes(coefficients, zero));\n    };\n    Polynomial.filterHighZeroes = function (coefficients, zero) {\n        for (var i = coefficients.length - 1; i >= 0; i--) {\n            if (!coefficients[i].isZero()) {\n                return coefficients.slice(0, i + 1);\n            }\n        }\n        return [zero];\n    };\n    /**\n     * Returns the coefficients of the polynomial.\n     *\n     * @return the coefficients of the polynomial\n     */\n    Polynomial.prototype.getCoefficients = function () {\n        return this.coefficients.slice();\n    };\n    /**\n     * Returns the degree of this polynomial.\n     *\n     * @return the degree of the polynomial\n     */\n    Polynomial.prototype.degree = function () {\n        return this.coefficients.length - 1;\n    };\n    /**\n     * Returns the constant term of the polynomial.\n     *\n     * @return the term stored on position 0 of the coefficients of this polynomial\n     */\n    Polynomial.prototype.getConstantTerm = function () {\n        return this.coefficients[0];\n    };\n    /**\n     * Evaluates this polynomial on a point. That is, if F is the polynomial and x a value, then this\n     * method returns F(x).\n     *\n     * @param point the point to evaluate this polynomial on\n     * @return F(point) where F is this polynomial\n     */\n    Polynomial.prototype.evaluate = function (point) {\n        var degree = this.degree();\n        var result = this.coefficients[degree];\n        for (var i = degree - 1; i >= 0; --i) {\n            var current = this.coefficients[i];\n            result = current.add(point.multiply(result));\n        }\n        return result;\n    };\n    return Polynomial;\n}());\nexports.Polynomial = Polynomial;\n//# sourceMappingURL=Polynomial.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL1BvbHlub21pYWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLFFBQVE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQHBhcnRpc2lhYmxvY2tjaGFpbi96ay1jbGllbnQvdGFyZ2V0L21haW4vdXRpbC9Qb2x5bm9taWFsLmpzPzQzN2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbHlub21pYWwgPSB2b2lkIDA7XG4vKiogUG9seW5vbWlhbHMgd2l0aCBjb2VmZmljaWVudHMgaW4gYSBmaW5pdGUgZmllbGQuICovXG52YXIgUG9seW5vbWlhbCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQb2x5bm9taWFsKGNvZWZmaWNpZW50cykge1xuICAgICAgICB0aGlzLmNvZWZmaWNpZW50cyA9IGNvZWZmaWNpZW50cztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgcG9seW5vbWlhbCBmcm9tIGEgc2V0IG9mIGNvZWZmaWNpZW50cy4gVGhlIGRlZ3JlZSBvZiB0aGUgcmVzdWx0YW50IHBvbHlub21pYWwgaXNcbiAgICAgKiBhc3N1bWVkIHRvIGJlIGVxdWFsIHRvIHRoZSBudW1iZXIgb2YgY29lZmZpY2llbnRzIG1pbnVzIDEuIFRoZSBjb25zdGFudCB0ZXJtIG9mIHRoZSBwb2x5bm9taWFsXG4gICAgICogaXMgYXNzdW1lZCB0byBiZSBzdG9yZWQgaW4gdGhlIGZpcnN0IHBvc2l0aW9uIG9mIHRoZSBjb2VmZmljaWVudHMuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY29lZmZpY2llbnRzIHRoZSBjb2VmZmljaWVudHMgb2YgdGhlIHBvbHlub21pYWxcbiAgICAgKiBAcGFyYW0gemVybyB6ZXJvIGVsZW1lbnQgb2YgdGhlIGZpZWxkXG4gICAgICogQHJldHVybiB0aGUgY29uc3RydWN0ZWQgcG9seW5vbWlhbFxuICAgICAqL1xuICAgIFBvbHlub21pYWwuY3JlYXRlID0gZnVuY3Rpb24gKGNvZWZmaWNpZW50cywgemVybykge1xuICAgICAgICByZXR1cm4gbmV3IFBvbHlub21pYWwodGhpcy5maWx0ZXJIaWdoWmVyb2VzKGNvZWZmaWNpZW50cywgemVybykpO1xuICAgIH07XG4gICAgUG9seW5vbWlhbC5maWx0ZXJIaWdoWmVyb2VzID0gZnVuY3Rpb24gKGNvZWZmaWNpZW50cywgemVybykge1xuICAgICAgICBmb3IgKHZhciBpID0gY29lZmZpY2llbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICBpZiAoIWNvZWZmaWNpZW50c1tpXS5pc1plcm8oKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb2VmZmljaWVudHMuc2xpY2UoMCwgaSArIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbemVyb107XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjb2VmZmljaWVudHMgb2YgdGhlIHBvbHlub21pYWwuXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHRoZSBjb2VmZmljaWVudHMgb2YgdGhlIHBvbHlub21pYWxcbiAgICAgKi9cbiAgICBQb2x5bm9taWFsLnByb3RvdHlwZS5nZXRDb2VmZmljaWVudHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvZWZmaWNpZW50cy5zbGljZSgpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgZGVncmVlIG9mIHRoaXMgcG9seW5vbWlhbC5cbiAgICAgKlxuICAgICAqIEByZXR1cm4gdGhlIGRlZ3JlZSBvZiB0aGUgcG9seW5vbWlhbFxuICAgICAqL1xuICAgIFBvbHlub21pYWwucHJvdG90eXBlLmRlZ3JlZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29lZmZpY2llbnRzLmxlbmd0aCAtIDE7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBjb25zdGFudCB0ZXJtIG9mIHRoZSBwb2x5bm9taWFsLlxuICAgICAqXG4gICAgICogQHJldHVybiB0aGUgdGVybSBzdG9yZWQgb24gcG9zaXRpb24gMCBvZiB0aGUgY29lZmZpY2llbnRzIG9mIHRoaXMgcG9seW5vbWlhbFxuICAgICAqL1xuICAgIFBvbHlub21pYWwucHJvdG90eXBlLmdldENvbnN0YW50VGVybSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29lZmZpY2llbnRzWzBdO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogRXZhbHVhdGVzIHRoaXMgcG9seW5vbWlhbCBvbiBhIHBvaW50LiBUaGF0IGlzLCBpZiBGIGlzIHRoZSBwb2x5bm9taWFsIGFuZCB4IGEgdmFsdWUsIHRoZW4gdGhpc1xuICAgICAqIG1ldGhvZCByZXR1cm5zIEYoeCkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcG9pbnQgdGhlIHBvaW50IHRvIGV2YWx1YXRlIHRoaXMgcG9seW5vbWlhbCBvblxuICAgICAqIEByZXR1cm4gRihwb2ludCkgd2hlcmUgRiBpcyB0aGlzIHBvbHlub21pYWxcbiAgICAgKi9cbiAgICBQb2x5bm9taWFsLnByb3RvdHlwZS5ldmFsdWF0ZSA9IGZ1bmN0aW9uIChwb2ludCkge1xuICAgICAgICB2YXIgZGVncmVlID0gdGhpcy5kZWdyZWUoKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuY29lZmZpY2llbnRzW2RlZ3JlZV07XG4gICAgICAgIGZvciAodmFyIGkgPSBkZWdyZWUgLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSB0aGlzLmNvZWZmaWNpZW50c1tpXTtcbiAgICAgICAgICAgIHJlc3VsdCA9IGN1cnJlbnQuYWRkKHBvaW50Lm11bHRpcGx5KHJlc3VsdCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICByZXR1cm4gUG9seW5vbWlhbDtcbn0oKSk7XG5leHBvcnRzLlBvbHlub21pYWwgPSBQb2x5bm9taWFsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UG9seW5vbWlhbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/Polynomial.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/SignatureProviderKeyPair.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@partisiablockchain/zk-client/target/main/util/SignatureProviderKeyPair.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright (C) 2022 - 2023 Partisia Blockchain Foundation\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SignatureProviderKeyPair = void 0;\nvar CryptoUtils_1 = __webpack_require__(/*! ./CryptoUtils */ \"(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/CryptoUtils.js\");\nvar SignatureProviderKeyPair = /** @class */ (function () {\n    function SignatureProviderKeyPair(keyPair) {\n        this.keyPair = keyPair;\n    }\n    SignatureProviderKeyPair.prototype.sign = function (hash) {\n        return Promise.resolve(CryptoUtils_1.CryptoUtils.signatureToBuffer(this.keyPair.sign(hash)));\n    };\n    return SignatureProviderKeyPair;\n}());\nexports.SignatureProviderKeyPair = SignatureProviderKeyPair;\n//# sourceMappingURL=SignatureProviderKeyPair.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcGFydGlzaWFibG9ja2NoYWluL3prLWNsaWVudC90YXJnZXQvbWFpbi91dGlsL1NpZ25hdHVyZVByb3ZpZGVyS2V5UGFpci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0M7QUFDaEMsb0JBQW9CLG1CQUFPLENBQUMsb0hBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxnQ0FBZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS12MC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL0BwYXJ0aXNpYWJsb2NrY2hhaW4vemstY2xpZW50L3RhcmdldC9tYWluL3V0aWwvU2lnbmF0dXJlUHJvdmlkZXJLZXlQYWlyLmpzPzk4OTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IChDKSAyMDIyIC0gMjAyMyBQYXJ0aXNpYSBCbG9ja2NoYWluIEZvdW5kYXRpb25cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuICogaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgQWZmZXJvIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG4gKiB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuICogKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cbiAqXG4gKiBUaGlzIHByb2dyYW0gaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbiAqIGJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG4gKiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG4gKiBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIFlvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBBZmZlcm8gR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4gKlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNpZ25hdHVyZVByb3ZpZGVyS2V5UGFpciA9IHZvaWQgMDtcbnZhciBDcnlwdG9VdGlsc18xID0gcmVxdWlyZShcIi4vQ3J5cHRvVXRpbHNcIik7XG52YXIgU2lnbmF0dXJlUHJvdmlkZXJLZXlQYWlyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNpZ25hdHVyZVByb3ZpZGVyS2V5UGFpcihrZXlQYWlyKSB7XG4gICAgICAgIHRoaXMua2V5UGFpciA9IGtleVBhaXI7XG4gICAgfVxuICAgIFNpZ25hdHVyZVByb3ZpZGVyS2V5UGFpci5wcm90b3R5cGUuc2lnbiA9IGZ1bmN0aW9uIChoYXNoKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoQ3J5cHRvVXRpbHNfMS5DcnlwdG9VdGlscy5zaWduYXR1cmVUb0J1ZmZlcih0aGlzLmtleVBhaXIuc2lnbihoYXNoKSkpO1xuICAgIH07XG4gICAgcmV0dXJuIFNpZ25hdHVyZVByb3ZpZGVyS2V5UGFpcjtcbn0oKSk7XG5leHBvcnRzLlNpZ25hdHVyZVByb3ZpZGVyS2V5UGFpciA9IFNpZ25hdHVyZVByb3ZpZGVyS2V5UGFpcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpZ25hdHVyZVByb3ZpZGVyS2V5UGFpci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@partisiablockchain/zk-client/target/main/util/SignatureProviderKeyPair.js\n");

/***/ })

};
;